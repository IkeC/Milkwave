MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=3
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.843
fWaveScale=1.582
fWaveSmoothing=0.900
fWaveParam=-0.200
fModWaveAlphaStart=0.910
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.772
fZoomExponent=1.00100
fShader=0.000
zoom=1.00700
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00000
sx=1.00000
sy=1.00000
wave_r=0.591
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.010
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
per_frame_1=wave_x = wave_x + 0.2*( 0.60*sin(2.121*time) + 0.5*sin(1.621*time) );
per_frame_2=wave_y = wave_y + 0.2*( 0.60*sin(1.742*time) + 0.5*sin(2.322*time) );
per_frame_3=wave_r = wave_r + 0.200*( 0.60*sin(0.823*time) + 0.40*sin(0.916*time) );
per_frame_4=wave_g = wave_g + 0.500*( 0.60*sin(0.900*time) + 0.40*sin(1.023*time) );
per_frame_5=wave_b = wave_b + 0.500*( 0.60*sin(0.808*time) + 0.40*sin(0.949*time) );
per_pixel_1=zoom = zoom + 0.01 * ( sin(1*sin(2*(sqrt(3)-rad)*ang)) + 0.0 );
warp_1=`shader_body
warp_2=`{
warp_3=`uv = lerp(uv_orig,uv,0.22);
warp_4=`
warp_5=`float2 d = texsize.zw * 8;
warp_6=`float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*bass*3) );
warp_7=`float3 dy = ( GetBlur1(uv + float2(4,1)*d) - GetBlur1(uv-float2(3,1)*bass*3) );
warp_8=`
warp_9=`uv += float2(lum(dx),lum(dy))*texsize.zw*15;
warp_10=`ret = tex2d(sampler_fc_main, uv) - 0.007;
warp_11=`
warp_12=`}
comp_1=`#define sat saturate
comp_2=`float z, z0, radi;
comp_3=`float2 uv1, uv2, uva, dz;
comp_4=`static const int anz = 35;
comp_5=`static const float2 moonpos = 0.6;
comp_6=`static const float2 hor = texsize.zw*float2(1,0);
comp_7=`static const float2 ver = texsize.zw*float2(1,0).yx;
comp_8=`float3 Get1 (float2 uvi, float par)
comp_9=`{return lerp(GetBlur1(uvi), GetPixel(uvi), 0*saturate(par/2))*par;}
comp_10=`
comp_11=`shader_body {
comp_12=`uva = (uv-0.5)*aspect.xy+0.5;
comp_13=`float moon = (.1 / length (uva-moonpos));
comp_14=`
comp_15=`dz.x = lum(GetPixel(uv-hor)) - lum(GetPixel(uv+hor));
comp_16=`dz.y = lum(GetPixel(uv-ver)) - lum(GetPixel(uv+ver));
comp_17=`
comp_18=`float3 shine = GetPixel(uv); 
comp_19=`
comp_20=`radi = 1;
comp_21=`for (int n=1; n <= anz; n++)
comp_22=`{ 
comp_23=`  shine += 2.0/anz*Get1((uv-moonpos)*radi+moonpos,radi);
comp_24=`  radi -= 0.75/anz;;
comp_25=`}
comp_26=`ret = max(shine,0*GetPixel(uv));
comp_27=`//ret = shine+GetPixel(uv);
comp_28=`
comp_29=`}
comp_30=`written by martin
comp_31=`END

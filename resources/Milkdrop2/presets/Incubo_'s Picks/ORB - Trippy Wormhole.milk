[preset00]
fRating=3.000000
fGammaAdj=2.000000
fDecay=1.000000
fVideoEchoZoom=1.000137
fVideoEchoAlpha=0.000000
nVideoEchoOrientation=0
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001000
fWaveScale=1.000000
fWaveSmoothing=0.750000
fWaveParam=0.000000
fModWaveAlphaStart=0.750000
fModWaveAlphaEnd=0.950000
fWarpAnimSpeed=1.000000
fWarpScale=1.000000
fZoomExponent=1.000000
fShader=0.000000
zoom=0.960000
rot=0.000000
cx=0.500000
cy=0.500000
dx=0.000000
dy=0.000000
warp=0.000521
sx=1.000000
sy=1.000000
wave_r=0.000000
wave_g=0.000000
wave_b=0.000000
wave_x=0.500000
wave_y=0.500000
ob_size=0.010000
ob_r=1.000000
ob_g=1.000000
ob_b=1.000000
ob_a=0.000000
ib_size=0.010000
ib_r=0.250000
ib_g=0.250000
ib_b=0.250000
ib_a=0.000000
nMotionVectorsX=12.000000
nMotionVectorsY=9.000000
mv_dx=0.000000
mv_dy=0.000000
mv_l=0.900000
mv_r=1.000000
mv_g=1.000000
mv_b=1.000000
mv_a=0.000000
wavecode_0_enabled=1
wavecode_0_samples=222
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bDrawBack=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.000000
wavecode_0_smoothing=0.500000
wavecode_0_r=1.000000
wavecode_0_g=1.000000
wavecode_0_b=1.000000
wavecode_0_a=0.800000
wave_0_per_point1=//init
wave_0_per_point2=zs = if(below(zs,100),100,zs);
wave_0_per_point3=zs = if(above(zs, 10100),100, zs);
wave_0_per_point4=
wave_0_per_point5=zs = if(above(zs, 1100),1, zs);
wave_0_per_point6=
wave_0_per_point7=pi = 3.141592;
wave_0_per_point8=
wave_0_per_point9=samp = sample;
wave_0_per_point10=
wave_0_per_point11=//xx = 10*samp*asin(cos(q1*samp*2*0.1)*sin(q1*samp*0.1)*tan(-q1*samp*0.1));
wave_0_per_point12=//yy = 10*samp*asin(sin(q1*samp*2*0.1)*sin(q1*samp*0.1)*tan(-q1*samp*0.1));
wave_0_per_point13=xx = cos(q1*samp+ q1)*1;
wave_0_per_point14=yy = sin(q1*samp+ q1)*1;
wave_0_per_point15=
wave_0_per_point16=zz = 2.5*samp*0.1;
wave_0_per_point17=
wave_0_per_point18=x = xx*zz*4;
wave_0_per_point19=y = yy*zz*4;
wave_0_per_point20=
wave_0_per_point21=//x = x*cos(q1*0.1 + 3.14) - y*sin(q1*0.1 + 3.14);
wave_0_per_point22=//y = x*sin(q1*0.1 + 3.14) + y*cos(q1*0.1 + 3.14);
wave_0_per_point23=
wave_0_per_point24=x = x + 0.5;
wave_0_per_point25=y = y + 0.5;
wave_0_per_point26=
wave_0_per_point27=r = 0.5 + 0.5*cos(q1*sample*2*0.1)*sin(q1*sample*0.1);
wave_0_per_point28=g = 0.5 +  0.5*sin(q1*sample*2*0.1)*sin(q1*sample*0.1);
wave_0_per_point29=b = 0.5 + 0.5*cos(1);
wave_0_per_point30=
wavecode_1_enabled=1
wavecode_1_samples=222
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bDrawBack=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.000000
wavecode_1_smoothing=0.500000
wavecode_1_r=1.000000
wavecode_1_g=1.000000
wavecode_1_b=1.000000
wavecode_1_a=0.800000
wave_1_per_point1=//init
wave_1_per_point2=zs = if(below(zs,100),100,zs);
wave_1_per_point3=zs = if(above(zs, 10100),100, zs);
wave_1_per_point4=
wave_1_per_point5=zs = if(above(zs, 1100),1, zs);
wave_1_per_point6=
wave_1_per_point7=pi = 3.141592;
wave_1_per_point8=
wave_1_per_point9=samp = sample;
wave_1_per_point10=
wave_1_per_point11=//xx = 10*samp*asin(cos(q1*samp*2*0.1)*sin(q1*samp*0.1)*tan(-q1*samp*0.1));
wave_1_per_point12=//yy = 10*samp*asin(sin(q1*samp*2*0.1)*sin(q1*samp*0.1)*tan(-q1*samp*0.1));
wave_1_per_point13=xx = cos(q1*samp+ q1 + 1.57)*1;
wave_1_per_point14=yy = sin(q1*samp+ q1 + 1.57)*1;
wave_1_per_point15=
wave_1_per_point16=zz = 2.5*samp*0.1;
wave_1_per_point17=
wave_1_per_point18=x = xx*zz*4;
wave_1_per_point19=y = yy*zz*4;
wave_1_per_point20=
wave_1_per_point21=//x = x*cos(q1*0.1 + 3.14) - y*sin(q1*0.1 + 3.14);
wave_1_per_point22=//y = x*sin(q1*0.1 + 3.14) + y*cos(q1*0.1 + 3.14);
wave_1_per_point23=
wave_1_per_point24=x = x + 0.5;
wave_1_per_point25=y = y + 0.5;
wave_1_per_point26=
wave_1_per_point27=r = 0.5 + 0.5*cos(q1*sample*2*0.1)*sin(q1*sample*0.1);
wave_1_per_point28=g = 0.5 +  0.5*sin(q1*sample*2*0.1)*sin(q1*sample*0.1);
wave_1_per_point29=b = 0.5 + 0.5*cos(1);
wave_1_per_point30=
wavecode_2_enabled=0
wavecode_2_samples=222
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bDrawBack=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.000000
wavecode_2_smoothing=0.500000
wavecode_2_r=1.000000
wavecode_2_g=1.000000
wavecode_2_b=1.000000
wavecode_2_a=1.000000
wave_2_per_point1=//init
wave_2_per_point2=zs = if(below(zs,100),100,zs);
wave_2_per_point3=zs = if(above(zs, 10100),100, zs);
wave_2_per_point4=
wave_2_per_point5=zs = if(above(zs, 1100),1, zs);
wave_2_per_point6=
wave_2_per_point7=pi = 3.141592;
wave_2_per_point8=
wave_2_per_point9=samp = sample;
wave_2_per_point10=
wave_2_per_point11=//xx = 10*samp*asin(cos(q1*samp*2*0.1)*sin(q1*samp*0.1)*tan(-q1*samp*0.1));
wave_2_per_point12=//yy = 10*samp*asin(sin(q1*samp*2*0.1)*sin(q1*samp*0.1)*tan(-q1*samp*0.1));
wave_2_per_point13=xx = cos(q1*samp+ q1 + 3.14)*1;
wave_2_per_point14=yy = sin(q1*samp+ q1 + 3.14)*1;
wave_2_per_point15=
wave_2_per_point16=zz = 2.5*samp*0.1;
wave_2_per_point17=
wave_2_per_point18=x = xx*zz*4;
wave_2_per_point19=y = yy*zz*4;
wave_2_per_point20=
wave_2_per_point21=//x = x*cos(q1*0.1 + 3.14) - y*sin(q1*0.1 + 3.14);
wave_2_per_point22=//y = x*sin(q1*0.1 + 3.14) + y*cos(q1*0.1 + 3.14);
wave_2_per_point23=
wave_2_per_point24=x = x + 0.5;
wave_2_per_point25=y = y + 0.5;
wave_2_per_point26=
wave_2_per_point27=r = 0.5 + 0.5*cos(q1*sample*2*0.1)*sin(q1*sample*0.1);
wave_2_per_point28=g = 0.5 +  0.5*sin(q1*sample*2*0.1)*sin(q1*sample*0.1);
wave_2_per_point29=b = 0.5 + 0.5*cos(1);
wave_2_per_point30=
wavecode_3_enabled=0
wavecode_3_samples=222
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bDrawBack=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.000000
wavecode_3_smoothing=0.500000
wavecode_3_r=1.000000
wavecode_3_g=1.000000
wavecode_3_b=1.000000
wavecode_3_a=1.000000
wave_3_per_point1=//init
wave_3_per_point2=zs = if(below(zs,100),100,zs);
wave_3_per_point3=zs = if(above(zs, 10100),100, zs);
wave_3_per_point4=
wave_3_per_point5=zs = if(above(zs, 1100),1, zs);
wave_3_per_point6=
wave_3_per_point7=pi = 3.141592;
wave_3_per_point8=
wave_3_per_point9=samp = sample;
wave_3_per_point10=
wave_3_per_point11=//xx = 10*samp*asin(cos(q1*samp*2*0.1)*sin(q1*samp*0.1)*tan(-q1*samp*0.1));
wave_3_per_point12=//yy = 10*samp*asin(sin(q1*samp*2*0.1)*sin(q1*samp*0.1)*tan(-q1*samp*0.1));
wave_3_per_point13=xx = cos(q1*samp+ q1 - 1.57)*1;
wave_3_per_point14=yy = sin(q1*samp+ q1 - 1.57)*1;
wave_3_per_point15=
wave_3_per_point16=zz = 2.5*samp*0.1;
wave_3_per_point17=
wave_3_per_point18=x = xx*zz*4;
wave_3_per_point19=y = yy*zz*4;
wave_3_per_point20=
wave_3_per_point21=//x = x*cos(q1*0.1 + 3.14) - y*sin(q1*0.1 + 3.14);
wave_3_per_point22=//y = x*sin(q1*0.1 + 3.14) + y*cos(q1*0.1 + 3.14);
wave_3_per_point23=
wave_3_per_point24=x = x + 0.5;
wave_3_per_point25=y = y + 0.5;
wave_3_per_point26=
wave_3_per_point27=r = 0.5 + 0.5*cos(q1*sample*2*0.1)*sin(q1*sample*0.1);
wave_3_per_point28=g = 0.5 +  0.5*sin(q1*sample*2*0.1)*sin(q1*sample*0.1);
wave_3_per_point29=b = 0.5 + 0.5*cos(1);
wave_3_per_point30=
shapecode_0_enabled=0
shapecode_0_sides=100
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_tex_capture=1
shapecode_0_tex_cx=1.000000
shapecode_0_tex_cy=0.000000
shapecode_0_x=0.500000
shapecode_0_y=0.500000
shapecode_0_rad=0.226122
shapecode_0_ang=0.000000
shapecode_0_tex_ang=3.141593
shapecode_0_tex_zoom=1.254855
shapecode_0_r=1.000000
shapecode_0_g=0.000000
shapecode_0_b=0.000000
shapecode_0_a=1.000000
shapecode_0_r2=0.000000
shapecode_0_g2=1.000000
shapecode_0_b2=0.000000
shapecode_0_a2=1.000000
shapecode_0_border_r=1.000000
shapecode_0_border_g=1.000000
shapecode_0_border_b=1.000000
shapecode_0_border_a=0.000000
shape_0_per_frame1=ang = q1*0.1;
shape_0_per_frame2=
shape_0_per_frame3=r = 0.5 + 0.5*cos(q1*sample*2*0.1)*sin(q1*sample*0.1);
shape_0_per_frame4=g = 0.5 +  0.5*sin(q1*sample*2*0.1)*sin(q1*sample*0.1);
shape_0_per_frame5=b = 0.5 + 0.5*cos(1);
shape_0_per_frame6=r2 =r;
shape_0_per_frame7=g2 =g;
shape_0_per_frame8=b2 =b;
shapecode_1_enabled=0
shapecode_1_sides=100
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_tex_capture=1
shapecode_1_tex_cx=1.000000
shapecode_1_tex_cy=0.000000
shapecode_1_x=0.500000
shapecode_1_y=0.500000
shapecode_1_rad=0.226122
shapecode_1_ang=0.000000
shapecode_1_tex_ang=6.283185
shapecode_1_tex_zoom=0.931006
shapecode_1_r=1.000000
shapecode_1_g=0.000000
shapecode_1_b=0.000000
shapecode_1_a=1.000000
shapecode_1_r2=0.000000
shapecode_1_g2=1.000000
shapecode_1_b2=0.000000
shapecode_1_a2=1.000000
shapecode_1_border_r=1.000000
shapecode_1_border_g=1.000000
shapecode_1_border_b=1.000000
shapecode_1_border_a=0.000000
shape_1_per_frame1=ang = q1*0.1 + 1.57;
shape_1_per_frame2=
shape_1_per_frame3=r = 0.5 + 0.5*cos(q1*sample*2*0.1)*sin(q1*sample*0.1);
shape_1_per_frame4=g = 0.5 +  0.5*sin(q1*sample*2*0.1)*sin(q1*sample*0.1);
shape_1_per_frame5=b = 0.5 + 0.5*cos(1);
shape_1_per_frame6=r2 =r;
shape_1_per_frame7=g2 =g;
shape_1_per_frame8=b2 =b;
shapecode_2_enabled=0
shapecode_2_sides=100
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_tex_capture=1
shapecode_2_tex_cx=1.000000
shapecode_2_tex_cy=0.000000
shapecode_2_x=0.500000
shapecode_2_y=0.500000
shapecode_2_rad=0.200672
shapecode_2_ang=0.000000
shapecode_2_tex_ang=6.283185
shapecode_2_tex_zoom=74.191917
shapecode_2_r=1.000000
shapecode_2_g=0.000000
shapecode_2_b=0.000000
shapecode_2_a=1.000000
shapecode_2_r2=0.000000
shapecode_2_g2=1.000000
shapecode_2_b2=0.000000
shapecode_2_a2=1.000000
shapecode_2_border_r=1.000000
shapecode_2_border_g=1.000000
shapecode_2_border_b=1.000000
shapecode_2_border_a=0.000000
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_tex_capture=1
shapecode_3_tex_cx=0.500000
shapecode_3_tex_cy=0.500000
shapecode_3_x=0.500000
shapecode_3_y=0.500000
shapecode_3_rad=0.100000
shapecode_3_ang=0.000000
shapecode_3_tex_ang=0.000000
shapecode_3_tex_zoom=1.000000
shapecode_3_r=1.000000
shapecode_3_g=0.000000
shapecode_3_b=0.000000
shapecode_3_a=1.000000
shapecode_3_r2=0.000000
shapecode_3_g2=1.000000
shapecode_3_b2=0.000000
shapecode_3_a2=0.000000
shapecode_3_border_r=1.000000
shapecode_3_border_g=1.000000
shapecode_3_border_b=1.000000
shapecode_3_border_a=0.100000
per_frame_1=basstime = basstime + bass*0.03;
per_frame_2=
per_frame_3=q1 = basstime*1.5;
per_frame_4=
per_frame_5=
per_frame_6=//start in most active range
per_frame_7=basstime = if(below(basstime,1000),1000,basstime);
per_frame_8=//basstime = if(above(basstime,495),450,basstime);
per_frame_9=
per_frame_10=basstime = basstime + bass_att*0.03;
per_frame_11=vol = pow(bass+mid+treb,2);
per_frame_12=basssum = vol;
per_frame_13=
per_frame_14=stickybit = time%2;
per_frame_15=
per_frame_16=//avg vol
per_frame_17=//buffer 1
per_frame_18=volAvg = volAvg + vol*equal(stickybit,1);
per_frame_19=//number of samples 1 or framerate
per_frame_20=sample1 = sample1 + equal(stickybit,1);
per_frame_21=//buffer 2
per_frame_22=volAvg2 = volAvg2 + vol*equal(stickybit,0);
per_frame_23=//number of samples 2
per_frame_24=sample2 = sample2 + equal(stickybit,0);
per_frame_25=
per_frame_26=//transision
per_frame_27=edge = bnot(equal(bit2,stickybit));
per_frame_28=
per_frame_29=volAvg = volAvg - volAvg*edge*stickybit;
per_frame_30=volAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);
per_frame_31=
per_frame_32=sample1 = sample1  - sample1*edge*stickybit;
per_frame_33=sample2 = sample2  - sample2*edge*equal(stickybit,0);
per_frame_34=
per_frame_35=//test vol against avg buffer lvl
per_frame_36=diff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);
per_frame_37=diff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);
per_frame_38=
per_frame_39=q3 = diff;
per_frame_40=
per_frame_41=bit2 = time%2;
per_frame_42=
per_frame_43=difftime = difftime + diff*0.03;
per_frame_44=q2 = difftime;
per_frame_45=
per_frame_46=//fix a strange error
per_frame_47=difftime = if(above(difftime,2000),0, difftime);
per_frame_48=
per_frame_49=monitor = q1;
per_frame_50=
per_frame_51=rarr = rand(100)*0.01;
per_frame_52=
per_frame_53=decay_r = 0.9 + 0.1*(abs(cos(difftime*1.56+rarr)));
per_frame_54=decay_g = 0.9 + 0.1*(abs(cos(difftime*1.36+rarr)));
per_frame_55=decay_b = 0.9 + 0.1*(abs(cos(difftime*1.2+rarr)));
per_frame_56=
per_frame_57=
per_frame_58=//shape fill
per_frame_59=q8 = (diff+1)*0.0001;
per_pixel_1=//zoom = 1.0 + (rad-0.5)*0.1;
per_pixel_2=//zoom = 1.04; - 0.2*rad*(q3*0.1 + 1);  //*(q3*0.01+1) + rad*0.1;
per_pixel_3=//rot = 0;
per_pixel_4=
per_pixel_5=//use simple fuzzy logic to model zooming
per_pixel_6=
per_pixel_7=//rules
per_pixel_8=fuzzy1 = x;
per_pixel_9=fuzzy3 = x-1;
per_pixel_10=fuzzy2 = y;
per_pixel_11=fuzzy4 = y-1;
per_pixel_12=
per_pixel_13=
per_pixel_14=//activations approx sawtooth with sin curve
per_pixel_15=f1 = sin(q1 - 1.5707);
per_pixel_16=f2 = sin(q1);
per_pixel_17=f3 = sin(q1 + 1.5707);
per_pixel_18=f4 = sin(q1 + 3.14);
per_pixel_19=
per_pixel_20=//take only values above zero
per_pixel_21=f1 = f1*above(f1,0);
per_pixel_22=f2 = f2*above(f2,0);
per_pixel_23=f3 = f3*above(f3,0);
per_pixel_24=f4 = f4*above(f4,0);
per_pixel_25=
per_pixel_26=//sum rule ativations
per_pixel_27=sum_fuzzy = fuzzy1*f1 + fuzzy2*f2 - fuzzy3*f3 - fuzzy4*f4;
per_pixel_28=
per_pixel_29=sum_fuzzy = sin(sum_fuzzy);
per_pixel_30=
per_pixel_31=zoom = 1 + sum_fuzzy*0.2*rad*rad;
per_pixel_32=rot = 0;
per_pixel_33=//sx = 1 - sum_fuzzy*0.5;
per_pixel_34=//sy = 1 - sum_fuzzy*0.5;
per_pixel_35=

MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=1.000
fGammaAdj=2.000
fDecay=0.985
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=0.88020
fShader=0.000
zoom=0.99980
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=0.99980
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.000
ib_r=0.000
ib_g=0.300
ib_b=0.000
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=0.000
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.80000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=sw = (1-sw)*above(sample,0);
wave_0_per_point2=
wave_0_per_point3=osa = sample*above(sample,0);
wave_0_per_point4=
wave_0_per_point5=mod = pow(value1*2,2)*sign(value1)*.5;
wave_0_per_point6=
wave_0_per_point7=mod = value1;
wave_0_per_point8=mod = mod*sw;
wave_0_per_point9=
wave_0_per_point10=x = if(sw,osa,sample);
wave_0_per_point11=x = sample*.5;
wave_0_per_point12=y = 1.001 + mod*.5*pow(1-sample,2)*2;
wave_0_per_point13=
wave_0_per_point14=osa = sample;
wave_0_per_point15=
wave_0_per_point16=mo = 3.7 + mod*6 + q1;
wave_0_per_point17=
wave_0_per_point18=r = .5 + sin(mo)*.5;
wave_0_per_point19=g = .5 + sin(mo + 1.0472)*.5;
wave_0_per_point20=b = .5 + sin(mo + 2.0944)*.5;
wave_0_per_point21=
wave_0_per_point22=a = 1 - abs(mod)*12;
wave_0_per_point23=a = 1-sw;
wave_0_per_point24=a = max(0,min(a,1));
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.80000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=sw = (1-sw)*below(sample,1);
wave_1_per_point2=
wave_1_per_point3=osa = sample*above(sample,0);
wave_1_per_point4=
wave_1_per_point5=mod = pow(value1*2,2)*sign(value1)*.5;
wave_1_per_point6=
wave_1_per_point7=mod = value1;
wave_1_per_point8=mod = mod*sw;
wave_1_per_point9=
wave_1_per_point10=x = if(sw,osa,sample);
wave_1_per_point11=x = 1-sample*.5;
wave_1_per_point12=y = -.001 + mod*.5*pow(1-sample,2)*2;
wave_1_per_point13=
wave_1_per_point14=osa = sample;
wave_1_per_point15=
wave_1_per_point16=mo = 3.7 + mod*6 + q1;
wave_1_per_point17=
wave_1_per_point18=r = .5 + sin(mo)*.5;
wave_1_per_point19=g = .5 + sin(mo + 1.0472)*.5;
wave_1_per_point20=b = .5 + sin(mo + 2.0944)*.5;
wave_1_per_point21=
wave_1_per_point22=a = 1 - abs(mod)*12;
wave_1_per_point23=a = 1-sw;
wave_1_per_point24=a = max(0,min(a,1));
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.80000
wavecode_2_r=0.000
wavecode_2_g=0.000
wavecode_2_b=0.000
wavecode_2_a=1.000
wave_2_per_point1=sw = (1-sw)*above(sample,0);
wave_2_per_point2=
wave_2_per_point3=osa = sample*above(sample,0);
wave_2_per_point4=
wave_2_per_point5=mod = pow(value1*2,2)*sign(value1)*.5;
wave_2_per_point6=
wave_2_per_point7=mod = value1;
wave_2_per_point8=mod = mod;
wave_2_per_point9=
wave_2_per_point10=x = if(sw,osa,sample);
wave_2_per_point11=x = sample*.5;
wave_2_per_point12=y = 1.001 + mod*.5*pow(1-sample,2)*2;
wave_2_per_point13=
wave_2_per_point14=osa = sample;
wave_2_per_point15=
wave_2_per_point16=mo = 3.7 + mod*6 + q1;
wave_2_per_point17=
wave_2_per_point18=//r = .5 + sin(mo)*.5;
wave_2_per_point19=//g = .5 + sin(mo + 1.0472)*.5;
wave_2_per_point20=//b = .5 + sin(mo + 2.0944)*.5;
wave_2_per_point21=
wave_2_per_point22=//a = 1 - abs(mod)*12;
wave_2_per_point23=//a = 1-sw;
wave_2_per_point24=a = max(0,min(a,1));
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.80000
wavecode_3_r=0.000
wavecode_3_g=0.000
wavecode_3_b=0.000
wavecode_3_a=1.000
wave_3_per_point1=sw = (1-sw)*above(sample,0);
wave_3_per_point2=
wave_3_per_point3=osa = sample*above(sample,0);
wave_3_per_point4=
wave_3_per_point5=mod = pow(value1*2,2)*sign(value1)*.5;
wave_3_per_point6=
wave_3_per_point7=mod = value1;
wave_3_per_point8=mod = mod;
wave_3_per_point9=
wave_3_per_point10=x = if(sw,osa,sample);
wave_3_per_point11=x = 1 - sample*.5;
wave_3_per_point12=
wave_3_per_point13=y = -.001 + mod*.5*pow(1-sample,2)*2;
wave_3_per_point14=
wave_3_per_point15=osa = sample;
wave_3_per_point16=
wave_3_per_point17=mo = 3.7 + mod*6 + q1;
wave_3_per_point18=
wave_3_per_point19=//r = .5 + sin(mo)*.5;
wave_3_per_point20=//g = .5 + sin(mo + 1.0472)*.5;
wave_3_per_point21=//b = .5 + sin(mo + 2.0944)*.5;
wave_3_per_point22=
wave_3_per_point23=//a = 1 - abs(mod)*12;
wave_3_per_point24=//a = 1-sw;
wave_3_per_point25=a = max(0,min(a,1));
shapecode_0_enabled=1
shapecode_0_sides=54
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=1.000
shapecode_0_rad=0.13478
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=0.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=ti = q1;
shape_0_per_frame2=rad = q2;
shape_0_per_frame3=y = (ti - int(ti))*.5;
shape_0_per_frame4=x = 1;
shape_0_per_frame5=
shape_0_per_frame6=
shapecode_1_enabled=1
shapecode_1_sides=54
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.000
shapecode_1_rad=0.13478
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=ti = q1;
shape_1_per_frame2=rad = q2;
shape_1_per_frame3=y = 1-(ti - int(ti))*.5;
shape_1_per_frame4=x = 0;
shape_1_per_frame5=
shape_1_per_frame6=
shapecode_2_enabled=1
shapecode_2_sides=43
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.690
shapecode_2_y=0.500
shapecode_2_rad=0.54820
shapecode_2_ang=0.00000
shapecode_2_tex_ang=3.89557
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=0.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=rad = .4 + q3;
shape_2_per_frame2=
shape_2_per_frame3=tex_zoom = 1/rad*.8;
shape_2_per_frame4=
shape_2_per_frame5=x = .5 + q3;
shape_2_per_frame6=
shape_2_per_frame7=tex_ang = -q4;
shape_2_per_frame8=
shape_2_per_frame9=ti = q5 + sin(time*1.234);
shape_2_per_frame10=
shape_2_per_frame11=x = .5 + q3*sin(ti);
shape_2_per_frame12=y = .5 + q3*cos(ti)*.5;
shapecode_3_enabled=1
shapecode_3_sides=43
shapecode_3_additive=0
shapecode_3_thickOutline=1
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.54822
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.79544
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=rad = .4 + q3;
shape_3_per_frame2=
shape_3_per_frame3=tex_zoom = 1/rad*tex_zoom;
shape_3_per_frame4=
shape_3_per_frame5=x = .5 - q3;
shape_3_per_frame6=
shape_3_per_frame7=tex_ang = q4;
shape_3_per_frame8=
shape_3_per_frame9=ti = q5 + sin(time*.948) + 3.1416;
shape_3_per_frame10=
shape_3_per_frame11=x = .5 + q3*sin(ti)*2.5;
shape_3_per_frame12=y = .5 + q3*cos(ti);
per_frame_1=// -------------------------------- beat detection code ----------------------------------
per_frame_2=sure=if(equal(sure,0),.75,sure);
per_frame_3=interval=if(equal(interval,0),.7*FPS,interval);
per_frame_4=avginterval=if(equal(avginterval,0),.7*FPS,avginterval);
per_frame_5=lockinterval=if(equal(lockinterval,0),.7*FPS,lockinterval );
per_frame_6=lastbeat=if(equal(lastbeat,0),frame-FPS,lastbeat);
per_frame_7=dbass=(bass-pbass)*FPS;
per_frame_8=beat=below(dbass,0)*above(pdbass,0)*above(bass,.95*avgbass)*above(frame-lastbeat,FPS/3);
per_frame_9=sure=if(beat*below(abs(frame-(interval+lastbeat)),FPS/5),
per_frame_10=min(.095+sure,1),beat*(sure-.095)+(1-beat)*sure*.9996);
per_frame_11=sure=max(.5,sure);
per_frame_12=avgbass=.995*avgbass+.005*bass;
per_frame_13=maxdbass=max(maxdbass*.999,dbass);
per_frame_14=maxdbass=min(200,maxdbass);
per_frame_15=maxdbass=max(.02,maxdbass);
per_frame_16=interval=if(beat*below(frame-lastbeat,1.8*interval), ((frame-lastbeat)*.25+.75*interval),interval);
per_frame_17=lastbeat=if((1-force)*beat+equal(lastbeat+interval,frame),frame,lastbeat);
per_frame_18=avginterval=if(beat,.9*avginterval+.1*interval, avginterval);
per_frame_19=lockinterval=if(beat,.9*lockinterval+.1*avginterval,lockinterval);
per_frame_20=pbass=bass;
per_frame_21=pdbass=dbass;
per_frame_22=bpm=60*FPS*.3333*( ((2*(1-sure))/interval)+((2*sure)/avginterval)+(1/lockinterval) );
per_frame_23=phase=min( (frame-lastbeat)/(.333*(2*sure*avginterval+2*(1-sure)*interval+lockinterval)), 1 );
per_frame_24=beat=if(equal(phase,0),1,beat);
per_frame_25=interval=min(interval,.7*FPS);
per_frame_26=avginterval=min(avginterval,.7*FPS);
per_frame_27=lockinterval=min(lockinterval,.7*FPS);
per_frame_28=// ----------------------------------------------------------------------------------------------
per_frame_29=
per_frame_30=warp=0;
per_frame_31=zoom=1+(FPS/85)*.002;
per_frame_32=q8=beat;
per_frame_33=q7=phase;  // normalized phase between beats
per_frame_34=q6=bpm; // bpm
per_frame_35=decay=.95+.01*75/FPS;
per_frame_36=
per_frame_37=wx=(1-beat)*wx+beat*(-5+10*rand(1000)/1000);
per_frame_38=wx=(1-beat)*wx+beat*(wx+4*sign(wx));
per_frame_39=wy=(1-beat)*wy+beat*(-10+20*rand(1000)/1000);
per_frame_40=fx=(1-beat)*fx+beat*(-1+rand(5));
per_frame_41=am=(1-beat)*am+beat*(1.5*rand(100)/100);
per_frame_42=am=(1-beat)*am+beat*(equal(fx,-1)*(.5+am)*sign(-wx)+above(fx,-1)*am);
per_frame_43=rotval=(1-beat)*rotval+beat*(.02*q6/140)*(-1+2*rand(100)/100);
per_frame_44=myrot=(1-beat)*(myrot+rotval)+beat*0;
per_frame_45=q1=wx;
per_frame_46=q2=wy;
per_frame_47=q3=fx;
per_frame_48=q4=am;
per_frame_49=q5=myrot;
warp_1=`shader_body
warp_2=`{
warp_3=`
warp_4=`    // sample previous frame
warp_5=`    ret.xyz = tex2D( sampler_main, uv ).xyz;
warp_6=`
warp_7=`      // take the difference between the crisp and blurred images,
warp_8=`      // then add it back into the image.  Creates spots and stripes over time.
warp_9=`      ret.xyz += (ret - GetBlur3(uv))*0.35;
warp_10=`      ret.xyz -= 0.004;
warp_11=`
warp_12=`      // add noise:
warp_13=`      float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.4 + rand_frame.xy;
warp_14=`      ret.xyz += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)*0.18;
warp_15=`
warp_16=`      // desaturate over time, to keep the globs white
warp_17=`      ret.xyz = lerp(ret.xyz, lum(ret.xyz), 0.2);
warp_18=`}
comp_1=`float3 ret1, neu;
comp_2=`float2 uv2,uv3;
comp_3=`shader_body
comp_4=`{
comp_5=`float2 uv2;
comp_6=`float ang2, c, s;
comp_7=`uv -= 0.5;
comp_8=`uv *= aspect.xy;    
comp_9=`
comp_10=`uv = mul(uv, float2x2(_qb));
comp_11=`
comp_12=`float dist = 1;
comp_13=`float inten = 1;
comp_14=`ret1 = 0;
comp_15=`int anz = 4;
comp_16=`float n = anz;
comp_17=`while (n >= 0) {
comp_18=`    ang2 = 0*n/anz;
comp_19=`    c = cos(ang2);
comp_20=`    s = sin(ang2);
comp_21=`    uv2.x =  uv.x*c - uv.y*s;
comp_22=`    uv2.y =  uv.x*s + uv.y*c;
comp_23=`//uv2 = uv;
comp_24=`    dist = 1-frac(1.0/anz*n+q30); //evtl sqrt !
comp_25=`    inten =  sqrt(dist)*(1-dist)*2;
comp_26=`float2 uv3 = 3*uv2*dist*(1+q5*uv.x) + 0.5 +float2(q18*n,q19) ;
comp_27=`
comp_28=`float3 cmul = float3(dist,1-dist,1-(dist-.5)*(dist-.5)*4);
comp_29=`    neu = tex2D(sampler_main,uv3) +q6*GetBlur1(frac(uv3*1.04)).bgr*1; 
comp_30=`    
comp_31=`//    neu = neu*cmul;
comp_32=`     ret1 = max(ret1,neu*inten);
comp_33=`n--;    
comp_34=`}
comp_35=`
comp_36=`ret1 = lerp(ret1,ret1.gbr,q26/6);
comp_37=`ret = ret1*2 + (1-rad)*q26/3*GetPixel(q5/2+uv*(2-rad));
comp_38=`
comp_39=`}

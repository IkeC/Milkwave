MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=3.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=1.000
fWaveScale=1.000
fWaveSmoothing=0.750
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00751
sx=0.99990
sy=1.00000
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.300
ob_b=0.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=0.980
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=0.46374
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_init1=//pi
wave_0_init2=t8=3.14159265/2;
wave_0_init3=t5 = 1;
wave_0_per_frame1=rotx = rotx+bass;
wave_0_per_frame2=roty = roty+mid;
wave_0_per_frame3=rotz = rotz+treb;
wave_0_per_frame4=//rotx = 0;
wave_0_per_frame5=//roty =0;
wave_0_per_frame6=//rotz = 0;
wave_0_per_frame7=
wave_0_per_frame8=//convert rotation values from degrees to radians
wave_0_per_frame9=t1= t8*rotx/180;
wave_0_per_frame10=t2 = t8*roty/180;
wave_0_per_frame11=t3 = t8*rotz/180;
wave_0_per_frame12=
wave_0_per_frame13=t4 = sin(bass+0.86*t8);
wave_0_per_frame14=t5 = 10+8*cos(time+0.56*t8);
wave_0_per_point1=//Define 3D Shape
wave_0_per_point2=
wave_0_per_point3=//Sphere
wave_0_per_point4=fvar = sample*512;
wave_0_per_point5=svar = fvar*128;
wave_0_per_point6=tvar = 0&svar;
wave_0_per_point7=nsample = tvar*4.5;
wave_0_per_point8=x1 = -2.65+(1.54)*sin(sample);
wave_0_per_point9=y1 = (-1)*cos(t8*nsample);
wave_0_per_point10=z1 = (-1)*sin(t8*nsample);
wave_0_per_point11=
wave_0_per_point12=//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates
wave_0_per_point13=y2 = y1*cos(t1)-z1*sin(t1);
wave_0_per_point14=z2 = y1*sin(t1)+z1*cos(t1);
wave_0_per_point15=x2 = z2*sin(t2)+x1*cos(t2);
wave_0_per_point16=z3 = z2*cos(t2)-x1*sin(t2);
wave_0_per_point17=x3 = x2*cos(t3)-y2*sin(t3);
wave_0_per_point18=y3 = y2*cos(t3)+x2*sin(t3);
wave_0_per_point19=//move resulting shape in 3d space
wave_0_per_point20=x4 = x3;
wave_0_per_point21=y4 = y3;
wave_0_per_point22=z4 = z3+5;
wave_0_per_point23=//draw 3d shape in 2d
wave_0_per_point24=x=0.491+0.491*(x4/(1+z4*0.491));
wave_0_per_point25=y=0.46+0.46*(y4/(1+z4*0.46));
wave_0_per_point26=
wave_0_per_point27=a = -.9+sin(nsample+time);
wave_0_per_point28=a = if(below(a,0),0,a);
wave_0_per_point29=a=1;
wave_0_per_point30=r =sin(abs(x2*sin(time)))*0.48 + 0.48;
wave_0_per_point31=b = sin(abs(y3+sin(0.8765*time)))*0.5 + 0.5;
wave_0_per_point32=g = x2*z2;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=0.46374
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_init1=//pi
wave_1_init2=t8=3.14159265;
wave_1_init3=t5 = 1;
wave_1_per_frame1=rotx = rotx+bass;
wave_1_per_frame2=roty = roty+mid;
wave_1_per_frame3=rotz = rotz+treb;
wave_1_per_frame4=//rotx = 0;
wave_1_per_frame5=//roty =0;
wave_1_per_frame6=//rotz = 0;
wave_1_per_frame7=
wave_1_per_frame8=//convert rotation values from degrees to radians
wave_1_per_frame9=t1= t8*rotx/180;
wave_1_per_frame10=t2 = t8*roty/180;
wave_1_per_frame11=t3 = t8*rotz/180;
wave_1_per_frame12=
wave_1_per_frame13=t4 = 3*sin(time+0.776*t8);
wave_1_per_frame14=t5 = 10+8*cos(time+0.56*t8);
wave_1_per_frame15=
wave_1_per_point1=//Define 3D Shape
wave_1_per_point2=
wave_1_per_point3=//Sphere
wave_1_per_point4=fvar = sample*512;
wave_1_per_point5=svar = fvar*128;
wave_1_per_point6=tvar = 0&svar;
wave_1_per_point7=nsample = tvar*4.5;
wave_1_per_point8=x1 = -.75+(1.5)*sin(sample);
wave_1_per_point9=y1 = (1)*cos(t8*nsample);
wave_1_per_point10=z1 = (1)*sin(t8*nsample);
wave_1_per_point11=
wave_1_per_point12=//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates
wave_1_per_point13=y2 = y1*cos(t1)-z1*sin(t1);
wave_1_per_point14=z2 = y1*sin(t1)+z1*cos(t1);
wave_1_per_point15=x2 = z2*sin(t2)+x1*cos(t2);
wave_1_per_point16=z3 = z2*cos(t2)-x1*sin(t2);
wave_1_per_point17=x3 = x2*cos(t3)-y2*sin(t3);
wave_1_per_point18=y3 = y2*cos(t3)+x2*sin(t3);
wave_1_per_point19=//move resulting shape in 3d space
wave_1_per_point20=x4 = x3;
wave_1_per_point21=y4 = y3;
wave_1_per_point22=z4 = z3+5;
wave_1_per_point23=//draw 3d shape in 2d
wave_1_per_point24=x=0.5+0.75*(x4/(1+z4*0.5));
wave_1_per_point25=y=0.5+0.75*(y4/(1+z4*0.5));
wave_1_per_point26=
wave_1_per_point27=a = -.9+sin(nsample+time);
wave_1_per_point28=a = if(below(a,0),0,a);
wave_1_per_point29=a=1;
wave_1_per_point30=r = y2*z2;
wave_1_per_point31=b = z3+y3;
wave_1_per_point32=g = z3/x2;
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=0.46374
wavecode_2_smoothing=0.00000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_init1=//pi
wave_2_init2=t8=3.14159265*1.56;
wave_2_init3=t5 = 1;
wave_2_per_frame1=rotx = rotx+bass;
wave_2_per_frame2=roty = roty+mid;
wave_2_per_frame3=rotz = rotz+treb;
wave_2_per_frame4=//rotx = 0;
wave_2_per_frame5=//roty =0;
wave_2_per_frame6=//rotz = 0;
wave_2_per_frame7=
wave_2_per_frame8=//convert rotation values from degrees to radians
wave_2_per_frame9=t1= t8*rotx/180;
wave_2_per_frame10=t2 = t8*roty/180;
wave_2_per_frame11=t3 = t8*rotz/180;
wave_2_per_frame12=
wave_2_per_frame13=t4 = 12+13*sin(time+2.46*t8);
wave_2_per_frame14=t5 = 2+8*cos(time+1.66*t8);
wave_2_per_frame15=r = 1;
wave_2_per_frame16=b = 0;
wave_2_per_frame17=g=0;
wave_2_per_point1=//Define 3D Shape
wave_2_per_point2=
wave_2_per_point3=//Sphere
wave_2_per_point4=fvar = sample*512;
wave_2_per_point5=svar = fvar*128;
wave_2_per_point6=tvar = 0&svar;
wave_2_per_point7=nsample = tvar*4.59;
wave_2_per_point8=x1 = -0.48+(20.48)*sin(sample);
wave_2_per_point9=y1 = (1)*cos(t8*nsample);
wave_2_per_point10=z1 = (1)*sin(t8*nsample);
wave_2_per_point11=
wave_2_per_point12=//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates
wave_2_per_point13=y2 = y1*cos(t1)-z1*sin(t1);
wave_2_per_point14=z2 = y1*sin(t1)+z1*cos(t1);
wave_2_per_point15=x2 = z2*sin(t2)+x1*cos(t2);
wave_2_per_point16=z3 = z2*cos(t2)-x1*sin(t2);
wave_2_per_point17=x3 = x2*cos(t3)-y2*sin(t3);
wave_2_per_point18=y3 = y2*cos(t3)+x2*sin(t3);
wave_2_per_point19=//move resulting shape in 3d space
wave_2_per_point20=x4 = x3;
wave_2_per_point21=y4 = y3;
wave_2_per_point22=z4 = z3+5;
wave_2_per_point23=//draw 3d shape in 2d
wave_2_per_point24=x=0.464-1*(x4/(1+z4*0.464));
wave_2_per_point25=y=0.5-1*(y4/(1+z4*0.5));
wave_2_per_point26=
wave_2_per_point27=a = -.9+sin(nsample+time);
wave_2_per_point28=a = if(below(a,0),0,a);
wave_2_per_point29=a=1;
wave_2_per_point30=g=y2;
wave_2_per_point31=b=x2;
wave_2_per_point32=r= z2+z3;
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=0.46374
wavecode_3_smoothing=0.00000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_init1=//pi
wave_3_init2=t8=3.14159265*0.15;
wave_3_init3=t5 = 1;
wave_3_per_frame1=rotx = rotx+bass;
wave_3_per_frame2=roty = roty+mid;
wave_3_per_frame3=rotz = rotz+treb;
wave_3_per_frame4=//rotx = 0;
wave_3_per_frame5=//roty =0;
wave_3_per_frame6=//rotz = 0;
wave_3_per_frame7=
wave_3_per_frame8=//convert rotation values from degrees to radians
wave_3_per_frame9=t1= t8*rotx/180;
wave_3_per_frame10=t2 = t8*roty/180;
wave_3_per_frame11=t3 = t8*rotz/180;
wave_3_per_frame12=
wave_3_per_frame13=t4 = 3*sin(time+0.66*t8);
wave_3_per_frame14=t5 = 10+8*cos(time+0.66*t8);
wave_3_per_frame15=
wave_3_per_point1=//Define 3D Shape
wave_3_per_point2=
wave_3_per_point3=//Sphere
wave_3_per_point4=fvar = sample*512;
wave_3_per_point5=svar = fvar*128;
wave_3_per_point6=tvar = 0&svar;
wave_3_per_point7=nsample = tvar*4.91;
wave_3_per_point8=x1 = -.75+(1.5)*sin(sample);
wave_3_per_point9=y1 = (1)*cos(t8*nsample);
wave_3_per_point10=z1 = (1)*sin(t8*nsample);
wave_3_per_point11=
wave_3_per_point12=//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates
wave_3_per_point13=y2 = y1*cos(t1)-z1*sin(t1);
wave_3_per_point14=z2 = y1*sin(t1)+z1*cos(t1);
wave_3_per_point15=x2 = z2*sin(t2)+x1*cos(t2);
wave_3_per_point16=z3 = z2*cos(t2)-x1*sin(t2);
wave_3_per_point17=x3 = x2*cos(t3)-y2*sin(t3);
wave_3_per_point18=y3 = y2*cos(t3)+x2*sin(t3);
wave_3_per_point19=//move resulting shape in 3d space
wave_3_per_point20=x4 = x3;
wave_3_per_point21=y4 = y3;
wave_3_per_point22=z4 = z3+5;
wave_3_per_point23=//draw 3d shape in 2d
wave_3_per_point24=x=0.5+0.8*(x4/(1+z4*0.5));
wave_3_per_point25=y=0.5+0.8*(y4/(1+z4*0.5));
wave_3_per_point26=
wave_3_per_point27=a = -.9+sin(nsample+time);
wave_3_per_point28=a = if(below(a,0),0,a);
wave_3_per_point29=a=1;
wave_3_per_point30=
wave_3_per_point31=b = z4;
wave_3_per_point32=r=z2-x1;
wave_3_per_point33=g=y2+z2;
shapecode_0_enabled=1
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.880
shapecode_0_y=0.800
shapecode_0_rad=0.32674
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=0.980
shapecode_0_g=1.040
shapecode_0_b=1.000
shapecode_0_a=0.940
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=0.940
shapecode_0_border_g=1.000
shapecode_0_border_b=1.060
shapecode_0_border_a=0.000
shape_0_per_frame1=x = 0.5+ 0.4*sin(0.2765*time+0.341*q8);
shape_0_per_frame2=y = 0.5+ 0.4*sin(0.311*time+0.213*q8);
shape_0_per_frame3=ang = 3.17292-3.17292*cos(time*0.14446);
shape_0_per_frame4=rad = 0.5+0.5*sin(q8*0.2685);
shapecode_1_enabled=1
shapecode_1_sides=100
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.880
shapecode_1_y=0.200
shapecode_1_rad=0.33334
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.050
shapecode_1_border_a=0.000
shape_1_per_frame1=x = 0.5+ 0.4*sin(0.212*time+0.1*q8);
shape_1_per_frame2=y = 0.5+ 0.4*sin(0.2891*time+0.121*q8);
shape_1_per_frame3=ang = 2.85877+2.85877*sin(time*0.19);
shape_1_per_frame4=rad = 0.5+0.5*sin(q8*0.37422);
shapecode_2_enabled=1
shapecode_2_sides=100
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.120
shapecode_2_y=0.800
shapecode_2_rad=0.33004
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.07000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=0.930
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=1.040
shapecode_2_border_r=0.910
shapecode_2_border_g=1.060
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=x = 0.5+ 0.4*sin(0.0932*time+0.421*q6);
shape_2_per_frame2=y = 0.5+ 0.4*sin(0.1178*time+0.2135*q6);
shape_2_per_frame3=ang = 3.1415-3.1415*cos(time*0.1154);
shape_2_per_frame4=rad = 0.5+0.5*sin(q6*0.455);
shapecode_3_enabled=1
shapecode_3_sides=100
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.120
shapecode_3_y=0.200
shapecode_3_rad=0.33004
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=0.980
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.010
shapecode_3_border_a=0.000
shape_3_per_frame1=x = 0.5+ 0.4*sin(0.105*time+0.3*q4);
shape_3_per_frame2=y = 0.55+ 0.38*sin(0.1229*time+0.3488*q4);
shape_3_per_frame3=ang = 3.1415+3.1415*sin(time*0.2654);
shape_3_per_frame4=rad = 0.47+0.47*sin(q4*0.8478);
per_frame_init_1=n = 0; loop (10000,gmegabuf(n) = 0; megabuf(n) = 0; n+=1);
per_frame_init_2=num_res = 100; MINBPM = 90; MAXBPM = 200;
per_frame_init_3=sax1 = rand(5); sax2 = rand(5); sax3 = rand(5);
per_frame_init_4=r1 = rand(1); r2 = rand(1); j0=j1=j2=0; r4 = rand(2)-1; 
per_frame_init_5=index = 1; nstab = int(rand(10))+4;;
per_frame_init_6=r1_ = rand(1); r2_=rand(1);
per_frame_init_7=BMP=100; certain = 2; jrel=0; jtime = 0; smov=0;
per_frame_init_8=
per_frame_init_9=dist = 8;
per_frame_1=dt = 1/fps;
per_frame_2=dec_s = 1-.015*30/fps; dec_m = 1-0.1*30/fps; dec_f = 0.7;
per_frame_3=vol = vol*0.3 + 0.7*(bass_att + mid_att + treb_att)/3; vol_ = vol_*dec_f + (1-dec_f)*vol;
per_frame_4=avg = avg*dec_m + (1-dec_m)*vol;
per_frame_5=
per_frame_6=is_beat = above(vol, 1.75*peak) * above (time, t0+.25);
per_frame_7=t0 = if(is_beat,time,t0);
per_frame_8=peak = if (is_beat, vol, peak*dec_m);
per_frame_9=index = (index + is_beat) %32;
per_frame_10=index2 = (index2 + is_beat*bnot(index))%16;
per_frame_11=
per_frame_12=//biquad lowpass
per_frame_13=fg = BPM/60; Q=1.8; omega = 6.283*min(0.5,fg/fps); tcos = cos (omega); alpha = sin(omega)/(2*Q);
per_frame_14=b0=(1-tcos)/2; b1=1-tcos; b2=(1-tcos)/2; a0=1+alpha; a1=-2*tcos; a2=1-alpha;
per_frame_15=b0a0=b0/a0; b1a0=b1/a0; b2a0=b2/a0; a1a0=a1/a0; a2a0=a2/a0;
per_frame_16=X = vol; LastOut= b0a0*X + b1a0*in1 + b2a0*in2 - a1a0*ou1 - a2a0*ou2;
per_frame_17=in2 =in1; in1 =X; ou2 =ou1;  ou1 =LastOut; X =LastOut;
per_frame_18=BiVol=X;
per_frame_19=
per_frame_20=maxind = 0; qavg = 0.1; i=0; 
per_frame_21=Excite = (vol-vol_);
per_frame_22=loop (num_res,
per_frame_23=  n = i*8;
per_frame_24=  Freq  = (i/(num_res-1)+minbpm/(maxbpm-minbpm))*(maxbpm-minbpm)/60;
per_frame_25=  Feder = sqr(Freq*6.2832);
per_frame_26=  megabuf (n+4) = megabuf(n+1); megabuf (n+1) *= 1-0.25*dt; 
per_frame_27=  EC_Steps = int (10*Freq*dt)+1;
per_frame_28=  loop (EC_Steps, // Euler-Cauchy steps
per_frame_29=    Kraft = Excite - Feder*megabuf(n + 2) ;
per_frame_30=    megabuf (n+1) += Kraft        * dt/EC_Steps;
per_frame_31=    megabuf (n+2) += megabuf(n+1) * dt/EC_Steps;  );
per_frame_32=  beatcos = megabuf(n+1);  beatsin = megabuf(n+2)*Freq*6.2832;
per_frame_33=  quad = sqrt (pow(beatsin,2) + pow(beatcos,2));
per_frame_34=  megabuf (n+3) = megabuf(n+3) *dec_m +  quad* (1-dec_m);
per_frame_35=  if (megabuf(n+3) > megabuf (maxind*8+3), maxind =i,0);
per_frame_36=  qavg = qavg+pow (megabuf(n+3),2);
per_frame_37=  i += 1;);
per_frame_38=
per_frame_39=qavg = sqrt (qavg/num_res); 
per_frame_40=qdev = 0; i =0; loop (num_res, qdev += pow(megabuf(i+3)-qavg,2); i += 8; );
per_frame_41=qdev = sqrt (qdev/num_res);
per_frame_42=BPM =   (maxind/(num_res-1)+minbpm/(maxbpm-minbpm))*(maxbpm-minbpm);
per_frame_43=
per_frame_44=m1 = maxind*8;
per_frame_45=certain = certain * dec_m + (1-dec_m) * megabuf(m1+3)/qavg;
per_frame_46=dbl_beat = megabuf(m1+1) * megabuf (m1+4) < 0;
per_frame_47=sgl_beat = dbl_beat * (megabuf (m1+4) < 0);
per_frame_48=pulse = (megabuf(m1+2) > 0)-0.5;
per_frame_49=bcount += dbl_beat;is_rbeat  = dbl_beat && (bcount%2==0);bcount2 += is_rbeat;
per_frame_50=trel1 += BPM/60*dt;
per_frame_51=
per_frame_52=trig2 = is_beat && (index%12==0);
per_frame_53=r1 = if (trig2,(rand(17)-1)*0.1,r1); r1_ += min(0.1,max(-0.1, r1-r1_))*dt*5;
per_frame_54=r2 = if (trig2,rand(1)-0.5,r2);      r2_ += min(0.1,max(-0.1, r2-r2_))*dt*5;
per_frame_55=r3 = if (trig2,sqrt(vol)*0.7*sin(rand(24)),r3); r30 = r30*dec_m + (1-dec_m)*r3; r3_ += r30*dt;
per_frame_56=r4 = if (trig2, (rand(2)-1)*rand(2), r4); r4_ +=r4*dt;
per_frame_57=
per_frame_58=//Comp PLANE
per_frame_59=ax=-r1_; ay = r3_; az = r2_+j0*jrel;
per_frame_60=c1 = cos(ax); c2 = cos(ay); c3 = cos(az); s1 = sin(ax); s2 = sin(ay); s3 = sin(az);
per_frame_61=q20 = c2*c3;            q21 = c2*s3;            q22= -s2;
per_frame_62=q23 = s1*s2*c3 - c1*s3; q24 = s1*s2*s3 + c1*c3; q25 = s1*c2;
per_frame_63=q26 = c1*s2*c3 + s1*s3; q27 = c1*s2*s3 - s1*c3; q28 = c1*c2;
per_frame_64=q17 = s2*q24*2; q18 = c2*q24*2; //for Profile
per_frame_65=
per_frame_66=//persp. center
per_frame_67=jscale = min (1.2, pow(125/(1+BPM),2));
per_frame_68=if (dbl_beat, (j0=rand(2)-1)*jscale; j1=0; j2=((rand(6)-2))*jscale,0);
per_frame_69=jrelv = (certain>6.5-min(avg,2)-jrelv+jtime/8 + 2*(BPM > 160)) ; 
per_frame_70=jrel  = if(dbl_beat, jrelv,jrel);
per_frame_71=jtime = max(0,if (jrel, jtime + dt, jtime-dt)); 
per_frame_72=q7 = sin(r3_/7+r1_*4); q8 = 1.25+sin(r3_*.77+r1_)*.5*c1; //pfusch
per_frame_73=q9 = 10-j2*jrel; //z pos
per_frame_74=
per_frame_75=if ((index2%5==4) && !jrel, dist = min(20,dist+dt*80), dist = max(10,dist-dt*80));
per_frame_76=dist_ = dist_*dec_m + (1-dec_m)*dist;
per_frame_77=
per_frame_78=q9 = dist_;
per_frame_79=
per_frame_80=trig1 = is_beat && (index%16==0); 
per_frame_81=sax1 = if (trig1, rand(12), sax1);
per_frame_82=sax2 = if (trig1, rand(12), sax2);
per_frame_83=sax3 = if (trig1, rand(6), sax3);
per_frame_84=sax4 = if (trig1, rand(1)-0.5, sax4);
per_frame_85=nstab = if (trig1 && (index2%2==0), int(rand(10)*rand(10)+4), nstab);
per_frame_86=
per_frame_87=//delay chain
per_frame_88=n = 100; loop (100, gmegabuf(n)=gmegabuf(n-1); n-=1); gmegabuf(0) = vol;
per_frame_89=
per_frame_90=//resampled delay chain starts at 500. 
per_frame_91=n = 0; num = 60/BPM/dt; //Num delay bins auf nstab abbilden
per_frame_92=sca =   num/nstab;
per_frame_93=loop (nstab,
per_frame_94=  m1 = floor (sca*n); fra = sca*n-m1;
per_frame_95=  gmegabuf(500+n) = (1-fra)*gmegabuf(m1) + fra*gmegabuf(m1+1);
per_frame_96=n +=1);
per_frame_97=
per_frame_98=//2nd resampled delay chain starts at 5000. 
per_frame_99=n = 0; num = 60/BPM/dt; //Num delay bins auf nstab abbilden
per_frame_100=sca =   num/200;
per_frame_101=dec = 0.5;
per_frame_102=loop (200,
per_frame_103=  m1 = floor (sca*n); fra = sca*n-m1;
per_frame_104=  gmegabuf(5000+n) = dec*gmegabuf(5000+n) + (1-dec)*1.5*sqrt((1-fra)*gmegabuf(m1) + fra*gmegabuf(m1+1));
per_frame_105=n +=1);
per_frame_106=
per_frame_107=//Now to stabs
per_frame_108=slen = 2; sdia = 0.13;
per_frame_109=n = 100;
per_frame_110=loop (100,
per_frame_111=  megabuf(5000+n)=megabuf(5000+n-1);
per_frame_112=  megabuf(6000+n)=megabuf(6000+n-1);
per_frame_113=  megabuf(7000+n)=megabuf(7000+n-1);
per_frame_114=  megabuf(8000+n)=megabuf(8000+n-1);
per_frame_115=n-=1);;
per_frame_116=megabuf (5000) = megabuf(5000)*dec_f + (1-dec_f)*sax1;
per_frame_117=megabuf (6000) = megabuf(6000)*dec_f + (1-dec_f)*sax2;
per_frame_118=megabuf (7000) = megabuf(7000)*dec_f + (1-dec_f)*sax3;
per_frame_119=megabuf (8000) = BiVol;
per_frame_120=
per_frame_121=p = 1; 
per_frame_122=loop (2, 
per_frame_123=  stab = 0;
per_frame_124=  loop (nstab,
per_frame_125=    xang = megabuf(5000+25*stab/nstab); yang = megabuf(6000+30*stab/nstab); zang = 0;
per_frame_126=    dia = megabuf(7000+20*stab/nstab) ;
per_frame_127=    c1 = cos(xang); c2 = cos(yang); c3 = cos(zang); 
per_frame_128=    s1 = sin(xang); s2 = sin(yang); s3 = sin(zang);
per_frame_129=    ox = 0; oy = 0;  if (p==1, oz = -slen, oz=slen); ;
per_frame_130=    mx = ox*c3 - oy*s3; my = ox*s3 + oy*c3;    ox = mx; oy = my;
per_frame_131=    mx = ox*c2 + oz*s2; mz = - ox*s2 + oz*c2;  ox = mx; oz = mz;
per_frame_132=    my = oy*c1 - oz*s1; mz = oy*s1 + oz*c1;    oy = my; oz = mz;
per_frame_133=    x0 = ox+dia/2; y0 = oy; z0 = oz+slen+.1;
per_frame_134=
per_frame_135=x0 += pow(cos(stab/nstab*index2 + trel1*3.1416/2),3)*certain/3;
per_frame_136=z0 += pow(cos(stab/nstab*index2 + trel1*3.1416/3),3)*certain/3;
per_frame_137=x0 += 4*(sax1*certain*q9/10>sax2*24)*pow(sin(trel1*3.146/2+stab/nstab*6.28*2),5);
per_frame_138=
per_frame_139=    xang = 0; yang = 0; zang = 6.283 * stab/nstab+r4_; //alle Stebe anordnen
per_frame_140=    ox = x0; oy=y0;  oz=z0;  
per_frame_141=    c1 = cos(xang); c2 = cos(yang); c3 = cos(zang); 
per_frame_142=    s1 = sin(xang); s2 = sin(yang); s3 = sin(zang);
per_frame_143=    mx = ox*c3 - oy*s3; my = ox*s3 + oy*c3;    ox = mx; oy = my;
per_frame_144=    mx = ox*c2 + oz*s2; mz = - ox*s2 + oz*c2;  ox = mx; oz = mz;
per_frame_145=    my = oy*c1 - oz*s1; mz = oy*s1 + oz*c1;    oy = my; oz = mz;
per_frame_146=    oz += max(0,certain-2.5)/6*BiVol/(0.2+sqrt(ox*ox+oy*oy));
per_frame_147=
per_frame_148=    base = p*1000+4*stab;
per_frame_149=    gmegabuf (base)=ox;
per_frame_150=    gmegabuf (base+1)=oy;
per_frame_151=    gmegabuf (base+2)=oz;
per_frame_152=stab += 1); 
per_frame_153=p += 1);
per_frame_154=
per_frame_155=reg33 = index2%2;
per_frame_156=reg32 = is_beat ;
per_frame_157=q3 = min(vol_,3)*1.5;
per_frame_158=q11 = trel1;
per_frame_159=
per_frame_160=reg10 = nstab; 
per_frame_161=reg11 = sdia; //Dicke Stab
per_frame_162=q31 = aspectx;
per_frame_163=q32 = aspecty;
per_frame_164=q19 = min(3,1/pow(avg+0.1,0.7))*1.7;
per_frame_165=
per_frame_166=
per_frame_167=//shape 4
per_frame_168=r0 = 0.38-0.4*gmegabuf(5000);
per_frame_169=x0 = 0;
per_frame_170=y0 = 0;
per_frame_171=z0 = 2*-r0+0.5; 
per_frame_172=reg77 = z0; //fuer shape 4
per_frame_173=Nenner = q9 + q28*x0 + q26*y0 - q27*z0;
per_frame_174=x = (q7 + q22*x0 + q20*y0 -q21*z0)/Nenner + 0.5;
per_frame_175=y = -(q8 + q25*x0 + q23*y0 -q24*z0 )/Nenner*q32 +0.5;
per_frame_176=q15 = x-0.5; q16 = y-0.5;
per_frame_177=
per_frame_178=z0 = -z0;
per_frame_179=Nenner = q9 + q28*x0 + q26*y0 - q27*z0;
per_frame_180=x = (q7 + q22*x0 + q20*y0 -q21*z0)/Nenner + 0.5;
per_frame_181=y = -(q8 + q25*x0 + q23*y0 -q24*z0 )/Nenner*q32 +0.5;
per_frame_182=q5 = x-0.5; q6 = y-0.5;
per_frame_183=
per_frame_184=//back light comp
per_frame_185=circ = (index2%3==0); 
per_frame_186=if (circ,
per_frame_187=x0 = sin (trel1*3.14/2)*100;
per_frame_188=y0 = cos (trel1*3.14/2)*100;
per_frame_189=,
per_frame_190=x0 = sin (bcount*3.14/2+r1)*100;
per_frame_191=y0 = cos (bcount*3.14/2+r1)*100;
per_frame_192=);
per_frame_193=
per_frame_194=z0 = 10 + 7*sin(time*0.1);
per_frame_195=Nenner = q9 + q28*x0 + q26*y0 - q27*z0;
per_frame_196=x = (q7 + q22*x0 + q20*y0 -q21*z0)/Nenner + 0.5;
per_frame_197=y = -(q8 + q25*x0 + q23*y0 -q24*z0 )/Nenner*q32 +0.5;
per_frame_198=q1 = x-0.5; q2 = y-0.5;
per_frame_199=q31 = nenner > 0;
per_frame_200=
per_frame_201=z0 = -3;
per_frame_202=Nenner = q9 + q28*x0 + q26*y0 - q27*z0;
per_frame_203=x = (q7 + q22*x0 + q20*y0 -q21*z0)/Nenner + 0.5;
per_frame_204=y = -(q8 + q25*x0 + q23*y0 -q24*z0 )/Nenner*q32 +0.5;
per_frame_205=q10 = x-0.5; q12 = y-0.5;
per_frame_206=
per_frame_207=s4 = s4*0.5 + 0.5*(sax4 * (certain*2 > index2));
per_frame_208=tband += .1*s4*dt;
per_frame_209=q30 = tband;
per_frame_210=monitor = index2;
per_frame_211=monitor = q9;
per_pixel_1=dx = 0; dy = 0; zoom = 1.005; rot = 0.;
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    ret = tex2D( sampler_main, uv ).xyz;
warp_5=`
warp_6=`    // feather pen
warp_7=`    ret = max(ret, tex2D( sampler_main, (uv-0.5)*(1-8*length(texsize.zw)) + 0.5 ).xyz);
warp_8=`    ret = max(ret, tex2D( sampler_main, (uv-0.5)*(1+8*length(texsize.zw)) + 0.5 ).xyz);
warp_9=`
warp_10=`    // darken over time
warp_11=`    ret = (ret-0.03)*0.98;
warp_12=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    ret = GetPixel(uv)*0.7 + GetBlur2(uv)*2.75;
comp_4=`    ret *= 0.89;
comp_5=`ret /= float3(1.2,1.5,.8);
comp_6=`}
comp_7=`
comp_8=`

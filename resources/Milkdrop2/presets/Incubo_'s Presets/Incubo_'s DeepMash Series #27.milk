MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=4.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=0
bWaveDots=1
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=0
bDarkenCenter=1
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=1.347
fWaveScale=1.253
fWaveSmoothing=0.900
fWaveParam=-0.100
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=0.99950
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01010
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.500
wave_b=0.300
wave_x=0.500
wave_y=0.500
ob_size=0.015
ob_r=0.230
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.010
ib_r=0.250
ib_g=0.250
ib_b=0.650
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=0.700
b2x=1.000
b3x=1.000
b1ed=0.000
per_frame_1=warp =0;
per_frame_2=wave_x=0.4+0.1*mid;
per_frame_3=wave_y=0.4+0.1*bass;
per_frame_4=wave_r=bass;
per_frame_5=wave_g=mid;
per_frame_6=wave_b=treb;
per_frame_7=madbass=max(max(bass,bass_att)-1.3,0);
per_frame_8=madtreb=max(max(treb,treb_att)-1.3,0);
per_frame_9=zoom = zoom - madbass * 5;
per_frame_10=mv_x = madtreb+1;
per_frame_11=mv_y= 48;
per_frame_12=mv_r = 1-bass_att;
per_frame_13=mv_b = 1-treb_att;
per_frame_14=mv_g = 1-mid_att;
per_frame_15=mv_l = madbass+2;
per_frame_16=q1 = madbass;
per_frame_17=rot = q1*.05;
per_pixel_1=bass_effect=max(max(bass,bass_att)-0.8,0);
per_pixel_2=bass_factor = if(above(bass_effect,0),0.45+bass_effect,0);
per_pixel_3=zoom=if(below(-abs(ang),bass_factor),1-.23*(1-x)*sin(time*.3+ang*8+rad*7.5),zoom);
per_pixel_4=cx=q1;
per_pixel_5=cy=q1;
warp_1=`shader_body
warp_2=`{
warp_3=`float2 uv_m = 1.0 - abs( frac( uv * 0.5 ) * 2.0 - 1.0 ); // Eo.S' mirror code
warp_4=`ret.x = tex2D( sampler_fc_main, uv_m ).z; // first julia fractal iteration
warp_5=`ret.y = lerp(lerp(tex2D( sampler_fc_main, uv_m ).x, ret.x,0.5), 
warp_6=`             GetPixel(uv_orig).y,
warp_7=`             0.75); // 75% of motion blur to the green channel
warp_8=`
warp_9=`
warp_10=`float2 d = texsize.zw*6;
warp_11=`float2 uv_z = (uv_orig-0.5)*0.998 + 0.5; // a small dose of zoom-in
warp_12=`float3 dx = ( GetBlur1(uv_z + float2(1,0)*d) - GetBlur1(uv_z-float2(1,0)*d) );
warp_13=`float3 dy = ( GetBlur1(uv_z + float2(0,1)*d) - GetBlur1(uv_z-float2(0,1)*d) );
warp_14=`uv_z -=float2(dx.z,dy.z)*texsize.zw*2; //shortening of the nebulous matter
warp_15=`ret.z = max((tex2d(sampler_fc_main,uv_m).x-0.5)*3*saturate(1-length(uv_orig-0.5)*3.2), // feeded by the inner of the red channel
warp_16=`             tex2d(sampler_fc_main,uv_z).z);
warp_17=`ret.z += (tex2d(sampler_fc_main,uv_z).z - GetBlur1(saturate(uv_z)).z)*0.02; // sort of geiss' skin dot code
warp_18=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    uv *= 0.5;
comp_4=`    ret = tex2D(sampler_main, uv).xyz;
comp_5=`    ret = max(ret, tex2D(sampler_main,uv + float2(0.5,0)).xyz);
comp_6=`    ret = max(ret, tex2D(sampler_main,uv + float2(0,0.5)).xyz);
comp_7=`    ret = max(ret, tex2D(sampler_main,uv + float2(0.5,0.5)).xyz);
comp_8=`    ret *= 1.666;
comp_9=`ret=1.5-ret;
comp_10=`ret-=roam_sin.wzy*roam_cos.zxy;
comp_11=`}
comp_12=`
comp_13=`

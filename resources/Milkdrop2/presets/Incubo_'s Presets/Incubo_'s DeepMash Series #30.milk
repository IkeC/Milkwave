MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=2
[preset00]
fRating=3.000
fGammaAdj=1.000
fDecay=0.940
fVideoEchoZoom=1.971
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=0
bDarkenCenter=1
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=1
fWaveAlpha=0.001
fWaveScale=2.988
fWaveSmoothing=0.750
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.07410
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=1.00000
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=0.818
ob_g=0.077
ob_b=0.552
ob_a=0.812
ib_size=0.010
ib_r=0.123
ib_g=0.875
ib_b=0.714
ib_a=0.596
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_init1=t1 = 0;
wave_0_per_point1=x=.5+.1*sin(sample*10)*(rand(10)*.1)*bass;
wave_0_per_point2=y=.5+.1*cos(sample*10)*(rand(10)*.1)*treb;
wave_0_per_point3=a=(abs(y-.5)*abs(x-.5))*60;
shapecode_0_enabled=1
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.200
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shape_0_per_frame1=r=.5+.2*sin(time*1.3);
shape_0_per_frame2=g=.5+.2*sin(time*1.1);
shape_0_per_frame3=b=.5+.2*sin(time*.9);
shape_0_per_frame4=a=bass;
shape_0_per_frame5=r2=r;
shape_0_per_frame6=g2=g;
shape_0_per_frame7=b2=b;
shape_0_per_frame8=border_a = if(above(bass,1.5),1,0);
shape_0_per_frame9=rad = bass*.1;
shape_0_per_frame10=rad = rad*if(above(bass,1.7),5,1);
per_frame_1=warp = 0;
per_frame_2=wave_r = wave_r + .5*sin(time*333) + bass*.3;
per_frame_3=wave_g = wave_g + .5*sin(time*222) + treb*.3;
per_frame_4=wave_b = wave_b + .5*sin(time*111) + mid*.3;
per_frame_5=rot = .4*sin(mid_att*.05);
per_frame_6=wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );
per_frame_7=wave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );
per_frame_8=wave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );
per_frame_9=// Appended Code From C:\Program Files\Winamp\Plugins\MilkDrop\Self\Turbulence.milk
per_frame_10=ib_a = if(above(bass * frame , treb * treb) , min(mid_att - time , bass * wave_r) , treb_att * frame);
per_frame_11=wave_g = if(above(bass_att * treb , frame * frame) , bass * wave_r , wave_b * treb_att);
per_frame_12=wave_r = max(time * mid_att , treb * mid);
per_frame_13=zoom = 1 + max(mid_att * treb , wave_b * wave_r);
per_frame_14=wave_r = min(wave_r - frame , treb + wave_y);
per_frame_15=wave_g = max(wave_g * time , time - treb);
per_frame_16=ob_g = min(min(wave_r + bass_att , treb * bass_att) , wave_r * bass);
per_frame_17=ob_a = max(min(bass_att * mid , wave_x * bass) , wave_r + wave_b);
per_frame_18=mv_g = if(equal(warp * warp , bass * bass) , bass - zoom , bass_att * mid_att);
per_frame_19=ob_b = if(above(treb + treb , time * mid) , max(bass + wave_b , wave_r + treb) , wave_r * wave_r);
per_frame_20=dx = 0 + max(wave_x - wave_b , bass * wave_g);
per_frame_21=zoom=if(below(zoom,0.01), 0.01, zoom);
per_frame_22=zoom=if(above(zoom,100), 100, zoom);
per_frame_23=dx=if(below(dx,-1), -1, dx);
per_frame_24=dx=if(above(dx,1.0), 1.0, dx);
per_frame_25=wave_r=if(below(wave_r,0.0), 0.0, wave_r);
per_frame_26=wave_r=if(above(wave_r,1.0), 1.0, wave_r);
per_frame_27=wave_g=if(below(wave_g,0.0), 0.0, wave_g);
per_frame_28=wave_g=if(above(wave_g,1.0), 1.0, wave_g);
per_frame_29=ob_g=if(below(ob_g,0.0), 0.0, ob_g);
per_frame_30=ob_g=if(above(ob_g,1.0), 1.0, ob_g);
per_frame_31=ob_b=if(below(ob_b,0.0), 0.0, ob_b);
per_frame_32=ob_b=if(above(ob_b,1.0), 1.0, ob_b);
per_frame_33=ob_a=if(below(ob_a,0.0), 0.0, ob_a);
per_frame_34=ob_a=if(above(ob_a,1.0), 1.0, ob_a);
per_frame_35=ib_a=if(below(ib_a,0.0), 0.0, ib_a);
per_frame_36=ib_a=if(above(ib_a,1.0), 1.0, ib_a);
per_frame_37=mv_g=if(below(mv_g,0.0), 0.0, mv_g);
per_frame_38=mv_g=if(above(mv_g,1.0), 1.0, mv_g);
per_frame_39=wave_r=if(below(wave_r,0.0), 0.0, wave_r);
per_frame_40=wave_r=if(above(wave_r,1.0), 1.0, wave_r);
per_frame_41=wave_g=if(below(wave_g,0.0), 0.0, wave_g);
per_frame_42=wave_g=if(above(wave_g,1.0), 1.0, wave_g);
per_frame_43=ob_g=if(below(ob_g,0.0), 0.0, ob_g);
per_frame_44=ob_g=if(above(ob_g,1.0), 1.0, ob_g);
per_frame_45=ob_b=if(below(ob_b,0.0), 0.0, ob_b);
per_frame_46=ob_b=if(above(ob_b,1.0), 1.0, ob_b);
per_frame_47=wave_g=if(below(wave_g,0.0), 0.0, wave_g);
per_frame_48=wave_g=if(above(wave_g,1.0), 1.0, wave_g);
per_frame_49=wave_r=if(below(wave_r,0.0), 0.0, wave_r);
per_frame_50=wave_r=if(above(wave_r,1.0), 1.0, wave_r);
per_frame_51=zoom=if(below(zoom,0.01), 0.01, zoom);
per_frame_52=zoom=if(above(zoom,100), 100, zoom);
per_frame_53=ob_a=if(below(ob_a,0.0), 0.0, ob_a);
per_frame_54=ob_a=if(above(ob_a,1.0), 1.0, ob_a);
per_frame_55=ob_g=if(below(ob_g,0.0), 0.0, ob_g);
per_frame_56=ob_g=if(above(ob_g,1.0), 1.0, ob_g);
per_frame_57=ob_b=if(below(ob_b,0.0), 0.0, ob_b);
per_frame_58=ob_b=if(above(ob_b,1.0), 1.0, ob_b);
per_frame_59=mv_g=if(below(mv_g,0.0), 0.0, mv_g);
per_frame_60=mv_g=if(above(mv_g,1.0), 1.0, mv_g);
per_frame_61=ib_a=if(below(ib_a,0.0), 0.0, ib_a);
per_frame_62=ib_a=if(above(ib_a,1.0), 1.0, ib_a);
per_pixel_1=ray = pow(rad,1.8)+.05;
per_pixel_2=zoom = (ray/rad)*1.4 + .3*sin(ang*(bass*5))+(bass*.2);
per_pixel_3=rot=0;
per_pixel_4=dx = ((x-.5)+(y-.5)*.25*sin(time/10))*(2+.1*treb_att);
per_pixel_5=dy=(y-.5)*(2-.1*treb_att);
per_pixel_6=zoom =1;
per_pixel_7=;
per_pixel_8=sx = 1 + -2.90168002*sin(warp * sy);
per_pixel_9=cy = 0.5 + b * sx;
per_pixel_10=cy=if(below(cy,-1.0), -1.0, cy);
per_pixel_11=cy=if(above(cy,2.0), 2.0, cy);
per_pixel_12=sx=if(below(sx,0.01), 0.01, sx);
per_pixel_13=sx=if(above(sx,100.0), 100.0, sx);
warp_1=`shader_body
warp_2=`{
warp_3=`    float3 rc = lerp(float3(0,0,0), float3(0,1,0), uv.y);
warp_4=`    uv = float2(uv.x, uv.y+0.005*rc.y);
warp_5=`        
warp_6=`
warp_7=`    float3 boxave = (GetPixel(float2(uv.x+texsize.z*q2,uv.y+texsize.w*q2)) +
warp_8=`                     GetPixel(float2(uv.x-texsize.z*q2,uv.y+texsize.w*q2)) +
warp_9=`                     GetPixel(float2(uv.x-texsize.z*q2,uv.y-texsize.w*q2)) +
warp_10=`                     GetPixel(float2(uv.x+texsize.z*q2,uv.y-texsize.w*q2)) ) / 4;
warp_11=`    ret = tex2D(sampler_main, uv);
warp_12=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_13=`                      ((uv.xyy*q27
warp_14=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_15=`                      ).xyz*
warp_16=`                      float3(1,1,0)*0.05 + 
warp_17=`                      time*float3(0,0,1)*q29
warp_18=`                     );
warp_19=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_20=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_21=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_22=`    ret = cross(boxave, 1-ret)*1.2;
warp_23=`    
warp_24=`    //ret -= 0.002;
warp_25=`    //ret *= 0.995;
warp_26=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    float2 uv2, uv3;
comp_4=`    float ang2, c, s;
comp_5=`
comp_6=`    uv -= 0.5;
comp_7=`    uv *= aspect.xy;    
comp_8=`
comp_9=`float3 ret1 = 0;
comp_10=`int anz = 6;
comp_11=`int n = 0;
comp_12=`while (n <= anz) {
comp_13=`    ang2 = 6.28*n/anz;
comp_14=`    c = cos(ang2);
comp_15=`    s = sin(ang2);
comp_16=`    uv2.x =  uv.x*c - uv.y*s;
comp_17=`    uv2.y =  uv.x*s + uv.y*c;
comp_18=`
comp_19=`    ret1 = max(ret1,tex2D(sampler_main, uv2 + 0.5+.1*q1));
comp_20=`n++;
comp_21=`}
comp_22=`
comp_23=`ret1 = (ret1 - rad/2) * (1+slow_roam_cos.xyz/2);
comp_24=`
comp_25=`float3 noise = tex2D (sampler_noise_hq,uv*8+lum(ret1)/8)+.15;
comp_26=`
comp_27=`ret1 = max(ret1,lum(noise)/6);
comp_28=`
comp_29=`//ret = lerp(ret, lum(ret), -5);
comp_30=`
comp_31=` ret = ret1*1.6-.1; 
comp_32=`}
comp_33=`
comp_34=`

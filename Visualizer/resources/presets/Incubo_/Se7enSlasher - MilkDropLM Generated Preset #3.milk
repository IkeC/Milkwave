################################################################################
Created with MilkDropLM Lite and edited by DJ XcitMosphere/Incubo_/Se7enSlasher

Try it yourself: https://colab.research.google.com/github/InferenceIllusionist/MilkDropLM-Lite/blob/main/MilkDropLM_7b_Lite_Notebook.ipynb

https://huggingface.co/InferenceIllusionist/MilkDropLM-7b-v0.3
################################################################################

MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.530
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.200
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=0.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=t1 = 0;
wave_0_per_frame2=t2 = 0;
wave_0_per_frame3=t3 = 0;
wave_0_per_frame4=t4 = 0;
wave_0_per_point1=// lorenz-attractor based code
wave_0_per_point2=
wave_0_per_point3=dx = .866*(bass_att - mid_att)*sample*.1/(.5*(1-pow(2,-22*abs(sample-.5))));
wave_0_per_point4=dy = -.5*(bass_att - mid_att)*sample*.1/(.5*(1-pow(2,-22*abs(sample-.5))));
wave_0_per_point5=
wave_0_per_point6=//dissipation
wave_0_per_point7=dd = sqrt(dx*dx + dy*dy);
wave_0_per_point8=dz = -.01*dd;
wave_0_per_point9=
wave_0_per_point10=//inertia
wave_0_per_point11=df = .1;
wave_0_per_point12=dx = dx*(1-df) + dz*df;
wave_0_per_point13=dy = dy*(1-df) + dz*df;
wave_0_per_point14=
wave_0_per_point15=//integration
wave_0_per_point16=dz = dz + .1*sin(time*.7);
wave_0_per_point17=
wave_0_per_point18=x = .5 + dx;
wave_0_per_point19=y = .5 + dy;
wave_0_per_point20=
wave_0_per_point21=//phase compensation
wave_0_per_point22=c = sqrt(dx*dx + dy*dy);
wave_0_per_point23=s = atan2(dx,dy);
wave_0_per_point24=t1 += c*cos(s);
wave_0_per_point25=t2 += c*sin(s);
wave_0_per_point26=
wave_0_per_point27=//phase comparison & scaling
wave_0_per_point28=scale = 2;
wave_0_per_point29=s1 = t4 - scale*t1;
wave_0_per_point30=s2 = t3 - scale*t2;
wave_0_per_point31=t4 += s1;
wave_0_per_point32=t3 += s2;
wave_0_per_point33=
wave_0_per_point34=//additive wave
wave_0_per_point35=a = .5;
wave_0_per_point36=b = .75 + (s1-s2)*.1;
wave_0_per_point37=r = .25 - (s1+s2)*.05;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=t1 = 0;
wave_1_per_frame2=t2 = 0;
wave_1_per_frame3=t3 = 0;
wave_1_per_frame4=t4 = 0;
wave_1_per_point1=// lorenz-attractor based code
wave_1_per_point2=
wave_1_per_point3=dx = .866*(bass_att - mid_att)*sample*.1/(.5*(1-pow(2,-22*abs(sample-.5))));
wave_1_per_point4=dy = -.5*(bass_att - mid_att)*sample*.1/(.5*(1-pow(2,-22*abs(sample-.5))));
wave_1_per_point5=
wave_1_per_point6=//dissipation
wave_1_per_point7=dd = sqrt(dx*dx + dy*dy);
wave_1_per_point8=dz = -.01*dd;
wave_1_per_point9=
wave_1_per_point10=//inertia
wave_1_per_point11=df = .25;
wave_1_per_point12=dx = dx*(1-df) + dz*df;
wave_1_per_point13=dy = dy*(1-df) + dz*df;
wave_1_per_point14=
wave_1_per_point15=//integration
wave_1_per_point16=dz = dz + .05*sin(time*.7);
wave_1_per_point17=
wave_1_per_point18=x = .5 + dx;
wave_1_per_point19=y = .5 + dy;
wave_1_per_point20=
wave_1_per_point21=//phase compensation
wave_1_per_point22=c = sqrt(dx*dx + dy*dy);
wave_1_per_point23=s = atan2(dx,dy);
wave_1_per_point24=t1 += c*cos(s);
wave_1_per_point25=t2 += c*sin(s);
wave_1_per_point26=
wave_1_per_point27=//phase comparison & scaling
wave_1_per_point28=scale = 2;
wave_1_per_point29=s1 = t4 - scale*t1;
wave_1_per_point30=s2 = t3 - scale*t2;
wave_1_per_point31=t4 += s1;
wave_1_per_point32=t3 += s2;
wave_1_per_point33=
wave_1_per_point34=//additive wave
wave_1_per_point35=a = .5;
wave_1_per_point36=b = .75 + (s1-s2)*.1;
wave_1_per_point37=r = .25 - (s1+s2)*.05;
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=0.600
wavecode_2_g=0.800
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=x = .5 + (bass_att - mid_att)*sample*2*cos(sample*(1-2*sample)*40)/6;
wave_2_per_point2=y = .5 + 2*(mid_att - treb_att)*.1*(1-2*sample)*sample*sin(sample*(1-2*sample)*40)*cos(time*40);
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=0.800
wavecode_3_b=0.200
wavecode_3_a=1.000
wave_3_per_point1=x = .5 + (bass_att - mid_att)*sample*2*cos(sample*(1-2*sample)*40)/6;
wave_3_per_point2=y = .5 + 2*(mid_att - treb_att)*.1*(1-2*sample)*sample*sin(sample*(1-2*sample)*40)*cos(time*40);
shapecode_0_enabled=1
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.49849
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=0.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=0.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=a = 0;
shape_0_per_frame2=
shape_0_per_frame3=// lorenz-attractor based code
shape_0_per_frame4=
shape_0_per_frame5=dx = .866*(bass_att - mid_att)*.2/(.5*(1-pow(2,-22*abs(.5 - q1))));
shape_0_per_frame6=dy = -.5*(bass_att - mid_att)*.2/(.5*(1-pow(2,-22*abs(.5 - q1))));
shape_0_per_frame7=
shape_0_per_frame8=//dissipation
shape_0_per_frame9=dd = sqrt(dx*dx + dy*dy);
shape_0_per_frame10=dz = -.01*dd;
shape_0_per_frame11=
shape_0_per_frame12=//inertia
shape_0_per_frame13=df = .1;
shape_0_per_frame14=dx = dx*(1-df) + dz*df;
shape_0_per_frame15=dy = dy*(1-df) + dz*df;
shape_0_per_frame16=
shape_0_per_frame17=//integration
shape_0_per_frame18=dz = dz + .1*sin(time*.7);
shape_0_per_frame19=
shape_0_per_frame20=x = .5 + dx;
shape_0_per_frame21=y = .5 + dy;
shapecode_1_enabled=1
shapecode_1_sides=100
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.26779
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=
shape_1_per_frame2=a = 0;
shape_1_per_frame3=
shape_1_per_frame4=// lorenz-attractor based code
shape_1_per_frame5=
shape_1_per_frame6=dx = .866*(mid_att - treb_att)*.2/(.5*(1-pow(2,-22*abs(.5 - q2))));
shape_1_per_frame7=dy = -.5*(mid_att - treb_att)*.2/(.5*(1-pow(2,-22*abs(.5 - q2))));
shape_1_per_frame8=
shape_1_per_frame9=//dissipation
shape_1_per_frame10=dd = sqrt(dx*dx + dy*dy);
shape_1_per_frame11=dz = -.01*dd;
shape_1_per_frame12=
shape_1_per_frame13=//inertia
shape_1_per_frame14=df = .1;
shape_1_per_frame15=dx = dx*(1-df) + dz*df;
shape_1_per_frame16=dy = dy*(1-df) + dz*df;
shape_1_per_frame17=
shape_1_per_frame18=//integration
shape_1_per_frame19=dz = dz + .1*sin(time*.7);
shape_1_per_frame20=
shape_1_per_frame21=x = .5 + dx;
shape_1_per_frame22=y = .5 + dy;
shapecode_2_enabled=1
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shape_2_per_frame1=x = .5 + (bass_att - mid_att)*.2*cos(time*5);
shape_2_per_frame2=y = .5 + (bass_att - mid_att)*.2*sin(time*5);
shapecode_3_enabled=1
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=0.000
shapecode_3_g=1.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=1.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
shape_3_per_frame1=x = .5 + (mid_att - treb_att)*.2*cos(time*5);
shape_3_per_frame2=y = .5 + (mid_att - treb_att)*.2*sin(time*5);
per_frame_init_1=p1 = 2000; p2 = 200; p3=50;
per_frame_init_2=vol = 0; normal = 1;
per_frame_1=dec_m = pow (0.8, 30/fps); dec_s = pow (0.9, 30/fps);
per_frame_2=
per_frame_3=beat = max (max (bass, mid), treb); 
per_frame_4=avg = avg*dec_s + beat*(1-dec_s);
per_frame_5=is_beat = above(beat, .2+avg+peak) * above (time, t0+.2);
per_frame_6=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_7=peak = is_beat * beat + (1-is_beat)*peak*dec_m;
per_frame_8=index = (index + is_beat) %16;
per_frame_9=
per_frame_10=q20 = avg;
per_frame_11=q21 = beat;
per_frame_12=q22 = peak;
per_frame_13=q23 = index;
per_frame_14=q24 = is_beat;
per_frame_15=q26 = bass + mid + treb;
per_frame_16=
per_frame_17=k1 =  is_beat*equal(index,0);
per_frame_18=p1 =  p1*dec_m + (1-dec_m)*cos(time/3); 
per_frame_19=p2 =  p2*dec_m + (1-dec_m)*p1;
per_frame_20=p3 =  p3*dec_m + (1-dec_m)*p2;
per_frame_21=rott =  rott*dec_s + (1-dec_s)*p3;
per_frame_22=
per_frame_23=//puls = puls*dec_m + (1-dec_m)*(beat/avg);
per_frame_24=
per_frame_25=zoom = 1+0.25*q20*puls;
per_frame_26=rot = rott/128 * (normal+index/4);
per_frame_27=cx = .5 + .5*sin(time/9);
per_frame_28=cy = .5 + .5*sin(time/7);
per_frame_29=
per_frame_30=q1 = cos(rott);
per_frame_31=q2 = sin(rott);
per_frame_32=q3 = -q2;
per_frame_33=q4 = q1;
per_frame_34=
per_frame_35=normal = 1- above(index,7)*above(q20,1.8);
per_frame_36=monitor = normal;
warp_1=`sampler sampler_worms;
warp_2=`float3 color, mus;
warp_3=`float dx,dy;
warp_4=`shader_body {
warp_5=`float2 uv1 = (uv-.5) * aspect.xy;
warp_6=`
warp_7=`
warp_8=`float2 uv6 = uv1;
warp_9=`float z = q29*2*length(uv1)+rand_frame * 64;
warp_10=`float2 d = normalize(uv1);
warp_11=`float clp = .5+rand_preset*10;
warp_12=`float2 rs = clamp(tan(z)*d,-clp,clp);
warp_13=`uv += rs/20;
warp_14=`
warp_15=`
warp_16=`uv1 = mul(uv1,float2x2(.7,.7,-.7,.7));
warp_17=`mus = .2/(length(uv1));
warp_18=`mus *= roam_cos;
warp_19=`
warp_20=`float3 blur = GetBlur1(frac(uv));
warp_21=`
warp_22=`color = (.1/mus)*(roam_sin+1.5) - length(rs)/(1+roam_cos);
warp_23=`//color = lerp(color,blur,.1);
warp_24=`ret = color-.01;
warp_25=`}
comp_1=`shader_body
comp_2=`{
comp_3=`
comp_4=`//Code bits by Flexi and Geiss
comp_5=`
comp_6=`    float2 d = texsize.zw*8;
comp_7=`    float1 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) ).y;
comp_8=`    float1 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) ).y;
comp_9=`    float2 uv_y = uv+float2(dx,dy)*0.55;  
comp_10=`    float2 uv_y2 = (uv_y*1.25)-.125;  
comp_11=`
comp_12=`  
comp_13=`    ret = lerp(ret,1-ret,.7*GetBlur1(uv_y)+.2*GetPixel(uv));
comp_14=`    ret = lerp(ret,ret-.1*GetBlur3(uv_y)+ret*.5*GetBlur1(uv_y2)+.1*GetPixel(uv_y),.25);
comp_15=`    //ret *= .75;
comp_16=`    ret *= saturate(length(ret-0.5)*5);
comp_17=`    //ret = ret.xy;
comp_18=`    ret = lum(ret);
comp_19=`    ret += 1.25;
comp_20=`    ret *= ret*.45;
comp_21=`    float3 mask = GetBlur3(uv)-GetBlur1(uv)*.5;
comp_22=`    ret *= lerp(ret,1.3*ret*mask,pow(hue_shader.zxy,q2*(1-ret)));
comp_23=`    ret += .05;
comp_24=`    ret *= 1.1*ret;
comp_25=`    ret *= (hue_shader*4)-2.75;
comp_26=`    //ret *= 1-ret;
comp_27=`
comp_28=`}
################################################################################
Created with MilkDropLM Lite and edited by DJ XcitMosphere/Incubo_/Se7enSlasher

Try it yourself: https://colab.research.google.com/github/InferenceIllusionist/MilkDropLM-Lite/blob/main/MilkDropLM_7b_Lite_Notebook.ipynb

https://huggingface.co/InferenceIllusionist/MilkDropLM-7b-v0.3

Prompt: Green Binary Matrix
################################################################################

MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=0.997
fVideoEchoAlpha=0.500
nVideoEchoOrientation=1
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.500
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.200
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.500
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=0.700
wavecode_0_g=0.700
wavecode_0_b=1.000
wavecode_0_a=0.200
wave_0_per_point1=
wave_0_per_point2=x = .5 + (bass*.2)*sin(sample*2*(time*10*treb));
wave_0_per_point3=y = .5 + (bass*.2)*cos(sample*2*(time*10*treb));
wave_0_per_point4=r = 1 + .2*sin(sample*2+(time*10*bass));
wave_0_per_point5=g = 1 + .2*sin(sample*2+(time*10*treb));
wave_0_per_point6=b = 1 + .2*sin(sample*2+(time*10*mid));
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=x = .5 + (bass*.2)*sin(sample*2*(time*10*treb));
wave_1_per_point2=y = .5 + (bass*.2)*cos(sample*2*(time*10*treb));
wave_1_per_point3=r = 1 + .2*sin(sample*2+(time*10*bass));
wave_1_per_point4=g = 1 + .2*sin(sample*2+(time*10*treb));
wave_1_per_point5=b = 1 + .2*sin(sample*2+(time*10*mid));
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=x = .5 + (bass*.075)*sin(sample*2*(time*100*bass));
wave_3_per_point2=y = .5 + (bass*.075)*cos(sample*2*(time*100*bass));
wave_3_per_point3=r = 1 + .2*sin(sample*2+(time*10*bass));
wave_3_per_point4=g = 1 + .2*sin(sample*2+(time*10*treb));
wave_3_per_point5=b = 1 + .2*sin(sample*2+(time*10*mid));
shapecode_0_enabled=1
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.54279
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=x = x + 0.2*sin(q1*0.13);
shape_0_per_frame2=y = y + 0.2*cos(q1*0.13);
shape_0_per_frame3=ang = q1*0.2;
shapecode_1_enabled=1
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.44484
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.99999
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=x = x + 0.2*sin(q1*0.15);
shape_1_per_frame2=y = y + 0.2*cos(q1*0.15);
shape_1_per_frame3=ang = q1*0.25;
shapecode_2_enabled=1
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.34484
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=x = x + 0.2*sin(q1*0.17);
shape_2_per_frame2=y = y + 0.2*cos(q1*0.17);
shape_2_per_frame3=ang = q1*0.3;
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=vol = 0; p1 = 0;
per_frame_init_2=vx = .2; vy = -0.1;
per_frame_init_3=kx = 0; ky = 0;
per_frame_init_4=
per_frame_1=dec_med = pow (0.96, 30/fps);
per_frame_2=dec_slow = pow (0.98, 30/fps);
per_frame_3=beat = max (max (bass, mid), treb); 
per_frame_4=avg = avg*dec_slow + beat*(1-dec_slow);
per_frame_5=is_beat = above(beat, .5+avg+peak) * above (time, t0+.2);
per_frame_6=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_7=peak = is_beat * beat + (1-is_beat)*peak*dec_med;
per_frame_8=index = (index + is_beat) %8;
per_frame_9=
per_frame_10=q20 = avg;
per_frame_11=q21 = beat;
per_frame_12=q22 = peak;
per_frame_13=q23 = index;
per_frame_14=q24 = is_beat;
per_frame_15=vol = if (is_beat, vol*.8+.2*rand(100)/100, dec_med*vol);
per_frame_16=
per_frame_17=p1 = .5 + .5*sin(time*.3);
per_frame_18=q26 = 0;
per_frame_19=
per_frame_20=trig = is_beat && (rand(4)<2);
per_frame_21=kx = kx*(1-trig) + trig* (rand(100)/100-.5);
per_frame_22=ky = ky*(1-trig) + trig* (rand(100)/100-.5);
per_frame_23=q10 = kx;
per_frame_24=q11 = ky;
per_frame_25=
per_frame_26=do_once = if (below(do_once,1),1,0);
per_frame_27=xpos = do_once*xpos + (1-do_once)*xpos;
per_frame_28=ypos = do_once*ypos + (1-do_once)*ypos;
per_frame_29=
per_frame_30=//xpos = xpos + .4*vol*sin(time*p1);
per_frame_31=//ypos = ypos + .4*vol*cos(time*p1);
per_frame_32=
per_frame_33=xpos = xpos + .05*vol;
per_frame_34=ypos = ypos + .05*vy*vol;
per_frame_35=
per_frame_36=q12 = 10*sin(xpos);
per_frame_37=q13 = 10*cos(ypos);
per_frame_38=q14 = 10*sin(-xpos);
per_frame_39=q15 = 10*cos(ypos);
per_frame_40=
per_frame_41=trig = is_beat && (rand(2)<1);
per_frame_42=vx = vx*(1-trig) + trig*(rand(10)-5)/10;
per_frame_43=vy = vy*(1-trig) + trig*(rand(10)-5)/10;
per_frame_44=
per_frame_45=q16 = 10*vx; // direction of light
per_frame_46=q17 = 10*vy;
per_frame_47=
per_frame_48=zoom = zoom + .3*vol;
per_frame_49=vy = vy + .2*vol;
per_frame_50=
per_frame_51=q18 = vol*.4; // brightness
per_frame_52=
per_pixel_1=dy = dy + .000001*q13*y/q11;
per_pixel_2=dx = dx + .000001*q14*x/q12;
per_pixel_3=kdx = dx; kdy = dy;
per_pixel_4=dx = 0; dy = 0;
per_pixel_5=
per_pixel_6=rot = rot + .05*(1-rad)*(q1*rad);
per_pixel_7=zoom = zoom - .05*(1-rad);
per_pixel_8=cx = cx + (x-.5)*.1*(1-2*rad);
per_pixel_9=cy = cy + (y-.5)*.1*(1-2*rad);
per_pixel_10=
per_pixel_11=dx = dx + .01*kdx;
per_pixel_12=dy = dy + .01*kdy;
warp_1=`shader_body {
warp_2=`float corr = texsize.xy*texsize_noise_lq.zw;
warp_3=`float2 uv1 = float2(uv.x-0.5,uv.y-0.5);//*aspect.xy;
warp_4=`
warp_5=`
warp_6=`float2 hor = float2 (.002,0);
warp_7=`float2 ver = float2 (0,.002);
warp_8=`//uv1 = uv1-.01*GetBlur1(uv);
warp_9=`//uv1 += .002*GetBlur3(uv)-.001*GetBlur1(uv);
warp_10=`float3 ret1 = (tex2D(sampler_noise_lq,uv*.5+.376)%2)*(.01) ;
warp_11=`
warp_12=`float3 crisp = tex2D(sampler_main,uv+hor+ver);
warp_13=`crisp += (.015)*ret1;
warp_14=`//crisp -= .002*(abs(frac(uv1.y*1.5)-.5))*float3(1,1,1);
warp_15=`//crisp /= abs(uv1.x);
warp_16=`
warp_17=`ret = crisp;
warp_18=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_19=`                      ((uv1.xyy*q27
warp_20=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_21=`                      ).xyz*
warp_22=`                      float3(1,1,0)*0.05 + 
warp_23=`                      time*float3(0,0,1)*q29
warp_24=`                     );
warp_25=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; 
warp_26=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; 
warp_27=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; 
warp_28=`ret *= .95; //Tweaked a little bit with a slow fade.
warp_29=`}
comp_1=`shader_body
comp_2=`{
comp_3=`
comp_4=`float2 uv1 = uv-.5;
comp_5=`
comp_6=`//uv = (uv1+q27/3);
comp_7=`float3 ret1 = GetPixel(uv) + GetBlur1(uv)*0;
comp_8=`
comp_9=`float2 hor = float2 (texsize.z,0);
comp_10=`float2 ver = float2 (0,texsize.w);
comp_11=`float dx = ( GetPixel(uv+hor) - GetPixel(uv-hor) ).x;
comp_12=`float dy = ( GetPixel(uv+ver) - GetPixel(uv-ver) ).x;
comp_13=`float2 dz = float2 (dx,dy);
comp_14=`
comp_15=`uv1 *= aspect.xy;
comp_16=`uv1 += q10*0 + dz*q16*.75;
comp_17=`float dots = saturate(.02/length(uv1));
comp_18=`dots *= saturate(1-lum(ret1));
comp_19=`
comp_20=`ret1 = (1+q22/12)*ret1 + q22*dots*float3(1,0,0);
comp_21=`
comp_22=`ret = ret1;
comp_23=`}
MILKDROP_PRESET_VERSION=201
PSVERSION=4
PSVERSION_WARP=4
PSVERSION_COMP=4
[preset00]
fRating=1.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.005
fWaveScale=0.118
fWaveSmoothing=0.900
fWaveParam=-0.480
fModWaveAlphaStart=0.400
fModWaveAlphaEnd=1.600
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=-0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.800
wave_g=0.490
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.035
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=1.850
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=0
wavecode_0_samples=120
wavecode_0_sep=38
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=2.15542
wavecode_0_smoothing=0.10000
wavecode_0_r=1.000
wavecode_0_g=0.000
wavecode_0_b=0.000
wavecode_0_a=0.500
wave_0_per_frame1=t1 = 0;
wave_0_per_frame2=t2 = 1;
wave_0_per_frame3=
wave_0_per_frame4=t3=t4=t5 = 0;
wave_0_per_point1=n = t1 * 8 + reg06;
wave_0_per_point2=
wave_0_per_point3=BPM = reg00*t2;
wave_0_per_point4=
wave_0_per_point5=x = BPM/reg01;
wave_0_per_point6=
wave_0_per_point7=y0 = gmegabuf(n)/8; 
wave_0_per_point8=y = 0.3 + y0;
wave_0_per_point9=
wave_0_per_point10=
wave_0_per_point11=amp = pow(value1+value2,2);
wave_0_per_point12=t5 += amp * (sample>0.5);
wave_0_per_point13=t4 += amp * (sample<0.5)*(sample>0.25);
wave_0_per_point14=t3 += amp * (sample < 0.25);
wave_0_per_point15=
wave_0_per_point16=reg50 = sqrt(t3);
wave_0_per_point17=reg51 = sqrt(t4);
wave_0_per_point18=reg52 = sqrt(t5);
wave_0_per_point19=
wave_0_per_point20=t1 += 1;
wave_0_per_point21=t2 *= reg05;
wavecode_1_enabled=0
wavecode_1_samples=120
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=0.89152
wavecode_1_smoothing=0.82000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=0.000
wavecode_1_a=0.500
wave_1_per_frame1=t1 = 0;
wave_1_per_frame2=t2 = 1;
wave_1_per_point1=n = (t1 + reg03) * 8 +reg06;
wave_1_per_point2=
wave_1_per_point3=BPM = reg00*t2;
wave_1_per_point4=
wave_1_per_point5=x = BPM/reg01;
wave_1_per_point6=
wave_1_per_point7=y0 = gmegabuf(n)/8; 
wave_1_per_point8=y = 0.3 + y0;
wave_1_per_point9=
wave_1_per_point10=
wave_1_per_point11=t1 += 1;
wave_1_per_point12=t2 *= reg05;
wavecode_2_enabled=0
wavecode_2_samples=120
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=5.34537
wavecode_2_smoothing=0.82000
wavecode_2_r=0.000
wavecode_2_g=0.600
wavecode_2_b=1.000
wavecode_2_a=0.500
wave_2_per_frame1=t1 = 0;
wave_2_per_frame2=t2 = 1;
wave_2_per_point1=n = (t1 + 2*reg03) * 8 +reg06;
wave_2_per_point2=
wave_2_per_point3=BPM = reg00*t2;
wave_2_per_point4=
wave_2_per_point5=x = BPM/reg01;
wave_2_per_point6=
wave_2_per_point7=y0 = gmegabuf(n)/8; 
wave_2_per_point8=y = 0.3 + y0;
wave_2_per_point9=
wave_2_per_point10=
wave_2_per_point11=t1 += 1;
wave_2_per_point12=t2 *= reg05;
wavecode_3_enabled=0
wavecode_3_samples=40
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=0.600
wave_3_per_frame1=t1 = 0;
wave_3_per_frame2=t2 = 1;
wave_3_per_point1=if (1,
wave_3_per_point2=
wave_3_per_point3=  n = t1*8+50000;
wave_3_per_point4=  BPM = reg00*t2*2;
wave_3_per_point5=  x = BPM/reg01;
wave_3_per_point6=  y0 = gmegabuf(n); 
wave_3_per_point7=  y = 0.3 + y0/50;
wave_3_per_point8=  
wave_3_per_point9=,
wave_3_per_point10=
wave_3_per_point11=  n = t1*8+60000;
wave_3_per_point12=  BPM = reg00*t2;
wave_3_per_point13=  x = BPM/reg01;
wave_3_per_point14=  y0 = gmegabuf(n); 
wave_3_per_point15=  y = 0.3 + y0/20;
wave_3_per_point16=  r = 0;
wave_3_per_point17=
wave_3_per_point18=);
wave_3_per_point19=
wave_3_per_point20=
wave_3_per_point21=t1 += 1;
wave_3_per_point22=t2 *= reg05;
wave_3_per_point23=
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.09820
shapecode_0_ang=0.00000
shapecode_0_tex_ang=1.00531
shapecode_0_tex_zoom=1.53110
shapecode_0_r=0.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=0.500
shapecode_0_r2=0.300
shapecode_0_g2=0.300
shapecode_0_b2=0.300
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=1.000
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=1
shapecode_1_textured=0
shapecode_1_num_inst=50
shapecode_1_x=0.800
shapecode_1_y=0.800
shapecode_1_rad=0.02194
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.93550
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=0.400
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=0.500
shapecode_1_border_r=0.000
shapecode_1_border_g=1.000
shapecode_1_border_b=0.000
shapecode_1_border_a=0.000
shape_1_per_frame1=y = 0.0 + instance/num_inst*q3*0.1;;
shape_1_per_frame2=x = 0.05;
shape_1_per_frame3=
shape_1_per_frame4=
shape_1_per_frame5=b = g = min(1,q3/2); b2=g2=g;
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=1
shapecode_2_thickOutline=1
shapecode_2_textured=0
shapecode_2_num_inst=21
shapecode_2_x=0.950
shapecode_2_y=0.900
shapecode_2_rad=0.06386
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.73678
shapecode_2_r=1.000
shapecode_2_g=0.600
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=0.700
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=0.000
shapecode_2_border_a=0.000
shape_2_per_frame1=k1 = (instance/num_inst)*0.2;
shape_2_per_frame2=
shape_2_per_frame3=x = 0.5 + abs(q4)*k1;
shape_2_per_frame4=y = 0.5 + q5*k1*q32*8;
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=1
shapecode_3_textured=0
shapecode_3_num_inst=2
shapecode_3_x=0.600
shapecode_3_y=0.650
shapecode_3_rad=0.04914
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.34933
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=0.200
shapecode_3_border_g=0.700
shapecode_3_border_b=0.500
shapecode_3_border_a=0.000
shape_3_per_frame1=
shape_3_per_frame2=if (instance ==0,
shape_3_per_frame3=  x = 0.95;
shape_3_per_frame4=  y = 0.5 + q11*0.04;
shape_3_per_frame5=,0);
shape_3_per_frame6=
shape_3_per_frame7=if (instance ==1,
shape_3_per_frame8=  x = 0.97;
shape_3_per_frame9=  y = 0.5 + q31*0.04;
shape_3_per_frame10=,0);
warp_1=`shader_body {
warp_2=`//ret = 1;
warp_3=`}
comp_1=`//Original shader by Plento
comp_2=`//ShaderToy Original: https://www.shadertoy.com/view/wtV3RD
comp_3=`//MilkDrop (HLSL) Port by Incubo_
comp_4=`//TODO: Make these carts not jittery.
comp_5=`
comp_6=`//BEGIN//
comp_7=`float2 R;
comp_8=`#define st(a, b, t) smoothstep(a, b, t)
comp_9=`
comp_10=`float2 rot(float2 p, float a){
comp_11=` 	return float2(p.x*cos(a) - p.y*sin(a), p.x*sin(a) + p.y*cos(a));   
comp_12=`}
comp_13=`
comp_14=`float height(float x){
comp_15=`    return sin(x*2.)*.15 + sin(x*3.)*.13 + sin(x*6.)*.02;
comp_16=`}
comp_17=`
comp_18=`
comp_19=`float aDx(float x){
comp_20=`    float h = .001;
comp_21=`    float y = height(x+h) - height(x);
comp_22=`    return atan2(y, h);
comp_23=`}
comp_24=`
comp_25=`float box(float2 uv1, float2 dim, float b)
comp_26=`{
comp_27=`    uv1 = abs(uv1);
comp_28=`    float bx = st(b, -b, uv1.y - dim.y);
comp_29=`    bx *= st(b, -b, uv1.x - dim.x );
comp_30=`    return bx;
comp_31=`}
comp_32=`
comp_33=`float circle(float2 uv2, float r, float b){
comp_34=` 	return st(r + b, r - b, length(uv2));   
comp_35=`}
comp_36=`float rtr(float2 uv3, float2 scale, float h,  float b){
comp_37=`    uv3.y -= h;
comp_38=`    uv3 *= scale;
comp_39=`    
comp_40=`    float tri = st(b, -b, dot(uv3, float2(1., 1.)));
comp_41=`    tri *= st(-b, b, uv3.y + h);
comp_42=`    tri *= st(-b, b, uv3.x);
comp_43=`    
comp_44=`    return tri;
comp_45=`}
comp_46=`
comp_47=`float4 track(float2 uv4){
comp_48=`    float b = .01;
comp_49=`    float trk = .0;
comp_50=`    float sup = .0;
comp_51=`    
comp_52=`    trk += st(-.005, .005, uv4.y + height(uv4.x) + .007);
comp_53=`    trk *= st(.005, -.005, uv4.y + height(uv4.x) - .007);
comp_54=`    
comp_55=`    float2 ruv = frac(uv4*8.) - .5;
comp_56=`    
comp_57=`    sup += st(.08, .07, abs(dot(ruv, float2(1., 1.))));
comp_58=`    sup += st(.08, .07, abs(dot(ruv, float2(-1., 1.))));
comp_59=`    sup *= st(.001, -.001, uv4.y + height(uv4.x)+.007);
comp_60=`    
comp_61=`    float3 col = float3(.7, .7, .7)*trk;
comp_62=`    
comp_63=`    return float4(col, trk + sup);
comp_64=`}
comp_65=`
comp_66=`
comp_67=`float4 car(float2 uv5){
comp_68=`    float b = .02;
comp_69=`    
comp_70=`    float3 col = float3(0, 0, 0);
comp_71=`    float a = 0.;
comp_72=`    float wheel = 0.;
comp_73=`    
comp_74=`    a += box(uv5, float2(.7, .1), b);
comp_75=`    a += box(uv5, float2(0.75, .06), b);
comp_76=`    a += box(uv5 - float2(0., .2), float2(.5, .1), b);
comp_77=`    a += box(uv5 - float2(0., -.2), float2(.5, .1), b);
comp_78=`    
comp_79=`    a += rtr(float2(-uv5.x, uv5.y)-float2(.5, .1), float2(1., 1.), .2, b);
comp_80=`    a += rtr(float2(-uv5.x, -uv5.y)-float2(.5, .1), float2(1., 1.), .2, b);
comp_81=`    
comp_82=`    a += rtr(float2(uv5.x, uv5.y)-float2(.5, .1), float2(1., 1.), .2, b);
comp_83=`    a += rtr(float2(uv5.x, -uv5.y)-float2(.5, .1), float2(1., 1.), .2, b);
comp_84=`    
comp_85=`    a -= box(uv5-float2(-.25, .2), float2(.15, .1), b);
comp_86=`    a -= box(uv5-float2(.25, .2), float2(.15, .1), b);
comp_87=`    
comp_88=`    a = clamp(a, 0., 1.);
comp_89=`    
comp_90=`    wheel += circle(uv5-float2(.4,-.35), .15, .01);
comp_91=`    wheel += circle(uv5-float2(-.4,-.35), .15, .01);
comp_92=`    
comp_93=`    col = a * lerp(float3(.8, 0., 0.),float3(.8, .8, 0.), 
comp_94=`                  st(.2, .06, abs(uv5.y+.2)));
comp_95=`    col *= st(.01, .4, abs(uv5.y+.44));
comp_96=`    col *= st(.0, .2, abs(uv5.y-.38));
comp_97=`    	col *= st(.0, .9, abs(uv5.x+1.15));
comp_98=`    
comp_99=`    col *= 1.-wheel;
comp_100=`    
comp_101=`    return float4(col, a + wheel);
comp_102=`}
comp_103=`
comp_104=`    float4 hill(float2 uv6){
comp_105=` 	   float a = st(0.015, -0.015, uv6.y - height(uv6.x));
comp_106=`    float3 col = float3(0, 0, 0);
comp_107=`    col += max(uv6.y+1.075, .1)*float3(0.1, 0.43, 0.2) * a;
comp_108=`    return float4(col, a);
comp_109=`}
comp_110=`
comp_111=`shader_body
comp_112=`{
comp_113=`    R = texsize.xy;
comp_114=`    //uv = float2(uv - 0.5 , R)/R;
comp_115=`    float2 m = R.xy-.5; 
comp_116=`    m.x *= R.x/R.y;
comp_117=`    
comp_118=`    float3 col = lerp(float3(0.6, 0.6, 0.66), float3(0., .28,.88), -uv.y+1);
comp_119=`    col = lerp(col, float3(0.9, 0.9, 0.5), exp(-length((uv-float2(.2, .2))*14.)));
comp_120=`    
comp_121=`    //UV INVERT AND INCORRECT POSITION FIX
comp_122=`    uv = -uv;
comp_123=`    uv.x = -uv.x-1.115;
comp_124=`    uv = uv * 2.5+1.5;
comp_125=`    //END
comp_126=`
comp_127=`    float2 p = uv, p2 = uv;
comp_128=`   
comp_129=`    uv.x += time + m.x*5.;
comp_130=`    
comp_131=`    float4 Hill = hill(float2(2.*uv.x - time*.7, uv.y));
comp_132=`    
comp_133=`    col = lerp(col, Hill.rgb, Hill.a); 
comp_134=`    
comp_135=`    
comp_136=`    float pos = -.8;
comp_137=`    float4 cars = float4(0, 0, 0, 0);
comp_138=`    for(float i = 0; i < 5; i++){
comp_139=`        p = p2;
comp_140=`        pos +=.25;
comp_141=`        
comp_142=`        float ht = height(uv.x - (p.x+pos));    
comp_143=`    	p = p2 + float2(pos , ht);
comp_144=`    	p = rot(p, aDx(uv.x - p.x));
comp_145=`    
comp_146=`        cars = car((p-float2(0., .072)) * 7.);
comp_147=`        col = lerp(col,cars.rgb,cars.a); 
comp_148=`    }
comp_149=`    
comp_150=`    
comp_151=`    float4 trk = track(uv);
comp_152=`    col = lerp(col, trk.rgb,trk.a); 
comp_153=`    //col = 1.-exp(-col*1.4);
comp_154=`    ret = col*1.05;
comp_155=`}
comp_156=`//END//

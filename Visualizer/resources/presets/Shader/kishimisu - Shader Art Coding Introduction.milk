MILKDROP_PRESET_VERSION=201
PSVERSION=4
PSVERSION_WARP=4
PSVERSION_COMP=4
comp_1=// kishimisu - Shader Art Coding Introduction / https://www.shadertoy.com/view/mtyGWy
comp_2=// Transpiled to HLSL using Milkwave
comp_3=
comp_4=/* This animation is the material of my first youtube tutorial about creative 
comp_5=   coding, which is a video in which I try to introduce programmers to GLSL 
comp_6=   and to the wonderful world of shaders, while also trying to share my recent 
comp_7=   passion for this community.
comp_8=                                       Video URL: https://youtu.be/f4s1h2YETNY
comp_9=*/
comp_10=
comp_11=//https://iquilezles.org/articles/palettes/
comp_12=float3 palette( float t ) {
comp_13=    float3 a = float3(0.5, 0.5, 0.5);
comp_14=    float3 b = float3(0.5, 0.5, 0.5);
comp_15=    float3 c = float3(1.0, 1.0, 1.0);
comp_16=    float3 d = float3(0.263,0.416,0.557);
comp_17=
comp_18=    return a + b*cos( 6.28318*(c*t+d) );
comp_19=}
comp_20=
comp_21=//https://www.shadertoy.com/view/mtyGWy
comp_22=
comp_23=shader_body {
comp_24=float4 fragColor;
comp_25=float2 fragCoord;
comp_26=// CONV: Center on screen, then try some aspect correction
comp_27=uv = (uv*2) - 1;
comp_28=uv *= aspect.xy;
comp_29=// CONV: Adjust this to flip the output (±uv.x, ±uv.y)
comp_30=uv = float2(uv.x, -uv.y);
comp_31=
comp_32=//     float2 uv = (fragCoord * 2.0 - texsize.xy) / texsize.y;
comp_33=    float2 uv0 = uv;
comp_34=    float3 finalColor = float3(0.0, 0.0, 0.0);
comp_35=    
comp_36=    for (float i = 0.0; i < 4.0; i++) {
comp_37=        uv = frac(uv * 1.5) - 0.5;
comp_38=
comp_39=        float d = length(uv) * exp(-length(uv0));
comp_40=
comp_41=        float3 col = palette(length(uv0) + i*.4 + time*.4);
comp_42=
comp_43=        d = sin(d*8. + time)/8.;
comp_44=        d = abs(d);
comp_45=
comp_46=        d = pow(0.01 / d, 1.2);
comp_47=
comp_48=        finalColor += col * d;
comp_49=    }
comp_50=        
comp_51=    ret = float4(finalColor, 1.0);
comp_52=}

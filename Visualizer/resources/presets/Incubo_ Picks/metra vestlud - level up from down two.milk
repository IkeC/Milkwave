MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=2
[preset00]
fRating=5.000
fGammaAdj=2.630
fDecay=0.910
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=0
bSolarize=0
bInvert=1
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.180
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00909
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.500
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
shapecode_0_enabled=1
shapecode_0_sides=16
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=353
shapecode_0_x=0.503
shapecode_0_y=0.500
shapecode_0_rad=0.03760
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.11234
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.060
shape_0_per_frame1=sample=instance/num_inst;
shape_0_per_frame2=rad=.05+.04*sin(sample);
shape_0_per_frame3=
shape_0_per_frame4=/////  Knot
shape_0_per_frame5=
shape_0_per_frame6=q10=250*sample;
shape_0_per_frame7=my_x = -.22*cos(q10)-1.28*sin(q10)-.44*cos(3*q10)-.78*sin(3*q10);
shape_0_per_frame8=my_y= -.1*cos(2*q10)-.27*sin(2*q10)+.38*cos(4*q10)+.46*sin(4*q10);
shape_0_per_frame9=my_z=.7*cos(3*q10)-.4*sin(3*q10);
shape_0_per_frame10=
shape_0_per_frame11=
shape_0_per_frame12=/////// rotations... by flexi
shape_0_per_frame13=
shape_0_per_frame14=d = .2; 
shape_0_per_frame15=zoom = 1;
shape_0_per_frame16=
shape_0_per_frame17=w3 = q1;
shape_0_per_frame18=w2 = q2;
shape_0_per_frame19=w1 = q3;
shape_0_per_frame20=
shape_0_per_frame21=x1 = cos(w1)*my_x + sin(w1)*my_y;
shape_0_per_frame22=y1 = -sin(w1)*my_x + cos(w1)*my_y;
shape_0_per_frame23=z1 = my_z;
shape_0_per_frame24=
shape_0_per_frame25=x2 = cos(w2)*x1 + sin(w2)*z1;
shape_0_per_frame26=z2 = -sin(w2)*x1 + cos(w2)*z1;
shape_0_per_frame27=y2 = y1;
shape_0_per_frame28=
shape_0_per_frame29=y3 = cos(w3)*y2 + sin(w3)*z2;
shape_0_per_frame30=z3 = -sin(w3)*y2 + cos(w3)*z2;
shape_0_per_frame31=x3 = x2;
shape_0_per_frame32=
shape_0_per_frame33=// perspective calculation
shape_0_per_frame34=
shape_0_per_frame35=l = sqrt(x3*x3 + y3*y3);
shape_0_per_frame36=w = atan2(x3,y3);
shape_0_per_frame37=p = tan(asin(1) + atan2(d+z3,l));
shape_0_per_frame38=d = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));
shape_0_per_frame39=
shape_0_per_frame40=my_x = zoom*sin(w)*p;
shape_0_per_frame41=my_y = zoom*cos(w)*p;
shape_0_per_frame42=
shape_0_per_frame43=p1 = .2*sin(sample*50);
shape_0_per_frame44=p2 = .2*sin(sample*80);
shape_0_per_frame45=
shape_0_per_frame46=x = .5+my_x*p1;
shape_0_per_frame47=y = .5+my_y*p2;
shape_0_per_frame48=
shape_0_per_frame49=r = .4*sin(sample*80);
shape_0_per_frame50=b = .8*sin(sample*66);
shape_0_per_frame51=g = .6*sin(sample*120);
per_frame_init_1=x1 = 2;
per_frame_init_2=y1= 2;
per_frame_init_3=z1 = 2;
per_frame_1=//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing
per_frame_2=vb = vb*0.95 + (1-vb)*pow(bass_att,2)*0.02;
per_frame_3=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_4=vm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;
per_frame_5=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_6=vt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;
per_frame_7=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_8=vvb = min(1,max(0,vvb));
per_frame_9=vvm = min(1,max(0,vvm));
per_frame_10=vvt = min(1,max(0,vvt));
per_frame_11=q1   = (vvb+vvm+vvt)*10;
per_frame_12=q2   = (vvb+vvm+vvt)*10;
per_frame_13=q3   = (vvb+vvm+vvt)*10;
per_frame_14=q4   = (vvb+vvm+vvt)*10;
per_frame_15=q5   = (vvb+vvm+vvt)*10;
per_frame_16=q6   = (vvb+vvm+vvt)*10;
per_frame_17=q7   = (vvb+vvm+vvt)*10;
per_frame_18=q8   = (vvb+vvm+vvt)*10;
per_frame_19=q9   = (vvb+vvm+vvt)*10;
per_frame_20=q10  = (vvb+vvm+vvt)*10;
per_frame_21=q11  = (vvb+vvm+vvt)*10;
per_frame_22=q12  = (vvb+vvm+vvt)*10;
per_frame_23=q13  = (vvb+vvm+vvt)*10;
per_frame_24=q14  = (vvb+vvm+vvt)*10;
per_frame_25=q15  = (vvb+vvm+vvt)*10;
per_frame_26=q16  = (vvb+vvm+vvt)*10;
per_frame_27=q17  = (vvb+vvm+vvt)*10;
per_frame_28=q18  = (vvb+vvm+vvt)*10;
per_frame_29=q19  = (vvb+vvm+vvt)*10;
per_frame_30=q20  = (vvb+vvm+vvt)*10;
per_frame_31=q21  = (vvb+vvm+vvt)*10;
per_frame_32=q22  = (vvb+vvm+vvt)*10;
per_frame_33=q23  = (vvb+vvm+vvt)*10;
per_frame_34=q24  = (vvb+vvm+vvt)*10;
per_frame_35=q25  = (vvb+vvm+vvt)*10;
per_frame_36=q26  = (vvb+vvm+vvt)*10;
per_frame_37=q27  = (vvb+vvm+vvt)*10;
per_frame_38=q28  = (vvb+vvm+vvt)*10;
per_frame_39=q29  = (vvb+vvm+vvt)*10;
per_frame_40=q30  = (vvb+vvm+vvt)*10;
per_frame_41=q31  = (vvb+vvm+vvt)*10;
per_frame_42=q32  = (vvb+vvm+vvt)*10;
per_frame_43=
per_frame_44=q1 = aspectx;
per_frame_45=q2 = aspecty;
per_frame_46=wave_a = 0;
per_frame_47=v = 0.5;
per_frame_48=j1 = j1*0.95 + sqr(bass*4)*v;
per_frame_49=j2 = j2*0.95 + sqr(mid*4)*v;
per_frame_50=j3 = j3*0.95 + sqr(treb*4)*v;
per_frame_51=
per_frame_52=n = n + j1*0.0052;
per_frame_53=n1 = n1 + j2*0.0052;
per_frame_54=n2 = n2 + j3*0.0052;
per_frame_55=
per_frame_56=
per_frame_57=q3 = n*0.01; // passing the 3 room angles
per_frame_58=q4 = n1*0.01;
per_frame_59=q5 = n2*0.01;
per_frame_60=
per_frame_61=
per_frame_62=// lorenz-attractor calc
per_frame_63=a = 10;
per_frame_64=b = 28;
per_frame_65=c = 8/3;
per_frame_66=dx1 = a*(y1-x1);
per_frame_67=dy1 = x1*(b-z1)-y1;
per_frame_68=dz1 = x1*y1-c*z1;
per_frame_69=d = 1;
per_frame_70=dd = sqrt(dx1*dx1 + dy1*dy1 + dz1*dz1);
per_frame_71=x1 = x1 + d*dx1/dd;
per_frame_72=y1 = y1 + d*dy1/dd;
per_frame_73=z1 = z1 + d*dz1/dd;
per_frame_74=
per_frame_75=q11 = x1;
per_frame_76=q12 = y1;
per_frame_77=q13 = z1;
per_frame_78=q14 = a;
per_frame_79=q15 = b;
per_frame_80=q16 = c;
per_frame_81=q17 = d;
per_pixel_1=cx1 = 0.5+sin(time*0.618)*0.2;
per_pixel_2=cy1 = 0.5+cos(time*1.618)*0.2;
per_pixel_3=
per_pixel_4=dir = bass;
per_pixel_5=
per_pixel_6=d = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));
per_pixel_7=
per_pixel_8=x1 = if( above(d,0.3),0,  sin(y-cy1)*0.05*dir);
per_pixel_9=y1 = if( above(d,0.3),0, -sin(x-cx1)*0.05*dir);
per_pixel_10=
per_pixel_11=
per_pixel_12=cx1 = 0.5+sin(time*2.618)*0.3;
per_pixel_13=cy1 = 0.5+cos(time*3.14)*0.3;
per_pixel_14=
per_pixel_15=dir = -mid*2;
per_pixel_16=
per_pixel_17=d = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));
per_pixel_18=
per_pixel_19=x2 = if( above(d,0.2),0,  sin(y-cy1)*0.05*dir);
per_pixel_20=y2 = if( above(d,0.2),0, -sin(x-cx1)*0.05*dir);
per_pixel_21=
per_pixel_22=cx1 = 0.5+sin(-time*2.618)*0.4;
per_pixel_23=cy1 = 0.5+cos(-time*1.14)*0.4;
per_pixel_24=
per_pixel_25=dir = treb*3;
per_pixel_26=
per_pixel_27=d = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));
per_pixel_28=
per_pixel_29=x3 = if( above(d,0.1),0,  sin(y-cy1)*0.05*dir);
per_pixel_30=y3 = if( above(d,0.1),0, -sin(x-cx1)*0.05*dir);
per_pixel_31=
per_pixel_32=
per_pixel_33=dx = dx+x1+x2+x3;
per_pixel_34=dy = dy+y1+y2+y3;
warp_1=`float sigmoid(float t, float c){
warp_2=`   return 1 / ( 1 + exp(t*c));
warp_3=`}
warp_4=`
warp_5=`float2 vortex(float2 domain, float2 position, float2 motionVector, float4 domainAspect, float radius, float sharpness, float spin, float zoom){
warp_6=`   domain -= position;
warp_7=`   domain *= domainAspect.xy;
warp_8=`   float sigmoidFilter = sigmoid( length(domain) - radius , sharpness );
warp_9=`   domain +=  + motionVector*sigmoidFilter;
warp_10=`   spin *= sigmoidFilter;
warp_11=`   float s = sin(spin);
warp_12=`   float c = cos(spin);
warp_13=`   float2 uv_rot;
warp_14=`   uv_rot.x = c*domain.x - s*domain.y;
warp_15=`   uv_rot.y = s*domain.x + c*domain.y;
warp_16=`   uv_rot *= domainAspect.zw;
warp_17=`   uv_rot += position;
warp_18=`   return saturate(position + (uv_rot-position)*lerp(1,zoom,sigmoidFilter));
warp_19=`}
warp_20=`
warp_21=`shader_body
warp_22=`{
warp_23=`
warp_24=`
warp_25=`float2 domain = uv;
warp_26=`float2 position = float2(q4,1-q8) + 0.49*0;
warp_27=`float2 motionVector = float2(-q15,q16)*q13*aspect.wz;
warp_28=`float4 domainAspect = aspect;
warp_29=`float radius = 0.07;
warp_30=`float sharpness = 50;
warp_31=`float spin = 1;
warp_32=`float zoom = 4;
warp_33=`
warp_34=`float2 uv_vortex = vortex( domain, position, motionVector, domainAspect, radius, sharpness, spin, zoom);
warp_35=`
warp_36=`uv = uv_vortex + texsize.zw*float2(0,0.15);
warp_37=`uv = lerp( uv_orig,uv,0.2);
warp_38=`
warp_39=`    float2 scale = float2(1280,1024)*texsize.zw; // 1280x1024 : the resolution i modelled this shader with
warp_40=`    float1 d = 0.0039;
warp_41=`    float1 dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;
warp_42=`    float1 dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;
warp_43=`    float1 dxb = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;
warp_44=`    float1 dyb = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;
warp_45=`    float2 my_uv = uv - float2(dx,dy)*0.0068 + float2(dxb,dyb)*0.0031;
warp_46=`
warp_47=`
warp_48=`
warp_49=`    float2 v = 0.008;
warp_50=`    ret.x = tex2D( sampler_fw_main, my_uv).x;
warp_51=`
warp_52=`    
warp_53=`    ret.x += (ret.x - GetBlur3(uv).x)*0.11;
warp_54=`    ret.x += 0.0041;
warp_55=`
warp_56=`
warp_57=`//--------------------------------
warp_58=`
warp_59=`    my_uv = uv_orig + float2(dy,-dx)*0.058*(1.01-GetBlur3(uv_orig).y);
warp_60=`
warp_61=`
warp_62=`
warp_63=`    v = 0.009;
warp_64=`    ret.z = tex2D( sampler_fw_main, my_uv).z;
warp_65=`    
warp_66=`    ret.z += (ret.z - GetBlur1(uv_orig).z)*length(my_uv-uv_orig)*180/length(scale);
warp_67=`    ret.z *= 0.646;
warp_68=`    ret.z += 0.0076;
warp_69=`
warp_70=`
warp_71=`
warp_72=`//--------------------------------
warp_73=`
warp_74=`    d = 0.009;
warp_75=`    my_uv = float2(-dy,dx)*0.0355;
warp_76=`
warp_77=`    dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).y*scale.x;
warp_78=`    dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).y*scale.y;
warp_79=`    my_uv += uv - float2(dx,dy)*0.025;
warp_80=`
warp_81=`
warp_82=`
warp_83=`    v = 0.012;
warp_84=`    ret.y =tex2D( sampler_fw_main, my_uv).y;
warp_85=`
warp_86=`    
warp_87=`    ret.y += (ret.y - GetBlur3(my_uv).y)*.11 + 0.034;
warp_88=`}
comp_1=`shader_body
comp_2=`{
comp_3=`
comp_4=`uv = 0.5 + (uv-0.5)*0.98;
comp_5=`    float2 d = texsize.zw*4;
comp_6=`    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );
comp_7=`    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );
comp_8=`
comp_9=`float4 noise = tex3D(sampler_noisevol_hq, ((uv.xyy+float3(lum(dx),lum(dy),0)*0.5)*texsize.xyy*texsize_noisevol_hq.zww).xyz*float3(1,1,0)*0.05
comp_10=`                                        + time*float3(0,0,1)*0.2 );
comp_11=`uv -= float2(lum(dx),lum(dy))*0.04;
comp_12=`ret = abs(GetPixel(uv)+GetBlur1(uv)-GetBlur2(uv)-GetBlur3(uv));
comp_13=`ret *= lum(noise)*3; 
comp_14=`ret = pow(ret,0.5);
comp_15=`ret=1-ret;
comp_16=`}

MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=3.000
fGammaAdj=2.000
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=2
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=1.059
fWaveScale=1.631
fWaveSmoothing=0.000
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00000
fShader=0.000
zoom=0.96000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00052
sx=1.00000
sy=1.00000
wave_r=1.000
wave_g=1.000
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=0.000
ib_size=0.010
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=23
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.80814
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.300
shapecode_0_g2=0.000
shapecode_0_b2=0.500
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=r = sin(1.1)>0;
shape_0_per_frame2=g = sin(0.6)>0;
shape_0_per_frame3=b = sin(0.4)>0;
shapecode_1_enabled=1
shapecode_1_sides=24
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.05428
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.81954
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=rad = rad+ 0.05*bass_att;
shapecode_2_enabled=1
shapecode_2_sides=24
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=4
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.09997
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.13669
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=0.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.200
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.800
shape_2_per_frame1=x = 0.5+(1+(bass_att+mid_att+treb_att)/10)*(1-2*(instance<2))*0.3*sin(time);
shape_2_per_frame2=y = 0.5+(1+(bass_att+mid_att+treb_att)/10)*(1-2*(instance>=1)*(instance<=2))*0.3*cos(time);
shape_2_per_frame3=r2 = instance <=1;
shape_2_per_frame4=g2 = (instance>=1)*(instance<=2);
shape_2_per_frame5=b2 = instance == 3;
shape_2_per_frame6=rad = rad+ 0.05*bass_att;
shapecode_3_enabled=0
shapecode_3_sides=24
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.030
shapecode_3_y=0.160
shapecode_3_rad=0.04914
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.81954
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=1.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=tic = time - tir;
shape_3_per_frame2=tir = time;
shape_3_per_frame3=
shape_3_per_frame4=mix = (mix + (q1+q2)*tic*.5)*below(mix,10000);
shape_3_per_frame5=y = mix - int(mix);
shape_3_per_frame6=x = 1;
per_frame_1=basstime = basstime + bass*0.03;
per_frame_2=basstime2 = basstime + bass*0.03;
per_frame_3=q1 = basstime2;
per_frame_4=
per_frame_5=//start in most active range
per_frame_6=basstime = if(below(basstime,1000),1000,basstime);
per_frame_7=//basstime = if(above(basstime,495),450,basstime);
per_frame_8=
per_frame_9=basstime = basstime + bass_att*0.03;
per_frame_10=vol = pow(bass+mid+treb,2);
per_frame_11=basssum = vol;
per_frame_12=
per_frame_13=stickybit = time%2;
per_frame_14=
per_frame_15=//avg vol
per_frame_16=//buffer 1
per_frame_17=volAvg = volAvg + vol*equal(stickybit,1);
per_frame_18=//number of samples 1 or framerate
per_frame_19=sample1 = sample1 + equal(stickybit,1);
per_frame_20=//buffer 2
per_frame_21=volAvg2 = volAvg2 + vol*equal(stickybit,0);
per_frame_22=//number of samples 2
per_frame_23=sample2 = sample2 + equal(stickybit,0);
per_frame_24=
per_frame_25=//transision
per_frame_26=edge = bnot(equal(bit2,stickybit));
per_frame_27=
per_frame_28=volAvg = volAvg - volAvg*edge*stickybit;
per_frame_29=volAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);
per_frame_30=
per_frame_31=sample1 = sample1  - sample1*edge*stickybit;
per_frame_32=sample2 = sample2  - sample2*edge*equal(stickybit,0);
per_frame_33=
per_frame_34=//test vol against avg buffer lvl
per_frame_35=diff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);
per_frame_36=diff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);
per_frame_37=
per_frame_38=q3 = diff;
per_frame_39=
per_frame_40=bit2 = time%2;
per_frame_41=
per_frame_42=difftime = difftime + diff*0.03;
per_frame_43=q2 = difftime;
per_frame_44=
per_frame_45=//fix a strange error
per_frame_46=difftime = if(above(difftime,2000),0, difftime);
per_frame_47=
per_frame_48=monitor = abs(cos(time))*3.14;
per_frame_49=
per_frame_50=rarr = rand(100)*0.01;
per_frame_51=
per_frame_52=decay_r = 0.5 + 0.2*(abs(sin(diff+rarr)));
per_frame_53=decay_g = 0.5 + 0.25*(abs(cos(diff+rarr)));
per_frame_54=decay_b = 0.5 + 0.30*(abs(atan(diff+rarr)));
per_frame_55=
per_frame_56=
per_frame_57=//compute unit vec to scale on
per_frame_58=xxx = sin(difftime*0.89);
per_frame_59=yyy = sin(difftime*0.99);
per_frame_60=zzz = sin(difftime*0.74);
per_frame_61=
per_frame_62=//normalise
per_frame_63=norm = 1/sqrt(xxx*xxx + yyy*yyy + zzz*zzz);
per_frame_64=xxx = xxx*norm;
per_frame_65=yyy = yyy*norm;
per_frame_66=zzz = zzz*norm;
per_frame_67=
per_frame_68=monitor = ZZZ;
per_frame_69=
per_frame_70=q5 = xxx;
per_frame_71=q6 = yyy;
per_frame_72=q7 = zzz;
per_pixel_1=zoom = 1 + 0.05*q3;
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    ret = tex2D( sampler_fc_main, uv ).xyz;
warp_5=`    
warp_6=`    // darken (decay) over time
warp_7=`    ret *= 0.8; //or try: ret -= 0.004;
warp_8=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    float2 uv_echo = (uv - 0.5)*1.000*float2(1,-1) + 0.5;
comp_4=`    float3 value = lerp( tex2D(sampler_main, (uv)).xyz, 
comp_5=`                tex2D(sampler_main, (uv_echo)).xyz, 
comp_6=`                0.50 
comp_7=`              ); //video echo
comp_8=`    float3 value2 = lerp( tex2D(sampler_main, GetBlur1(uv)).xyz, 
comp_9=`                tex2D(sampler_main, GetBlur1(uv_echo)).xyz, 
comp_10=`                0.50 
comp_11=`              )*0.5; //video echo
comp_12=`   ret = (value + value2);   
comp_13=`
comp_14=`   ret = ret*2.00*ret; //gamma
comp_15=`}

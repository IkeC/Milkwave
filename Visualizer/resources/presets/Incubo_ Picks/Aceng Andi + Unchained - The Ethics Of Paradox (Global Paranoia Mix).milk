[preset00]
fRating=3.000000
fGammaAdj=1
fDecay=1
fVideoEchoZoom=0.999994
fVideoEchoAlpha=0.500000
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=1
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.005
fWaveScale=0.972
fWaveSmoothing=0.500
fWaveParam=0.000
fModWaveAlphaStart=0.500
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=1.000000
fWarpScale=1.000000
fZoomExponent=1.000000
fShader=0.040000
zoom=1.000000
rot=0.000000
cx=0.500000
cy=0.500000
dx=0.000000
dy=0.000000
warp=1.000000
sx=1.000000
sy=1.000000
wave_r=0.500000
wave_g=0.500000
wave_b=0.500000
wave_x=0.500000
wave_y=0.500000
ob_size=0.010000
ob_r=0.000000
ob_g=0.000000
ob_b=0.000000
ob_a=1.000000
ib_size=0.010000
ib_r=0.000000
ib_g=0.000000
ib_b=0.000000
ib_a=1.000000
nMotionVectorsX=0.000000
nMotionVectorsY=0.000000
mv_dx=0.000000
mv_dy=0.000000
mv_l=1.000000
mv_r=1.000000
mv_g=1.000000
mv_b=1.000000
mv_a=0.000000
per_frame_1=wave_r = 0.5 + 0.5*sin(6*time);
per_frame_2=wave_g = 0.5 + 0.5*sin(4.1*time);
per_frame_3=wave_b = -1 + (1-wave_r + 1-wave_g);
per_frame_4=warp = 0;
per_frame_5=ob_r = 1-abs(wave_r);
per_frame_6=ob_g = 1-abs(wave_g);
per_frame_7=ob_b = 1-abs(wave_b);
per_frame_8=ib_r = abs(wave_r);
per_frame_9=ib_b = abs(wave_b);
per_frame_10=ib_g = abs(wave_g);
per_frame_11=
per_frame_12=// Unchained - The Ethics Of Paradox (Global Paranoia Mix) Edited //
per_frame_13=old_bass_flop=bass_flop;
per_frame_14=old_treb_flop=treb_flop;
per_frame_15=old_mid_flop=mid_flop;
per_frame_16=chaos=.9+.1*sin(beat);
per_frame_17=entropy=if(bnot(entropy),2,if(equal(pulse,-3.14),1+int(rand(3)),entropy));
per_frame_18=bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*chaos+1.3);
per_frame_19=bass_flop=abs(bass_flop-equal(bass_thresh,2));
per_frame_20=treb_thresh=above(treb_att,treb_thresh)*2 + (1-above(treb_att,treb_thresh))*((treb_thresh-1.3)*chaos+1.3);
per_frame_21=treb_flop=abs(treb_flop-equal(treb_thresh,2));
per_frame_22=mid_thresh=above(mid_att,mid_thresh)*2 + (1-above(mid_att,mid_thresh))*((mid_thresh-1.3)*chaos+1.3);
per_frame_23=mid_flop=abs(mid_flop-equal(mid_thresh,2));
per_frame_24=bass_changed=bnot(equal(old_bass_flop,bass_flop));
per_frame_25=mid_changed=bnot(equal(old_mid_flop,mid_flop));
per_frame_26=treb_changed=bnot(equal(old_treb_flop,treb_flop));
per_frame_27=bass_residual = bass_changed*sin(pulse*.1*entropy) + bnot(bass_changed)*bass_residual;
per_frame_28=treb_residual = treb_changed*sin(pulse*.1*entropy) + bnot(treb_changed)*treb_residual;
per_frame_29=mid_residual = mid_changed*sin(pulse*.1*entropy) + bnot(mid_changed)*mid_residual;
per_frame_30=pulse=if(above(abs(pulse),3.14),-3.14,pulse+(bass_thresh+mid_thresh+treb_thresh)*.052);
per_frame_31=beat=if(above(abs(beat),3.14),-3.14,beat+(bass+treb+mid)*.01);
per_frame_32=q1=mid_residual;
per_frame_33=q2=bass_residual;
per_frame_34=q3=treb_residual;
per_frame_35=q4=sin(pulse);
per_frame_36=q5=sin(beat);
per_pixel_1=shift=q3*.1*mid_att;
per_pixel_2=checkx=bor(above(abs(q1),x)*below(abs(q2),x),above(abs(q2),x)*below(abs(q1),x));
per_pixel_3=checky=bor(above(abs(q1),y)*below(abs(q2),y),above(abs(q2),y)*below(abs(q1),y));
per_pixel_4=dx=if(checkx,shift*q4,dx);
per_pixel_5=dy=if(checky,shift*q5,dy);
per_pixel_6=bend = cos(   x*3.14*q2*above(q1,q2) + (rad*3.14*q2-3.14*q3)*above(q2,q3)+(y*3.14*q4)*above(q3,q1));
per_pixel_7=zoom = zoom+bend*.05*above(q4+q5,.8);
per_pixel_8=something=if(above(q5,0),shift,0.1*cos((rad+.3)*3.14+q2));
per_pixel_9=rot=if(checkx*checky,if(above(q4,0),rad*.2*q5,something),(zoom-1)*q5);
per_pixel_10=grid=(x*10)%(above(q1,q4)+above(q2,q5)+above(q3,q4)) + (y*10)%(above(q1,q5)+above(q2,q4)+above(q3,q5));
per_pixel_11=sx=sx-if(bnot(grid),q3*y,.1*rot*q1);
per_pixel_12=sy=sy-if(bnot(grid),q2*x,.1*rot*q1);
per_pixel_13=zoom=if(grid,zoom-.17*cos(rad*3.14+x*q1*3.14+y*q2*3.14)*(q5+q4),zoom);

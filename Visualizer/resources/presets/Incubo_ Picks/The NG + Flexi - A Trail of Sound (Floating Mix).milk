MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=5.000
fGammaAdj=1.900
fDecay=0.980
fVideoEchoZoom=1.169
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.004
fWaveScale=9.731
fWaveSmoothing=0.000
fWaveParam=1.000
fModWaveAlphaStart=1.000
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=0.010
fWarpScale=0.010
fZoomExponent=1.00000
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=1.000
wave_g=1.000
wave_b=1.000
wave_x=0.500
wave_y=0.040
ob_size=0.000
ob_r=0.110
ob_g=0.000
ob_b=0.100
ob_a=0.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=452
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=1
wavecode_0_scaling=2.44415
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=0.100
wave_0_init1=t2 = 0;
wave_0_init2=t3 = 0;
wave_0_init3=t4 = 0;
wave_0_init4=cl = 0;
wave_0_per_frame1=t1 = 0;
wave_0_per_frame2=t2 = 0;
wave_0_per_point1=ppo = 9;
wave_0_per_point2=index = t2*q32;
wave_0_per_point3=sample = t1 % ppo;
wave_0_per_point4=
wave_0_per_point5=nindex = gmegabuf(index + q30); // the next neighbor's index
wave_0_per_point6=nnindex = gmegabuf(index + q30+1); // the next neighbor's index
wave_0_per_point7=nnnindex = gmegabuf(index + q30+2); // the next neighbor's index
wave_0_per_point8=
wave_0_per_point9=x = gmegabuf(index);
wave_0_per_point10=y = gmegabuf(index+1);
wave_0_per_point11=//r = 0;//0.5 + gmegabuf(index+5)*0.5;
wave_0_per_point12=//g = 0;//0.5 + gmegabuf(index+6)*0.5;
wave_0_per_point13=//b = 1;//.5 + gmegabuf(index+7)*0.5;
wave_0_per_point14=
wave_0_per_point15=nx = gmegabuf(nindex);
wave_0_per_point16=ny = gmegabuf(nindex+1);
wave_0_per_point17=nnx = gmegabuf(nnindex);
wave_0_per_point18=nny = gmegabuf(nnindex+1);
wave_0_per_point19=nnnx = gmegabuf(nnnindex);
wave_0_per_point20=nnny = gmegabuf(nnnindex+1);
wave_0_per_point21=
wave_0_per_point22=x = 0.5 + (x-0.5)*q1;
wave_0_per_point23=y = 0.5 + (y-0.5)*q1;
wave_0_per_point24=nx = 0.5 + (nx-0.5)*q1;
wave_0_per_point25=ny = 0.5 + (ny-0.5)*q1;
wave_0_per_point26=nnx = 0.5 + (nnx-0.5)*q1;
wave_0_per_point27=nny = 0.5 + (nny-0.5)*q1;
wave_0_per_point28=nnnx = 0.5 + (nnnx-0.5)*q1;
wave_0_per_point29=nnny = 0.5 + (nnny-0.5)*q1;
wave_0_per_point30=
wave_0_per_point31=x = if( equal(sample,2), nx, x);
wave_0_per_point32=y = if( equal(sample,2), ny, y);
wave_0_per_point33=x = if( equal(sample,4), nnx, x);
wave_0_per_point34=y = if( equal(sample,4), nny, y);
wave_0_per_point35=x = if( equal(sample,6), nnnx, x);
wave_0_per_point36=y = if( equal(sample,6), nnny, y);
wave_0_per_point37=
wave_0_per_point38=a = above(sample,1)*below(sample,ppo-1)*a;
wave_0_per_point39=
wave_0_per_point40=t1 = t1 + 1;
wave_0_per_point41=t2 = if( equal(t1%ppo,0), t2 +1, t2);
wavecode_1_enabled=1
wavecode_1_samples=65
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=0.33408
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.500
wave_1_init1=t2 = 0;
wave_1_init2=t3 = 0;
wave_1_init3=t4 = 0;
wave_1_init4=cl = 0;
wave_1_per_frame1=t8 = 1;
wave_1_per_frame2=
wave_1_per_frame3=t1 = 0.5;
wave_1_per_frame4=t2 = 0.9;
wave_1_per_point1=d = 0;//d*0.85 + (value1)*1;
wave_1_per_point2=
wave_1_per_point3=y = 0.2 + (value1+value2)*0.15;
wave_1_per_point4=x = 0.9 - sample*0.8;
wave_1_per_point5=
wave_1_per_point6=gmegabuf((sample*128-1)*q32 + 14) = value1 + value2;
wavecode_2_enabled=0
wavecode_2_samples=350
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=1
wavecode_2_scaling=5.92556
wavecode_2_smoothing=0.00000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_frame1=t1 = 0;
wave_2_per_frame2=t2 = 0;
wave_2_per_frame3=
wave_2_per_frame4=
wave_2_per_point1=// q32 number of attributes
wave_2_per_point2=// q31 number of objects
wave_2_per_point3=
wave_2_per_point4=ppo = 7; // number of points used for each object
wave_2_per_point5=index = t2*q32; // object's index
wave_2_per_point6=
wave_2_per_point7=x = 0.5 +(gmegabuf(index)-0.5)/q2;
wave_2_per_point8=y = 0.5 + (gmegabuf(index+1)-0.5)/q2;
wave_2_per_point9=
wave_2_per_point10=// collecting pairs of index and distance to the current object in a local buffer
wave_2_per_point11=i = 0;
wave_2_per_point12=j = 0; 
wave_2_per_point13=loop(q31,
wave_2_per_point14=     d = sqrt( sqr(gmegabuf(index)-gmegabuf(i)) + sqr(gmegabuf(index+1)-gmegabuf(i+1)));
wave_2_per_point15=     d = if( equal(d,0), 1, d);
wave_2_per_point16=     megabuf(j)   = i; // store index/distance pairs
wave_2_per_point17=     megabuf(j+1) = d; 
wave_2_per_point18=     j = j+2;
wave_2_per_point19=     i = i+q32;
wave_2_per_point20=    );
wave_2_per_point21=
wave_2_per_point22=// sort that buffer, but only 5 cycles for the 5 nearest objects
wave_2_per_point23=i = 0;
wave_2_per_point24=loop( 5,
wave_2_per_point25=      j = i;
wave_2_per_point26=      smallestfind = 100;
wave_2_per_point27=      findindex = 0;
wave_2_per_point28=      loop( q31-j,
wave_2_per_point29=            distance =megabuf(j*2+1);
wave_2_per_point30=            smaller = above( smallestfind, distance);
wave_2_per_point31=            smallestfind = if(smaller, distance, smallestfind);
wave_2_per_point32=            findindex = if( smaller, j*2, findindex);
wave_2_per_point33=            j = j + 1;
wave_2_per_point34=          );
wave_2_per_point35=
wave_2_per_point36=      // now that the nearest object was found, swap it to the buffer's top
wave_2_per_point37=
wave_2_per_point38=      j = megabuf(i);
wave_2_per_point39=      d = megabuf(i+1);
wave_2_per_point40=
wave_2_per_point41=      megabuf(i)   = megabuf(findindex);
wave_2_per_point42=      megabuf(i+1) = megabuf(findindex+1);
wave_2_per_point43=      megabuf(findindex)   = j;
wave_2_per_point44=      megabuf(findindex+1) = d;
wave_2_per_point45=
wave_2_per_point46=      i = i+1;
wave_2_per_point47=    );
wave_2_per_point48=
wave_2_per_point49=
wave_2_per_point50=index2 = (t1)%ppo;
wave_2_per_point51=i = megabuf(index2-2);
wave_2_per_point52=xx = 0.5 + (gmegabuf(i)-0.5)/q2;
wave_2_per_point53=yy = 0.5 + (gmegabuf(i+1)-0.5)/q2;
wave_2_per_point54=w = asin(1)*index2/4;
wave_2_per_point55=//xx = x + sin(w)*0.1;
wave_2_per_point56=//yy = y + cos(w)*0.1;
wave_2_per_point57=x = if( equal(index2%2,0), x, xx);
wave_2_per_point58=y = if( equal(index2%2,0), y, yy);
wave_2_per_point59=
wave_2_per_point60=
wave_2_per_point61=a = below(index2,ppo-1)*above(index2,1)*a;
wave_2_per_point62=r = 0;//.5 + gmegabuf(index + 5)*0.5;
wave_2_per_point63=g = 0;//.5 + gmegabuf(index + 6)*0.5;
wave_2_per_point64=b = 1;//0.5 + gmegabuf(index + 7)*0.5;
wave_2_per_point65=
wave_2_per_point66=
wave_2_per_point67=t2 = t2 + equal(t1%ppo,ppo-1);
wave_2_per_point68=t1 = t1 + 1;
wave_2_per_point69=
wave_2_per_point70=//a = above(t1,128);
wavecode_3_enabled=0
wavecode_3_samples=15
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=1
wavecode_3_scaling=5.92556
wavecode_3_smoothing=0.00000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=0.400
wave_3_init1=t2 = 0
wave_3_per_frame1=t1 = 0;
wave_3_per_frame2=t2 = 0;
wave_3_per_frame3=t3 = 0;
wave_3_per_frame4=t4 = 0.5;
wave_3_per_point1=ppo = 5;
wave_3_per_point2=
wave_3_per_point3=index = t2*q32;
wave_3_per_point4=neighbor = 1;
wave_3_per_point5=neighbor = gmegabuf(index+10+neighbor);
wave_3_per_point6=x = 0.5 + (gmegabuf(index)-0.5)/q2;
wave_3_per_point7=y = 0.5 + (gmegabuf(index+1)-0.5)/q2;
wave_3_per_point8=xx = 0.5 + ( gmegabuf(neighbor) - 0.5)/q2;
wave_3_per_point9=yy = 0.5 + ( gmegabuf(neighbor+1) - 0.5)/q2;
wave_3_per_point10=
wave_3_per_point11=x = if( equal(t1 % 2, 0), x, xx);
wave_3_per_point12=y = if( equal(t1 % 2, 0), y, yx);
wave_3_per_point13=
wave_3_per_point14=
wave_3_per_point15=t2 = t2 + equal(t1,ppo);
wave_3_per_point16=t1 = if(above(t1,ppo),t1-ppo,t1) + 1;
wave_3_per_point17=
shapecode_0_enabled=0
shapecode_0_sides=3
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=392
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.16283
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.73458
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=0.500
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_init1=i3 = 0;
shape_0_init2=i4 = 0;
shape_0_per_frame1=i3 = if(equal(instance,0),0,i3);
shape_0_per_frame2=i4 = if(equal(instance,0),0,i4);
shape_0_per_frame3=ppo = 8;
shape_0_per_frame4=index = i4*q32;
shape_0_per_frame5=sample = i3 % ppo;
shape_0_per_frame6=
shape_0_per_frame7=size = gmegabuf(index+4)*40;
shape_0_per_frame8=
shape_0_per_frame9=x = gmegabuf(index);
shape_0_per_frame10=y = gmegabuf(index+1);
shape_0_per_frame11=
shape_0_per_frame12=ang = gmegabuf(index+9);
shape_0_per_frame13=rad = size*0.05;
shape_0_per_frame14=
shape_0_per_frame15=//r = gmegabuf(index+5);
shape_0_per_frame16=//g = gmegabuf(index+6);
shape_0_per_frame17=//b = gmegabuf(index+7);
shape_0_per_frame18=
shape_0_per_frame19=
shape_0_per_frame20=sample = sample/ppo;
shape_0_per_frame21=bending = gmegabuf(index + 12)*5 + gmegabuf(index + 10)*5;
shape_0_per_frame22=dir = -ang + (sample-0.4)*bending;
shape_0_per_frame23=
shape_0_per_frame24= ang =  asin(1)*1.5 - dir + bending*0.05;
shape_0_per_frame25=
shape_0_per_frame26=x = x + ((sample-0.3)*0.06*cos(dir)*size + sin(dir)*size*bending*0.01);
shape_0_per_frame27=y = y + ((sample-0.3)*0.06*sin(dir)*size - cos(dir)*size*bending*0.01);
shape_0_per_frame28=
shape_0_per_frame29=x = 0.5 + (x-0.5)*q1;
shape_0_per_frame30=
shape_0_per_frame31=rad = rad*1.5 - sample*0.05*size;
shape_0_per_frame32=
shape_0_per_frame33=i3 = i3 + 1;
shape_0_per_frame34=i4 = if( equal(i3%ppo,0), i4 +1, i4);
shapecode_1_enabled=0
shapecode_1_sides=32
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.05236
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=x = q3;
shape_1_per_frame2=y = q4;
shape_1_per_frame3=
shape_1_per_frame4=x = 0.5 + (x-0.5)/q2;
shape_1_per_frame5=y = 0.5 + (y-0.5)/q1;
shapecode_2_enabled=1
shapecode_2_sides=3
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=200
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.16283
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.73458
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=0.000
shapecode_2_r2=0.200
shapecode_2_g2=0.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=1.000
shape_2_init1=i3 = 0;
shape_2_init2=i4 = 0;
shape_2_per_frame1=i3 = if(equal(instance,0),0,i3);
shape_2_per_frame2=i4 = if(equal(instance,0),0,i4);
shape_2_per_frame3=ppo = 4;
shape_2_per_frame4=index = i4*q32;
shape_2_per_frame5=sample = i3 % ppo;
shape_2_per_frame6=
shape_2_per_frame7=size = gmegabuf(index+4)*2;
shape_2_per_frame8=
shape_2_per_frame9=x = gmegabuf(index);
shape_2_per_frame10=y = gmegabuf(index+1);
shape_2_per_frame11=
shape_2_per_frame12=ang = gmegabuf(index+9);
shape_2_per_frame13=rad = size*0.05;
shape_2_per_frame14=
shape_2_per_frame15=//r = gmegabuf(index+5);
shape_2_per_frame16=//g = gmegabuf(index+6);
shape_2_per_frame17=//b = gmegabuf(index+7);
shape_2_per_frame18=
shape_2_per_frame19=
shape_2_per_frame20=sample = sample/ppo;
shape_2_per_frame21=bending = gmegabuf(index + 12)*5 + gmegabuf(index + 10)*5;
shape_2_per_frame22=dir = -ang + bending*0;
shape_2_per_frame23=
shape_2_per_frame24= ang =  asin(1)*1.5 - dir + bending*0.05;
shape_2_per_frame25=
shape_2_per_frame26=
shape_2_per_frame27=
shape_2_per_frame28=x = x + ((-sample-0.0)*0.5*cos(dir)*size + sin(dir)*size*bending*0.0);
shape_2_per_frame29=y = y + ((-sample-0.0)*0.5*sin(dir)*size - cos(dir)*size*bending*0.0);
shape_2_per_frame30=
shape_2_per_frame31=x = 0.5 + (x-0.5)*q1;
shape_2_per_frame32=
shape_2_per_frame33=rad = size*(1-sample);
shape_2_per_frame34=
shape_2_per_frame35=i3 = i3 + 1;
shape_2_per_frame36=i4 = if( equal(i3%ppo,0), i4 +1, i4);
shapecode_3_enabled=0
shapecode_3_sides=3
shapecode_3_additive=1
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=392
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.16283
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.73458
shapecode_3_r=0.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=0.500
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_init1=i3 = 0;
shape_3_init2=i4 = 0;
shape_3_per_frame1=i3 = if(equal(instance,0),0,i3);
shape_3_per_frame2=i4 = if(equal(instance,0),0,i4);
shape_3_per_frame3=ppo = 8;
shape_3_per_frame4=index = i4*q32;
shape_3_per_frame5=sample = i3 % ppo;
shape_3_per_frame6=
shape_3_per_frame7=size = gmegabuf(index+4)*40;
shape_3_per_frame8=
shape_3_per_frame9=x = gmegabuf(index);
shape_3_per_frame10=y = gmegabuf(index+1);
shape_3_per_frame11=
shape_3_per_frame12=ang = gmegabuf(index+9);
shape_3_per_frame13=rad = size*0.05;
shape_3_per_frame14=
shape_3_per_frame15=r = gmegabuf(index+5);
shape_3_per_frame16=g = gmegabuf(index+6);
shape_3_per_frame17=b = gmegabuf(index+7);
shape_3_per_frame18=
shape_3_per_frame19=
shape_3_per_frame20=sample = sample/ppo;
shape_3_per_frame21=bending = gmegabuf(index + 12)*5 + gmegabuf(index + 10)*5;
shape_3_per_frame22=dir = -ang + (sample-0.4)*bending;
shape_3_per_frame23=
shape_3_per_frame24= ang =  asin(1)*1.5 - dir + bending*0.05;
shape_3_per_frame25=
shape_3_per_frame26=x = x + ((sample-0.3)*0.06*cos(dir)*size + sin(dir)*size*bending*0.01);
shape_3_per_frame27=y = y + ((sample-0.3)*0.06*sin(dir)*size - cos(dir)*size*bending*0.01);
shape_3_per_frame28=
shape_3_per_frame29=x = 0.5 + (x-0.5)/q2;
shape_3_per_frame30=
shape_3_per_frame31=rad = rad*1.5 - sample*0.05*size;
shape_3_per_frame32=
shape_3_per_frame33=i3 = i3 + 1;
shape_3_per_frame34=i4 = if( equal(i3%ppo,0), i4 +1, i4);
per_frame_init_1=mv_x=64;mv_y=48;
per_frame_init_2=nut=0;
per_frame_init_3=stp=0;stq=0;
per_frame_init_4=rtp=0;rtq=0;
per_frame_init_5=wvr=0;
per_frame_init_6=decay=0;
per_frame_init_7=dcsp=0
per_frame_init_8=
per_frame_1=decay=0.98;
per_frame_2=zoom=1.000;
per_frame_3=
per_frame_4=q1=time*0.4;
per_frame_5=
per_frame_6=
per_frame_7=
per_frame_8=
per_pixel_1=dx=sin(y*14)*sin(y*34+time)*0.002;
per_pixel_2=dy=cos(x*19+time)*cos(x*34)*0.002;
per_pixel_3=dy=dy
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    ret = tex2D( sampler_main, uv ).xyz;
warp_5=`
warp_6=`    // feather pen
warp_7=`    ret = max(ret, tex2D( sampler_main, (uv-0.5)*(1-8*length(texsize.zw)) + 0.5 ).xyz);
warp_8=`    ret = max(ret, tex2D( sampler_main, (uv-0.5)*(1+8*length(texsize.zw)) + 0.5 ).xyz);
warp_9=`
warp_10=`    // darken over time
warp_11=`    ret -= 0.024;
warp_12=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    uv = 0.05 + 0.9*uv;
comp_4=`
comp_5=`    // equivalent of a laplacian: [center*4 - each of the 4 neighbors*1]
comp_6=`    ret = 0;
comp_7=`    ret += tex2D(sampler_main, uv ).xyz*4;
comp_8=`    ret -= GetBlur1(uv)*4;
comp_9=`ret *= -1;
comp_10=`
comp_11=`    // little bit of noise:
comp_12=`    //ret *= 1 + 0.12*(tex2D(sampler_noise_lq, rand_frame.xy 
comp_13=`    //       + uv*texsize.xy*texsize_noise_lq.zw).xxx*2-1);
comp_14=` 
comp_15=`    // palettize:
comp_16=`    ret = pow(ret, float3(0.5, 0.5, 0.7));
comp_17=`
comp_18=`    ret = (ret-0.1)*1.1;
comp_19=`   
comp_20=`    //ret.xyz *= 2; // a little bit of overbright
comp_21=`}
comp_22=`
comp_23=`

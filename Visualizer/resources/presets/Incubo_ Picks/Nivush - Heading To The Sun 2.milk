MILKDROP_PRESET_VERSION=201
PSVERSION=4
PSVERSION_WARP=4
PSVERSION_COMP=4
[preset00]
fRating=4.000
fGammaAdj=1.994
fDecay=0.980
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.500
nVideoEchoOrientation=2
nWaveMode=5
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.800
fWaveScale=1.152
fWaveSmoothing=0.100
fWaveParam=-0.500
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=1.28055
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01249
sx=0.76440
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.010
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=253
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=1.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=// cool: 174, 332, 128, 240, 242, 332, 430, 442, 479, 509
wave_0_per_point2=
wave_0_per_point3=rg_bass = max(rg_bass*0.999, 0.5*min(2,max(0,bass_att-1.1)*1.5));
wave_0_per_point4=rg_mid = max(rg_mid*0.999, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));
wave_0_per_point5=rg_treb = max(rg_treb*0.999, 0.5*min(2,max(0,treb_att-1.1)*1.5));
wave_0_per_point6=
wave_0_per_point7=rg_bass1 = max(rg_bass*0.9999, 0.02 + 0.5*min(2,max(0,bass_att-1)*1.3));
wave_0_per_point8=rg_treb1 = max(rg_treb*0.9999, 0.02 + 0.5*min(2,max(0,treb_att-1)*1.3));
wave_0_per_point9=rg_mid1 = max(rg_mid*0.9999, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));
wave_0_per_point10=
wave_0_per_point11=beat = (rg_bass1 + rg_mid1 + rg_treb1)/3;
wave_0_per_point12=
wave_0_per_point13=rg_bass2 = rg_bass2 + 0.5*min(2,max(0,bass_att-1)*1.3);
wave_0_per_point14=rg_mid2 = rg_mid2 + 0.5*min(2,max(0,mid_att-1)*1.3);
wave_0_per_point15=rg_treb2 = rg_treb2 + 0.5*min(2,max(0,treb_att-1)*1.3);
wave_0_per_point16=beat2 = beat2 + (rg_bass2 + rg_mid2 + rg_treb2)/3;
wave_0_per_point17=
wave_0_per_point18=n = 5 + + 0*0.001*sin(0.1*time);
wave_0_per_point19=d = 77 + 0*6*sin(0*0.0001*(q5 + q6 + q7)/3 + 0.0001*time);
wave_0_per_point20=k = 6*sample * d;
wave_0_per_point21=rad = 0.1*sin(n*k + 1.4*time + 0.005*rg_treb2) + 0.07*beat + 0*0.1*cos(0.5*time) + 0*0.1*sin(0.6*time);
wave_0_per_point22=
wave_0_per_point23=next_x = 0*0.00001*cos(5*time) + if(equal(frame%30,0), 0.1 + 0.01*rand(80), next_x);
wave_0_per_point24=next_y = 0*0.00001*sin(5*time) + if(equal(frame%30,0),0.3 + 0.01*rand(40), next_y);
wave_0_per_point25=speed = 0.00001;
wave_0_per_point26=mx=if(abs(mx-next_x)>0.001,if(above(mx,next_x),mx-speed,mx+speed),next_x); 
wave_0_per_point27=my = if(abs(my-next_y)>0.001,if(above(my,next_y),my-speed,my+speed),next_y);
wave_0_per_point28=
wave_0_per_point29=x = mx + 0.1*cos(time) + rad * cos(k+0*0.6*time);
wave_0_per_point30=y = my + 0.1*sin(time) + rad * sin(k+0*0.4*time);
wave_0_per_point31=
wave_0_per_point32=//r = 0.5 + 0.4*sin(0.5*time);
wave_0_per_point33=//g = 0.4 + 0.2*sin(0.4*time);
wave_0_per_point34=//b = 0.6 + 0.4*cos(0.2*time);
wave_0_per_point35=r= rg_bass;
wave_0_per_point36=g= 0;
wave_0_per_point37=b= 0.5*rg_treb;
wavecode_1_enabled=0
wavecode_1_samples=253
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=1.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=// cool: 174, 332, 128, 240, 242, 332, 430, 442, 479, 509
wave_1_per_point2=
wave_1_per_point3=rg_bass = max(rg_bass*0.999, 0.5*min(2,max(0,bass_att-1.1)*1.5));
wave_1_per_point4=rg_mid = max(rg_mid*0.999, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));
wave_1_per_point5=rg_treb = max(rg_treb*0.999, 0.5*min(2,max(0,treb_att-1.1)*1.5));
wave_1_per_point6=
wave_1_per_point7=rg_bass1 = max(rg_bass*0.9999, 0.02 + 0.5*min(2,max(0,bass_att-1)*1.3));
wave_1_per_point8=rg_treb1 = max(rg_treb*0.9999, 0.02 + 0.5*min(2,max(0,treb_att-1)*1.3));
wave_1_per_point9=rg_mid1 = max(rg_mid*0.9999, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));
wave_1_per_point10=
wave_1_per_point11=beat = (rg_bass1 + rg_mid1 + rg_treb1)/3;
wave_1_per_point12=
wave_1_per_point13=rg_bass2 = rg_bass2 + 0.5*min(2,max(0,bass_att-1)*1.3);
wave_1_per_point14=rg_mid2 = rg_mid2 + 0.5*min(2,max(0,mid_att-1)*1.3);
wave_1_per_point15=rg_treb2 = rg_treb2 + 0.5*min(2,max(0,treb_att-1)*1.3);
wave_1_per_point16=beat2 = beat2 + (rg_bass2 + rg_mid2 + rg_treb2)/3;
wave_1_per_point17=
wave_1_per_point18=n = 5 + + 0*0.001*sin(0.1*time);
wave_1_per_point19=d = 77 + 0*6*sin(0*0.0001*(q5 + q6 + q7)/3 + 0.0001*time);
wave_1_per_point20=k = 6*sample * d;
wave_1_per_point21=rad = 0.1*sin(n*k + 1.4*time + 0.005*rg_mid) + 0.07*beat + 0*0.1*cos(0.5*time) + 0*0.1*sin(0.6*time);
wave_1_per_point22=
wave_1_per_point23=next_x = 0*0.00001*cos(5*time) + if(equal(frame%30,0), 0.1 + 0.01*rand(80), next_x);
wave_1_per_point24=next_y = 0*0.00001*sin(5*time) + if(equal(frame%30,0),0.3 + 0.01*rand(40), next_y);
wave_1_per_point25=speed = 0.00001;
wave_1_per_point26=mx=if(abs(mx-next_x)>0.001,if(above(mx,next_x),mx-speed,mx+speed),next_x); 
wave_1_per_point27=my = if(abs(my-next_y)>0.001,if(above(my,next_y),my-speed,my+speed),next_y);
wave_1_per_point28=
wave_1_per_point29=x = mx + 0.1*sin(time) + rad * cos(k+0*0.6*time);
wave_1_per_point30=y = my + 0.1*cos(time) + rad * sin(k+0*0.4*time);
wave_1_per_point31=
wave_1_per_point32=//r = 0.5 + 0.4*sin(0.5*time);
wave_1_per_point33=//g = 0.4 + 0.2*sin(0.4*time);
wave_1_per_point34=//b = 0.6 + 0.4*cos(0.2*time);
wave_1_per_point35=r= rg_bass;
wave_1_per_point36=g= 0;
wave_1_per_point37=b= 0.5*rg_treb;
wavecode_2_enabled=0
wavecode_2_samples=128
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=1.00000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=// cool: 174, 332, 128, 240, 242, 332, 430, 442, 479, 509
wave_2_per_point2=
wave_2_per_point3=rg_bass = max(rg_bass*0.999, 0.5*min(2,max(0,bass_att-1.1)*1.5));
wave_2_per_point4=rg_mid = max(rg_mid*0.999, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));
wave_2_per_point5=rg_treb = max(rg_treb*0.999, 0.5*min(2,max(0,treb_att-1.1)*1.5));
wave_2_per_point6=
wave_2_per_point7=rg_bass1 = max(rg_bass*0.9999, 0.02 + 0.5*min(2,max(0,bass_att-1)*1.3));
wave_2_per_point8=rg_treb1 = max(rg_treb*0.9999, 0.02 + 0.5*min(2,max(0,treb_att-1)*1.3));
wave_2_per_point9=rg_mid1 = max(rg_mid*0.9999, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));
wave_2_per_point10=
wave_2_per_point11=beat = (rg_bass1 + rg_mid1 + rg_treb1)/3;
wave_2_per_point12=
wave_2_per_point13=rg_bass2 = rg_bass2 + 0.5*min(2,max(0,bass_att-1)*1.3);
wave_2_per_point14=rg_mid2 = rg_mid2 + 0.5*min(2,max(0,mid_att-1)*1.3);
wave_2_per_point15=rg_treb2 = rg_treb2 + 0.5*min(2,max(0,treb_att-1)*1.3);
wave_2_per_point16=beat2 = beat2 + (rg_bass2 + rg_mid2 + rg_treb2)/3;
wave_2_per_point17=
wave_2_per_point18=n = 5 + + 0*0.001*sin(0.1*time);
wave_2_per_point19=d = 77 + 0*6*sin(0*0.0001*(q5 + q6 + q7)/3 + 0.0001*time);
wave_2_per_point20=k = 6*sample * d;
wave_2_per_point21=rad = 0.15*sin(n*k + 1.4*time + 0*0.001*rg_bass2) + 0.15*beat + 0*0.1*cos(0.5*time) + 0*0.1*sin(0.6*time);
wave_2_per_point22=
wave_2_per_point23=next_x = 0*0.00001*cos(5*time) + if(equal(frame%30,0), 0.1 + 0.01*rand(80), next_x);
wave_2_per_point24=next_y = 0*0.00001*sin(5*time) + if(equal(frame%30,0),0.3 + 0.01*rand(40), next_y);
wave_2_per_point25=speed = 0.00001;
wave_2_per_point26=mx=if(abs(mx-next_x)>0.001,if(above(mx,next_x),mx-speed,mx+speed),next_x); 
wave_2_per_point27=my = if(abs(my-next_y)>0.001,if(above(my,next_y),my-speed,my+speed),next_y);
wave_2_per_point28=
wave_2_per_point29=x = mx + 0.1*sin(time) + rad * cos(k+0*0.6*time);
wave_2_per_point30=y = my + 0.1*cos(time) + rad * sin(k+0*0.4*time);
wave_2_per_point31=
wave_2_per_point32=//x = 0.5 + rad*cos(k);
wave_2_per_point33=//y = 0.5 + rad*sin(k);
wave_2_per_point34=
wave_2_per_point35=//r = 0.5 + 0.4*sin(0.5*time);
wave_2_per_point36=//g = 0.4 + 0.2*sin(0.4*time);
wave_2_per_point37=//b = 0.6 + 0.4*cos(0.2*time);
wave_2_per_point38=r= 1;
wave_2_per_point39=g= 1;
wave_2_per_point40=b= 1;
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=30
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=2
shapecode_0_x=0.000
shapecode_0_y=1.000
shapecode_0_rad=0.14880
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.21819
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=0.000
shapecode_0_r2=0.680
shapecode_0_g2=0.300
shapecode_0_b2=0.400
shapecode_0_a2=0.180
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_init1=
shape_0_init2=r2=1;
shape_0_init3=g2=0;
shape_0_init4=b2=0.5;
shape_0_init5=
shape_0_init6=r=r2;
shape_0_init7=g=g2;
shape_0_init8=b=b2;
shape_0_init9=
shape_0_init10=border_r=r;
shape_0_init11=border_g=g;
shape_0_init12=border_b=b;
shape_0_init13=
shape_0_per_frame1=//r2 = 0.5 + 0.2*sin(time*0.842) + 0.2*cos(time*0.895) + 0.1*sin(time*0.6);
shape_0_per_frame2=//g2 = 0.5 + 0.2*sin(time*0.442) + 0.2*sin(time*0.576) + 0.1*cos(time*0.9);
shape_0_per_frame3=//b2 = 0.5 + 0.2*sin(time*0.642) + 0.2*cos(time*0.272) + 0.1*sin(time*0.3);
shape_0_per_frame4=x = q31;
shape_0_per_frame5=y = q32;
shapecode_1_enabled=0
shapecode_1_sides=63
shapecode_1_additive=1
shapecode_1_thickOutline=1
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.550
shapecode_1_y=0.450
shapecode_1_rad=0.41080
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.59010
shapecode_1_r=0.940
shapecode_1_g=0.000
shapecode_1_b=0.880
shapecode_1_a=1.000
shapecode_1_r2=0.890
shapecode_1_g2=0.000
shapecode_1_b2=0.910
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=x = 0.5 + 0.05*sin(0.3*time);
shapecode_2_enabled=0
shapecode_2_sides=95
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=1.93986
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.65190
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shapecode_3_enabled=0
shapecode_3_sides=44
shapecode_3_additive=0
shapecode_3_thickOutline=1
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.74631
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.72729
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
per_frame_init_1=n=1;
per_frame_init_2=speed = 4;
per_frame_init_3=m1 = 200;
per_frame_init_4=dirm1 = 1;
per_frame_init_5=
per_frame_init_6=stars1speed=0;
per_frame_init_7=stars2speed=0;
per_frame_1=rg1 = max(rg1*0.99, 0.02 + 0.5*min(2,max(0,treb_att-1)*1.3));
per_frame_2=rg2 = max(rg2*0.97, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));
per_frame_3=rg3 = max(rg3*0.97, 0.02 + 0.5*min(2,max(0,bass_att-1)*1.3));
per_frame_4=
per_frame_5=rg4 = min(2,max(0,mid_att-1)*1.3);
per_frame_6=
per_frame_7=q1 = rg1;
per_frame_8=q2 = rg2;
per_frame_9=q3 = rg3;
per_frame_10=
per_frame_11=wave_a = 0;
per_frame_12=warp = 0;
per_frame_13=
per_frame_14=q4 = sin(time);
per_frame_15=
per_frame_16=rg_treb = rg_treb + rg1;
per_frame_17=rg_mid = rg_mid + rg2;
per_frame_18=rg_bass = rg_bass + rg3;
per_frame_19=
per_frame_20=q5 = rg_treb;
per_frame_21=q6 = rg_mid;
per_frame_22=q7 = rg_bass;
per_frame_23=
per_frame_24=//####### stars speed #######//
per_frame_25=rg12 = max(rg12*0.9, 0.02 + 0.5*min(2,max(0,treb_att-1)*1.3));
per_frame_26=rg22 = max(rg22*0.9, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));
per_frame_27=rg32 = max(rg32*0.9, 0.02 + 0.5*min(2,max(0,bass_att-1)*1.3));
per_frame_28=stars1speed = stars1speed + (rg12+rg22+rg32)*0.333*0.06;
per_frame_29=q10 = stars1speed;
per_frame_30=stars2speed = stars1speed*0.5;
per_frame_31=q11 = stars2speed*2;
per_frame_32=//####### stars speed #######//
per_frame_33=
per_frame_34=q12 = rg12;
per_frame_35=q13 = rg22;
per_frame_36=q14 = rg32;
per_frame_37=
per_frame_38=q25 = sin(0.1*q6);
per_frame_39=q26 = sin(0.05*q5);
per_frame_40=
per_frame_41=tic = min(time-tin,.1);
per_frame_42=tin = time;
per_frame_43=ra = 10;
per_frame_44=treb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);
per_frame_45=mid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);
per_frame_46=bass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);
per_frame_47=vav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);
per_frame_48=vt = vt + tic*vav;
per_frame_49=
per_frame_50=q8 = vt*.5;
per_frame_51=
per_frame_52=rot = sin(0.1*time + q8) + cos(0.3*time);
per_frame_53=rot = if(n==0, 0, rot);
per_frame_54=//rot = 0;
per_frame_55=
per_frame_56=//normal image
per_frame_57=zoom0 = .3;
per_frame_58=dx0 = 1.2489;
per_frame_59=dy0 = 0.3;
per_frame_60=
per_frame_61=//******** position 1 parameters ********
per_frame_62=dx1 = 1.2489 + 0.0001*sin(time*0.7);
per_frame_63=dy1 = 0.3204 + 0.0001*cos(time*0.8) + 0.0002*sin(cos(time*0.2));
per_frame_64=zoom1 = 2000 + 1700*sin(time*0.3 + 0*0.005*q5 + 0.007*q6 + 0.01*q7);
per_frame_65=
per_frame_66=//******** position 2 parameters ********
per_frame_67=dx2 = 1.27943 + 0.00006*sin(time*0.4);
per_frame_68=dy2 = 0.35982 + 0.00007*cos(time*0.3) + 0.00007*sin(cos(time*0.2));
per_frame_69=zoom2 = 5000 + 4930*sin(0.1*time + 0*0.005*q5 + 0.005*q6 + 0.005*q7);
per_frame_70=
per_frame_71=//******** position 3 parameters ********
per_frame_72=dx3 = 1.23776 + 0.0001*sin(time*0.7);
per_frame_73=dy3 = 0.4017 + 0.0001*cos(time*0.8) + 0.0002*sin(cos(time*0.2));
per_frame_74=zoom3 = 1000 + 900*sin(0.1*time + 0.002*q5 + 0.002*q6 + 0.002*q7);
per_frame_75=
per_frame_76=//******** position 4 parameters ********
per_frame_77=dx4 = 1.070881 + 0.0001*sin(time*0.2);
per_frame_78=dy4 = -0.03498 + 0.00015*cos(time*0.15) + 0.0001*sin(cos(time*0.1));
per_frame_79=zoom4 = 5000  +  3000*sin(0.06*time + 0*0.002*q5 + 0.004*q6 + 0.001*q7);
per_frame_80=
per_frame_81=//********position 5 parameters ********
per_frame_82=speed = pow(speed,1.006);
per_frame_83=speed = if(speed >= 20000, 4, speed); 
per_frame_84=zoom5 = speed;
per_frame_85=dx5 = 1.0002605;
per_frame_86=dy5 = 0.3896076;
per_frame_87=rot5 = sin(time);
per_frame_88=
per_frame_89=//******** position 6 parameters ********
per_frame_90=zoom6 = 2 + 0.5*sin(time);
per_frame_91=dx6 = 1 + 0.4*sin(0.4*time);
per_frame_92=dy6 = 0.4 + 0.2*cos(0.2*time);
per_frame_93=rot6 = 0;
per_frame_94=
per_frame_95=
per_frame_96=
per_frame_97=//******** position 7 parameters ********
per_frame_98=zoom7 = 0.6 + 0.05*sin(time*0.3) + 0*0.3*sin(0.3*time) + 0*0.2*sin(0.6*time);
per_frame_99=dx7 = 0.52 + 0*0.3*sin(0.4*time);
per_frame_100=dy7 = 0.26 + 0*0.2*cos(0.2*time);
per_frame_101=rot7 = 0.1*sin(0.019*q5);
per_frame_102=
per_frame_103=/*
per_frame_104=//******** position 8 parameters ********
per_frame_105=zoom8 = 1.3 + 0*5*sin(0.5*time);
per_frame_106=dx8 = 0.513 + 0.5*sin(0.5*time);
per_frame_107=dy8 = 0.759 + 0*0.0005*cos(0.5*time);
per_frame_108=rot8 = 4.75;
per_frame_109=*/
per_frame_110=
per_frame_111=//******** change position ********
per_frame_112=change1 = if(frame%100 == 0, 1, 0);
per_frame_113=change2 = if(change1 == 1, 1, change2);
per_frame_114=n = if(rg4 > 1.2 && change2 == 1, n+1, n);
per_frame_115=change2 = if(rg4 > 1.2 && change2 == 1, 0, change2);
per_frame_116=n = if(n==5 && speed >= 19000, 6, n);
per_frame_117=change2 = if(n==5 && speed >= 19000, 0, change2);
per_frame_118=n = if(n > 7, 1, n);
per_frame_119=n=7;
per_frame_120=q9 = n;
per_frame_121=
per_frame_122=//******** position 0 ******** - mandelbrot
per_frame_123=zoom = if(n==0, zoom0, zoom);
per_frame_124=dx = if(n==0, dx0, dx);
per_frame_125=dy = if(n==0, dy0, dy);
per_frame_126=
per_frame_127=//******** position 1 ******** - mandelbrot
per_frame_128=zoom = if(n==1, zoom1, zoom);
per_frame_129=dx = if(n==1, dx1, dx);
per_frame_130=dy = if(n==1, dy1, dy);
per_frame_131=
per_frame_132=//******** position 2 ******** - mandelbrot
per_frame_133=zoom = if(n==2, zoom2, zoom);
per_frame_134=dx = if(n==2, dx2, dx);
per_frame_135=dy = if(n==2, dy2, dy);
per_frame_136=
per_frame_137=//******** position 3 ******** - mandelbrot
per_frame_138=zoom = if(n==3, zoom3, zoom);
per_frame_139=dx = if(n==3, dx3, dx);
per_frame_140=dy = if(n==3, dy3, dy);
per_frame_141=
per_frame_142=//******** position 4 ******** - mandelbrot
per_frame_143=zoom = if(n==4, zoom4, zoom);
per_frame_144=dx = if(n==4, dx4, dx);
per_frame_145=dy = if(n==4, dy4, dy);
per_frame_146=
per_frame_147=//******** position 5 ******** - check the shape in warp shader
per_frame_148=zoom = if(n==5, zoom5, zoom);
per_frame_149=dx = if(n==5, dx5, dx);
per_frame_150=dy = if(n==5, dy5, dy);
per_frame_151=rot = if(n==5, rot5, rot);
per_frame_152=
per_frame_153=//******** position 6 ******** - check the shape in warp shader
per_frame_154=zoom = if(n==6, zoom6, zoom);
per_frame_155=dx = if(n==6, dx6, dx);
per_frame_156=dy = if(n==6, dy6, dy);
per_frame_157=rot = if(n==6, rot6, rot);
per_frame_158=
per_frame_159=//******** position 7 ******** - check the shape in warp shader
per_frame_160=zoom = if(n==7, zoom7, zoom);
per_frame_161=dx = if(n==7, dx7, dx);
per_frame_162=dy = if(n==7, dy7, dy);
per_frame_163=rot = if(n==7, rot7, rot);
per_frame_164=
per_frame_165=/*
per_frame_166=//******** position 8 ******** - mandelbrot
per_frame_167=zoom = if(n==8, zoom8, zoom);
per_frame_168=dx = if(n==8, dx8, dx);
per_frame_169=dy = if(n==8, dy8, dy);
per_frame_170=rot = if(n==8, rot8, rot);
per_frame_171=*/
per_frame_172=
per_frame_173=//zoom =0.3;
per_frame_174=//rot = 0;
per_frame_175=
per_frame_176=//dirm1 = if(m1 >= 400, -1, if(m1 <= 150, 1, dirm1));
per_frame_177=//m1 = if(dirm1 == 1, m1 + 0.8, m1 - 0.8);
per_frame_178=//q11 = m1;
per_frame_179=
per_frame_180=//sunnpos
per_frame_181=//sunx = 0.7*sin(0.2*time);
per_frame_182=//suny = -0.3 + 0.3*cos(0.4*time);
per_frame_183=sunx = 0 + 0*0.03*sin(0.4*time);
per_frame_184=suny= 0 + 0*0.04*cos(0.23*time);
per_frame_185=q31 = sunx;
per_frame_186=q32 = suny;
warp_1=`sampler sampler_sun;
warp_2=`float4 texsize_sun;
warp_3=`sampler sampler_colors14;
warp_4=`sampler sampler_pw_noise_lq;
warp_5=`float2 rs2,rs0,rss;
warp_6=`
warp_7=`float Dist(float2 a, float2 b)
warp_8=`{
warp_9=`    return sqrt(pow(a.x-b.x,2) + pow(a.y-b.y,2));
warp_10=`}
warp_11=`
warp_12=`float fract(float a)
warp_13=`{
warp_14=`    return(a - floor(a));
warp_15=`}
warp_16=`
warp_17=`float2 fract(float2 a)
warp_18=`{
warp_19=`    float2 b = float2(fract(a.x), fract(a.y));
warp_20=`    return b;
warp_21=`}
warp_22=`
warp_23=`float Hash21(float2 p)
warp_24=`{
warp_25=`
warp_26=`    p = fract(p * float2(234.34, 435.345) );
warp_27=`    p += dot(p, p + 34.24);
warp_28=`    return fract(p.x*p.y + 0*abs(sin(cos(p.x*p.y))));
warp_29=`}
warp_30=`
warp_31=`float3 backstarsf(float2 UV, float mult)
warp_32=`{
warp_33=`    float3 backstars = 0;
warp_34=`    float2 backstarsuv = UV;
warp_35=`    backstarsuv.y *= -1;
warp_36=`    backstarsuv *= mult;
warp_37=`    float2 gv = fract(backstarsuv) -0.5 ;
warp_38=`    float2 id = floor(backstarsuv);
warp_39=`    float hash = Hash21(id);
warp_40=`    float circlepos = hash;
warp_41=`    float circle = Dist(gv,circlepos);
warp_42=`    float circler = 0.05;
warp_43=`    float star;
warp_44=`    float smooth;
warp_45=`    if(circle < circler)
warp_46=`    {
warp_47=`        smooth = hash*2;
warp_48=`        star = smoothstep(circler,circler - 0.05 - 0*smooth, circle);
warp_49=`        if(hash < 0.015) {backstars += float3(star*0.3,0,0);}
warp_50=`        else if(hash < 0.03) {backstars += float3(star*0.3,0,star);}
warp_51=`        else if(hash < 0.05) {backstars += float3(star,star*0.5,0);}
warp_52=`    }
warp_53=`    return backstars;
warp_54=`}
warp_55=`
warp_56=`shader_body
warp_57=`{
warp_58=`
warp_59=`ret = tex2D( sampler_main, uv ).xyz;
warp_60=`
warp_61=`float1 a = uv.x;
warp_62=`float1 b = uv.y;
warp_63=`float1 ca;
warp_64=`float1 cb;
warp_65=`float1 golden = 1.6180339887;
warp_66=`// ca; 0       ; (golden-2); 0.285; 0.285; 0.45  ; -0.70176; -0.835 ; -0.8 ; -0.7269
warp_67=`// cb; 1-golden; (golden-1); 0    ; 0.01 ; 0.1428; -0.3842 ; -0.2321; 0.156; 0.1889 
warp_68=`
warp_69=`if(q9 == 5){
warp_70=`    ca = 0.285;
warp_71=`    cb = 0;
warp_72=`}
warp_73=`else if(q9 == 6){
warp_74=`    ca = -0.66176 + 0.03*sin(0.25*time + 0.014*q5);
warp_75=`    cb = -0.3842;
warp_76=`}
warp_77=`// q9 does equal 7
warp_78=`else if(q9 == 7) {
warp_79=`    ca = -0.7069 + 0.03*sin(0.2*time + 0*0.012*q5) ;
warp_80=`    cb = 0.138 + 0.04*cos(time*0.4 + 0*0.03*q5);
warp_81=`}
warp_82=`else { // if q9 = 0
warp_83=`    ca = a;
warp_84=`    cb = b;
warp_85=`}
warp_86=`float1 aa;
warp_87=`float1 bb;
warp_88=`
warp_89=`float1 n = 0;
warp_90=`float1 maxiter = 60;
warp_91=`float1 m=0;
warp_92=`float1 r = 1000;
warp_93=`float1 r2 = r*r;
warp_94=`float3 col;
warp_95=`
warp_96=`float1 pa;
warp_97=`float1 pb;
warp_98=`float2 z;
warp_99=`float2 pz;
warp_100=`float leaves = 0.4*(q5+q6+q7)*0.3; // speed for the leaves
warp_101=`while(n < maxiter && m==0)
warp_102=`{
warp_103=`    aa = a*a - b*b;
warp_104=`    bb = 2*a*b;
warp_105=`    pa = a;
warp_106=`    pb = b;
warp_107=`    pz = float2(pa*cos(leaves*0.5) - pb*sin(leaves*0.5),pa*sin(leaves*0.5) + pb*cos(leaves*0.5));
warp_108=`    a = aa + ca;
warp_109=`    b = bb + cb;
warp_110=`    z = float2(a,b);
warp_111=`    
warp_112=`    //if(sqrt(pow(a-pa,2) + pow(b-pb,2)) > r2)
warp_113=`    //if(dot(z,pz) > r2)
warp_114=`    //if(sqrt(a*a + b*b) > r2)
warp_115=`    if(dot(z + 4000*q25,pz + 60*q26) > r2)
warp_116=`    {
warp_117=`        m = 1;
warp_118=`    }
warp_119=`    else
warp_120=`    {
warp_121=`        n++;
warp_122=`    }
warp_123=`}
warp_124=`
warp_125=`col = tex2D(sampler_colors14, float2(0.5 + 0.4*sin(n*0.4 + 0*0.2*time + 0.01*(q5+q6+q7)),0.5 + 0.4*cos(n*0.1 + 0*0.4*time + 0.015*(q5+q6+q7)))).xyz;
warp_126=`//col = pow(col,6);
warp_127=`//col*=40;
warp_128=`col = pow(col,4);
warp_129=`col*=2;
warp_130=`float beat = (q13 + q12 + q14)/3;
warp_131=`col*= 0.3 + float3(beat,beat,beat);
warp_132=`
warp_133=`float1 dist = (sqrt(a*a + b*b));
warp_134=`float1 fraciter = (dist - r) / (r2 - r);
warp_135=`fraciter = log2(log(dist) / log(r)) ;
warp_136=`n -= fraciter;
warp_137=`float3 color; 
warp_138=`color.x = 0.5 + 0.5*sin(0.09*n*1.5 + 0*0.7*time + 0.2*q5);
warp_139=`color.y = 0.5 + 0.5*sin(0.09*n*1.5 + 0*0.7*time + 0.2*q6);
warp_140=`color.z = 0.5 + 0.5*sin(0.09*n*1.5 + 0*0.7*time + 0.2*q7);
warp_141=`
warp_142=`float rotspeed = sin(0.02*q5); 
warp_143=`float2 uvrot = uv;
warp_144=`uvrot = float2(cos(rotspeed)*uvrot.x - sin(rotspeed)*uvrot.y, sin(rotspeed)*uvrot.x + cos(rotspeed)*uvrot.y);
warp_145=`
warp_146=`// background stars
warp_147=`float3 backstars1 = backstarsf(uvrot + 0.1*time, 50);
warp_148=`float3 backstars2 = backstarsf(uvrot + 0.12*time, 20);
warp_149=`float3 backstars3 = backstarsf(uvrot + 0.14*time, 10);
warp_150=`float3 backstars4 = backstarsf(uvrot + 0.16*time, 7);
warp_151=`//float3 backstars5 = backstarsf(uvrot + 3*time, 1);
warp_152=`float backstars = backstars1 + backstars2 + backstars3 + backstars4; // make it float3 to add colors for the stars
warp_153=`backstars *= 4*max(0.2, 0.05 + 0.5*min(1,max(0,mid_att-1)*1.3));
warp_154=`
warp_155=`// ### moving stars by martin ###
warp_156=`
warp_157=`float2 uv_temp = uv;
warp_158=`uv = uvrot;
warp_159=`uv-=float2(q31,q32);
warp_160=`rs0.x = atan2(uv.x, uv.y)/3.1416*2;
warp_161=`rs0.y = .05/(length (uv));
warp_162=`rss = float2 (rs0.x,rs0.y + q10 + time*0.1);
warp_163=`rss = mul(rss,float2x2(.7,.7,-.7,.7));
warp_164=`float noise = (tex2D(sampler_pw_noise_lq,rss/32)-.7 >= 0);
warp_165=`rss = abs(frac(rss*8)-0.5);
warp_166=`float3 dots = 0;
warp_167=`dots = saturate(.06/length(rss)) *noise;
warp_168=`
warp_169=`rss = float2 (rs0.x*2,rs0.y + q11 + time*0.05);
warp_170=`rss = mul(rss,float2x2(.7,.7,-.7,.7));
warp_171=`noise = (tex2D(sampler_pw_noise_lq,rss/32)-.7 >= 0);
warp_172=`rss = abs(frac(rss*8)-.5);
warp_173=`dots += saturate(.04/length(rss)) * noise;
warp_174=`
warp_175=`dots *= saturate(.04/abs(.01/rs0.y-0))+.0;
warp_176=`dots *= dots;
warp_177=`// ### End of stars ###   
warp_178=`
warp_179=`float angle = atan2(z.x, z.y);
warp_180=`
warp_181=`if(m == 1) // inside of the mandelbrot set
warp_182=`{  
warp_183=`    ret = col;
warp_184=`    float q = smoothstep(1.6,0,fraciter)*3; // darker leaves
warp_185=`    ret *= q;
warp_186=`    //ret *= 1 + smoothstep(0.5,0.1,fraciter)*3;
warp_187=`    ret *= 1+sin(angle*2 + leaves*2)*3; // add lines to the leaves, multiply the angle for more leaves
warp_188=`}
warp_189=`else // outside of the mandelbrot set
warp_190=`{
warp_191=`    ret = 0;
warp_192=`    float2 sunpos = float2(q31,q32);
warp_193=`    float circle = Dist(uv,sunpos);
warp_194=`    float circler = 0.17;    
warp_195=`    ret += dots;
warp_196=`    ret += backstars; 
warp_197=`    if(circle < circler) // add sun
warp_198=`    {
warp_199=`        float3 sun = 4*tex2D(sampler_sun, (uv*texsize.xy + 0.5*frame)*texsize_sun.zw).xyz;
warp_200=`        sun *= 0.9*smoothstep(circler,circler-0.045, circle);
warp_201=`        ret += float3(1,0.8,0)*sun*0.8;
warp_202=`        ret += sun*0.16*float3(0.8,1,3*(q1+q2+q3));
warp_203=`    }
warp_204=`    ret += 0.2*float3(0.4*(q1+q2+q3),0.2,1)*smoothstep(circler+0.5, circler, circle);
warp_205=`
warp_206=`}
warp_207=`
warp_208=`uv = uv_temp;
warp_209=`
warp_210=`//if(sqrt(uv.x*uv.x + uv.y*uv.y)<0.05) {ret = 1;}
warp_211=`//ret*=1.6;
warp_212=`//uv-=0.5;
warp_213=`//ret = float3(uv.x,uv.y,0);
warp_214=`}
comp_1=`//shining shader by martin
comp_2=`
comp_3=`#define sat saturate
comp_4=`float z, z0, radi;
comp_5=`float2 uv1, uv2, uva, dz;
comp_6=`static const int anz = 95;
comp_7=`static float beat = (q5 + q6 + q7)/3;
comp_8=`static float k = (0.07*q5 + 0.02*q6 + 0.02*q7)*q12;
comp_9=`static const float2 hor = texsize.zw*float2(1,0);
comp_10=`static const float2 ver = texsize.zw*float2(1,0).yx;
comp_11=`float3 Get1 (float2 uvi, float par)
comp_12=`{return lerp(GetBlur1(uvi), GetPixel(uvi), 0*saturate(par/2))*par;}
comp_13=`
comp_14=`shader_body {
comp_15=`float sunx =  q31*0.5 +0.51, suny = q32*0.5 + 0.48;
comp_16=`//if(sqrt(pow(uv.x - q31*0.5 -0.51 ,2) + pow(uv.y-q32*0.5 - 0.48,2))<0.05) {ret = 1;}
comp_17=`float2 sunpos = float2(sunx, suny);
comp_18=`uva = (uv-0.5)*aspect.xy+0.5;
comp_19=`float sun = (.01 / length (uva-sunpos));
comp_20=`
comp_21=`dz.x = lum(GetPixel(uv-hor)) - lum(GetPixel(uv+hor));
comp_22=`dz.y = lum(GetPixel(uv-ver)) - lum(GetPixel(uv+ver));
comp_23=`
comp_24=`float3 shine = GetPixel(uv); 
comp_25=`
comp_26=`radi = 1;
comp_27=`for (int n=1; n <= anz; n++)
comp_28=`{ 
comp_29=`  shine += 2.0/anz*Get1((uv-sunpos)*radi+sunpos,radi);
comp_30=`  radi -= 0.75/anz;;
comp_31=`}
comp_32=`ret += max(shine,0*GetPixel(uv));
comp_33=`//ret = shine+GetPixel(uv);
comp_34=`
comp_35=`}
comp_36=`written by martin
comp_37=`END

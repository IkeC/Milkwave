MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=1
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.133
fWaveSmoothing=0.000
fWaveParam=-1.000
fModWaveAlphaStart=1.000
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.050
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=400
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=t1 = 0;
wave_0_per_point1=x=sample*400/reg99;
wave_0_per_point2=y=.5 + 1/q32*-.4 + gmem[t1]*0.4;
wave_0_per_point3=t1+=1;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=0.000
wavecode_1_g=0.000
wavecode_1_b=0.700
wavecode_1_a=1.000
wave_1_per_frame1=t1 = 0;
wave_1_per_frame2=t2 = t2*.9 + .1*(rand(100)/100-.5);
wave_1_per_point1=n = t1;
wave_1_per_point2=len = 11;
wave_1_per_point3=trel = q29/8;
wave_1_per_point4=YCam = reg05; fov = reg06; MaxDist = reg07; SysZ = q18;
wave_1_per_point5=CAng = q8; SAng = q9;
wave_1_per_point6=
wave_1_per_point7=Halme = 7;
wave_1_per_point8=if (n%(len*Halme)== 0,
wave_1_per_point9=  
wave_1_per_point10=  z0 = SysZ/MaxDist;
wave_1_per_point11=  dec = if (frame%5==0,0,1);
wave_1_per_point12=  if (n== 0,  x00 = dec*x00 + (1-dec)*(rand(100)/100-.5); ,0);
wave_1_per_point13=  
wave_1_per_point14=  h1 =   (rand (100)/100)-.5;
wave_1_per_point15=  x0 = x00*z0/fov +h1*.1;
wave_1_per_point16=  y0 = reg10*z0*(sin(x0*reg11 + z0*reg13)) * sin(z0*reg12+reg13) + pow(x0,2)*fov*reg14;
wave_1_per_point17=  x0 *= MaxDist; y0 *= MaxDist; z0 *= MaxDist;
wave_1_per_point18=
wave_1_per_point19=  weg = 1*y0-.5*x0 + reg10*MaxDist*.5;
wave_1_per_point20=  weg = max(min(2-abs(weg),1),0);
wave_1_per_point21=
wave_1_per_point22=  y0_ = y0*CAng  +z0*SAng;
wave_1_per_point23=  z0 = y0*-SAng + z0*CAng;
wave_1_per_point24=  y0 = y0_-.0; 
wave_1_per_point25=  fac1 = max(0,(sin(17*z0) * sin(12*x0)*12-8))+1;
wave_1_per_point26=  fac1 = 1-abs(h1);
wave_1_per_point27=,0);
wave_1_per_point28=
wave_1_per_point29=
wave_1_per_point30=r = 0; g = 0; 
wave_1_per_point31=
wave_1_per_point32=if (n%len == 0,
wave_1_per_point33=  size = 2*fov*fac1/len;
wave_1_per_point34=  b0 = 0.1;
wave_1_per_point35=
wave_1_per_point36=  dx = (rand (100)/100-.5)/2;
wave_1_per_point37=  dy = (rand (100)/200+.5); ;
wave_1_per_point38=  dz = (rand (100)/100-.5)/2;
wave_1_per_point39=  x1 = x0; y1 = y0; z1 = z0;
wave_1_per_point40=, 
wave_1_per_point41=  x1 += dx*size;
wave_1_per_point42=  y1 += dy*size;
wave_1_per_point43=  z1 += dz*size;
wave_1_per_point44=  dy -= (y1-y0)*(n%len) * fac1/250; //da stimmt was nicht; geht z0 ein ?
wave_1_per_point45=//  dy *= .96;
wave_1_per_point46=);
wave_1_per_point47=
wave_1_per_point48=x = fov*x1/z1+.5;
wave_1_per_point49=y = fov*(y1-YCam)/z1 + 0.5;
wave_1_per_point50=
wave_1_per_point51=//x = min(1.1,max(-.1,x));
wave_1_per_point52=//y = min(1.1,max(-.1,y));
wave_1_per_point53=
wave_1_per_point54=b = b0; 
wave_1_per_point55=a = .2* (n%len <= len-2) * (n%len >= 1) * min(1,1.5-z1/MaxDist);
wave_1_per_point56=a *= (x>=0)*(x<=1)*(y>=0)*(y<=1)*(z0>1) * (weg == 0);
wave_1_per_point57=t1 += 1;
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=0.000
wavecode_3_g=0.200
wavecode_3_b=0.000
wavecode_3_a=1.000
wave_3_per_frame1=t1 = 0;
wave_3_per_point1=//Blaetter
wave_3_per_point2=n = t1*reg00 + reg03; MaxZW = reg01;
wave_3_per_point3=YCam = reg05; fov = reg06; MaxDist = reg07; 
wave_3_per_point4=CAng = q8; SAng = q9;
wave_3_per_point5=
wave_3_per_point6=
wave_3_per_point7=size = sqrt(gmegabuf(n+6));
wave_3_per_point8=
wave_3_per_point9=if (size == 1000000000000000,
wave_3_per_point10=  while(exec2(
wave_3_per_point11=    size = sqrt(gmegabuf(n+6));
wave_3_per_point12=    t1 += 1; n = t1*reg00;
wave_3_per_point13=    ,
wave_3_per_point14=    (size == 0) && (t1 < MaxZw)));
wave_3_per_point15=   j=0; 
wave_3_per_point16=,0);
wave_3_per_point17=
wave_3_per_point18=if (size > 0,
wave_3_per_point19=  x0 = gmegabuf(n);;
wave_3_per_point20=  y0 = gmegabuf(n+1);
wave_3_per_point21=  z0 = gmegabuf(n+2);
wave_3_per_point22=  
wave_3_per_point23=  x0 += (rand(100)/100-.5)*.1;
wave_3_per_point24=  y0 += (rand(100)/100-.5)*.1;
wave_3_per_point25=
wave_3_per_point26=  y0_ = y0*CAng  + z0*SAng;
wave_3_per_point27=  z0 = y0*-SAng + z0*CAng;
wave_3_per_point28=  y0 = y0_; 
wave_3_per_point29=
wave_3_per_point30=  x = fov*x0/z0 + 0.5 ;
wave_3_per_point31=  y = fov*(y0-YCam)/z0 + 0.5;
wave_3_per_point32=  a = min(.05, .01/size);
wave_3_per_point33=,a = 0;);
wave_3_per_point34=
wave_3_per_point35=r =  0;
wave_3_per_point36=b =  (rand(100) > 50)*.2;
wave_3_per_point37=//b = 1;
wave_3_per_point38=b = 0.4;
wave_3_per_point39=g =  0;
wave_3_per_point40=
wave_3_per_point41=t1 += 1;
wave_3_per_point42=
shapecode_0_enabled=1
shapecode_0_sides=16
shapecode_0_additive=0
shapecode_0_thickOutline=1
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.300
shapecode_0_y=0.800
shapecode_0_rad=0.17913
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=4.86445
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=0.900
shapecode_0_border_g=0.100
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_init1=bob = 1.5;
shape_0_init2=ro = 0;
shape_0_init3=red = rand(20);
shape_0_per_frame1=
shape_0_per_frame2=y=0.5; x = .45+instance*0.1;
shape_0_per_frame3=
shape_0_per_frame4=x = 0.5+.2*cos(q3);
shape_0_per_frame5=y = 0.5+.2*sin(q3)*q32;
shape_0_per_frame6=rad=0.08*q32;
shape_0_per_frame7=
shape_0_per_frame8=a=max(0,min (1,q5*2));
shapecode_1_enabled=1
shapecode_1_sides=3
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.05504
shapecode_1_ang=3.92699
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=0.700
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=0.700
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.400
shape_1_per_frame1=if (instance==0, sides=3, sides=4; ang=0);
shape_1_per_frame2=x = (q1-80)/120; 
shape_1_per_frame3=y=0.85 - instance*0.01;
shape_1_per_frame4=a=0.5+q2*.0;
shape_1_per_frame5=
shape_1_per_frame6=//a *= (q5>0.6);
shape_1_per_frame7=
shape_1_per_frame8=a2=a=q5;
shape_1_per_frame9=
shapecode_2_enabled=1
shapecode_2_sides=20
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.800
shapecode_2_y=0.500
shapecode_2_rad=0.33005
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.22016
shapecode_2_r=0.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=0.400
shapecode_2_r2=0.000
shapecode_2_g2=0.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=0.600
shapecode_2_border_a=0.000
shape_2_per_frame1=x = (q1-80)/120; 
shape_2_per_frame2=y=0.85 - instance*0.00*q5;
shape_2_per_frame3=
shape_2_per_frame4=a = q5;
shape_2_per_frame5=rad = min(1,max(0,q5*(q2*0.2+0.5)));
shape_2_per_frame6=
shape_2_per_frame7=
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.200
shapecode_3_y=0.400
shapecode_3_rad=0.49139
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.62531
shapecode_3_r=1.000
shapecode_3_g=0.700
shapecode_3_b=1.000
shapecode_3_a=0.300
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
per_frame_init_1=n = 0; loop (5000,megabuf(n) =0;gmegabuf(n) = 0; n+=1;);
per_frame_init_2=
per_frame_init_3=//don't touch this
per_frame_init_4=maxind = 0; 
per_frame_init_5=minbpm=75; maxbpm=600; n_res=100; 
per_frame_init_6=bpmstep = (maxbpm-minbpm)/n_res;
per_frame_init_7=
per_frame_init_8=//for display only
per_frame_init_9=reg99=n_res;
per_frame_1=//Martin/Nitorami - DFT based beat detection with BPM identification
per_frame_2=
per_frame_3=dt=1/fps;
per_frame_4=dec_m = exp(-2*dt); dec_s = exp(-.25*dt); 
per_frame_5=bvol = (2*bass+mid+treb); 
per_frame_6=bvol_=bvol_*dec_m + (1-dec_m)*bvol;
per_frame_7=exc=bvol-bvol_;
per_frame_8=i = 0;
per_frame_9=qavg = 0;
per_frame_10=loop (n_res,
per_frame_11=  n = i*8;
per_frame_12=  w = (minbpm+i*bpmstep)*2*$pi/60;
per_frame_13=//discrete Fourier transform
per_frame_14=  d=1-dt*w*0.016;
per_frame_15=  n[1] = n[1]*d+exc * cos (time*w)*(1-d); 
per_frame_16=  n[2] = n[2]*d+exc * sin (time*w)*(1-d); 
per_frame_17=  n[3] = n[3]*dec_m+(1-dec_m)*sqrt(sqr(n[2]) + sqr(n[1]));
per_frame_18=  if (n[3]> (maxind*8)[3], maxind = max(1,min(n_res-2,i)),0);
per_frame_19=  qavg += sqr(n[3]);
per_frame_20=  gmegabuf(i)= n[3];
per_frame_21=  i += 1;
per_frame_22=);
per_frame_23=avg = sqrt (qavg/n_res);
per_frame_24=
per_frame_25=//Interpolate exact BPM from DFT samples
per_frame_26=m=maxind;
per_frame_27=BL=minbpm+(m-1)*bpmstep;
per_frame_28=B0=minbpm+m*bpmstep;
per_frame_29=BH=minbpm+(m+1)*bpmstep;
per_frame_30=
per_frame_31=AL=sqr(((m-1)*8)[3]);
per_frame_32=A0=sqr((m*8)[3]);
per_frame_33=AH=sqr(((m+1)*8)[3]);
per_frame_34=
per_frame_35=BPM = (BL*AL + B0*A0 + BH*AH) / (AL+A0+AH);
per_frame_36=
per_frame_37=if (BPM>blim,  BPM*=.5; blim= 190;, blim=195);
per_frame_38=if (BPM>blim2, BPM*=.5; blim2=190;,blim2=195);
per_frame_39=
per_frame_40=//###############################################################
per_frame_41=//Code below is for visualisation only 
per_frame_42=
per_frame_43=trel1 += BPM/60*dt*$pi*2;
per_frame_44=q3 = cos(trel1/2);
per_frame_45=q2 = sin(trel1/2);
per_frame_46=q32=aspecty;
per_frame_47=
per_frame_48= //perceived detection quality
per_frame_49=quality = ((maxind*8)[3]/avg);
per_frame_50=q5 = min (1,quality*.15);
per_frame_51=
per_frame_52=//lowpass 2nd order for cursor movement
per_frame_53=fg = .4; Q=1; omega = 2*$pi*min(0.5,fg/fps); tcos = cos (omega); alpha = sin(omega)/(2*Q);
per_frame_54=b0=(1-tcos)/2; b1=1-tcos; b2=(1-tcos)/2; a0=1+alpha; a1=-2*tcos; a2=1-alpha;
per_frame_55=b0a0=b0/a0; b1a0=b1/a0; b2a0=b2/a0; a1a0=a1/a0; a2a0=a2/a0;
per_frame_56=
per_frame_57=Xa = BPM; LOa= b0a0*Xa + b1a0*in1a + b2a0*in2a - a1a0*ou1a - a2a0*ou2a;
per_frame_58=in2a =in1a; in1a =Xa; ou2a =ou1a;  ou1a =LOa; Xa =LOa;
per_frame_59=
per_frame_60=q1 = Xa; //BPM Cursor
per_frame_61=
per_frame_62=monitor = q5;
per_pixel_1=zoom = .99;
warp_1=`sampler sampler_BPMScale ;
warp_2=`shader_body
warp_3=`{
warp_4=`
warp_5=`ret = ret *.9 - 0.01;
warp_6=`ret = (GetPixel(uv))*0.99-0.01;
warp_7=`
warp_8=`float2 uvs = uv*float2 (1,9);
warp_9=`ret = tex2D(sampler_BPMScale,uvs) * (uvs.y<1)*0.75;
warp_10=`}
warp_11=`
comp_1=`#define sat saturate
comp_2=`
comp_3=`shader_body {
comp_4=`float2 noise = tex2D(sampler_noise_hq,uv*4*aspect.xy)-.5; 
comp_5=`//     noise -= tex2D(sampler_noise_hq,uv*8*aspect.xy+texsize.zw*2); 
comp_6=`ret = GetPixel(uv);;
comp_7=`
comp_8=`//ret = max (ret,GetBlur1(uv+noise*.1));
comp_9=`}
comp_10=`
comp_11=`written by martin
comp_12=`END

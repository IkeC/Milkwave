MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=1.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.000
fWaveScale=0.010
fWaveSmoothing=0.630
fWaveParam=-1.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=0.037
fWarpScale=0.015
fZoomExponent=1.00000
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.03300
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.300
ib_size=0.090
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=12.800
nMotionVectorsY=9.600
mv_dx=0.000
mv_dy=0.000
mv_l=1.000
mv_r=1.000
mv_g=0.910
mv_b=0.710
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.300
b1x=0.000
b2x=0.000
b3x=1.000
b1ed=0.000
per_frame_init_1=mv_x=64;mv_y=48;
per_frame_init_2=nut=0;
per_frame_init_3=stp=0;stq=0;
per_frame_init_4=rtp=0;rtq=0;
per_frame_init_5=wvr=0;
per_frame_init_6=decay=0;
per_frame_init_7=dcsp=0
per_frame_init_8=
per_frame_1=decay=1;
per_frame_2=zoom=1.1;
per_frame_3=
per_frame_4=warp = 0;
per_frame_5=
per_frame_6=vol=(bass_att+mid_att+treb_att)*0.25;
per_frame_7=vol=vol*vol;
per_frame_8=mtime=mtime+vol*0.1;
per_frame_9=
per_frame_10=q1=mtime*0.4;
per_frame_11=
per_frame_12=
per_frame_13=
per_frame_14=
warp_1=`float2 uv0, uv1;
warp_2=`float d;
warp_3=`static const float2 par = float2 (q1,q2);
warp_4=`
warp_5=`shader_body
warp_6=`{
warp_7=`uv0 = 5*uv;
warp_8=`uv1 = uv0;
warp_9=`d= length(uv1);
warp_10=`
warp_11=`for ( int n=0; (n <10) && (n<14*d) ; n++ )
warp_12=`{
warp_13=`uv1 += sin(uv1.yx+par.yx) + uv0 - par;
warp_14=`d=frac(.1*length (uv1));
warp_15=`}
warp_16=`
warp_17=`ret= d*float3 (1, 1, 4);
warp_18=`}
comp_1=`sampler sampler_pw_noise_lq;
comp_2=`float cross, noise, z, mask;
comp_3=`float2 rs, rs0, uv1, uv2, uv3,uv4,uvt,dz;
comp_4=`float3 ret1,ret2,struc,flash2;
comp_5=`
comp_6=`float3 Get1 (float2 uvi){return GetPixel (uvi);}
comp_7=`
comp_8=`shader_body {
comp_9=`uv = uv_orig ;
comp_10=`float iter = 8*saturate (texsize.z*2048*(0.25+uv.y));
comp_11=`ret = Get1(uv); ret1 = ret; ret2 = ret;
comp_12=`for (int n =1; n < iter; n++) {
comp_13=`  ret1 = max(ret1,Get1(uv+texsize.zw*float2(n,0)));
comp_14=`  ret2 = max(ret2,Get1(uv+texsize.zw*float2(0,n)));
comp_15=`}
comp_16=`
comp_17=`struc = ret1;
comp_18=`mask = saturate(1-6*lum(struc));
comp_19=`struc *= .1+.04/(length(rad/2-length((ret1+ret2*0.2))+0.6));
comp_20=`
comp_21=`z = .5/(uv.y-0.5);
comp_22=`z = min (8,abs(z))*sign(z);
comp_23=`uv2 = float2 (1*z*(uv.x-0.5),z);
comp_24=`uv1 = uv2+float2 (0,0);
comp_25=`noise = tex2D(sampler_noise_lq,uv1)*mask* min(1,1/(z*z))*0;
comp_26=`uv1 += noise*0.01;
comp_27=`//noise *= 1- (tex2D(sampler_pw_noise_lq,uv1/float2 (8,64)));
comp_28=`
comp_29=`ret = (pow(1-rad,1)/2 + noise*0.4*(z>0))*mask ;;
comp_30=`rad = length (uv1.x);
comp_31=`ret += saturate (0.01/pow(rad-.5,2)) * abs(sin(ang+q12)) * (mask+0.1) *(GetBlur2(frac(uv1/4-0.1))*6);
comp_32=`ret += struc;
comp_33=`
comp_34=`//NEW FLASH
comp_35=`for (int n = 1; n <= 3; n++)
comp_36=`{
comp_37=`  uvt = float2 (q25,q26) +0.5 * (tex2D(sampler_noise_lq,n/8+rand_frame)-0.5) + 0.5; ;
comp_38=`  uv3 = uv - uvt;
comp_39=`  cross = pow (0.00003+abs (uv3.x+uv3.y) *abs (uv3.x-uv3.y),1) * length (uv3);
comp_40=`  flash2 = 1-exp (-q22*0.00002/cross*GetBlur1(uvt) ) ;
comp_41=`//flash2 = 0.01/length (uv3);
comp_42=`  ret += flash2;
comp_43=`}
comp_44=`
comp_45=`//ret = GetPixel(uv);
comp_46=`}

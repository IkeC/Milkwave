MILKDROP_PRESET_VERSION=201
PSVERSION=4
PSVERSION_WARP=4
PSVERSION_COMP=4
comp_1=// yufengjie + IkeC - sqrt tile / https://www.shadertoy.com/view/wfSyDz
comp_2=// Transpiled to HLSL using Milkwave
comp_3=
comp_4=#define tx sin(time)*0.5+1
comp_5=#define T time
comp_6=
comp_7=shader_body {
comp_8=  float4 O = 0;
comp_9=  float2 I = uv;
comp_10=  // CONV: Center on screen, then try some aspect correction
comp_11=  uv = (uv*2) - 1;
comp_12=  uv *= aspect.xy;
comp_13=  // CONV: Adjust this to flip the output (±uv.x, ±uv.y)
comp_14=  uv = float2(uv.x, -uv.y);
comp_15=  uv *= 1.5;
comp_16=  uv.y+=0.09;
comp_17=
comp_18=  uv *= sin(time*0.1)*0.5+1;
comp_19=  //uv *= 0.3;
comp_20=
comp_21=  float2 R = uv.xy;
comp_22=  // float2 uv = (I*2.-R)/R.y;
comp_23=
comp_24=  O.rgb *= 0.;
comp_25=  O.a = 1.;
comp_26=
comp_27=  uv*=10.;
comp_28=  float2 id = floor(uv);
comp_29=  uv = frac(uv);
comp_30=  
comp_31=  #ifdef bass_smooth
comp_32=    float fac = (int)vis_version > 2 ? 1 : (0.85 + 0.3*smoothstep(0, 2, (int)vis_version == 1 ? bass_smooth : bass_att))*vis_intensity+vis_shift;
comp_33=  #else
comp_34=    float fac = 0.85 + 0.3*smoothstep(0, 2, bass_att);
comp_35=  #endif
comp_36=
comp_37=  float d = sqrt(10*uv.x*uv.y*(1.-uv.x)*(1.-uv.y));
comp_38=  float3 col = 1 + sin(float3(fac*3,2,1)+dot(id,id)*2.+T*4.);
comp_39=  O.rgb += col*d;
comp_40=  ret = O;
comp_41=}

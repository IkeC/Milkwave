MILKDROP_PRESET_VERSION=201
PSVERSION=4
PSVERSION_WARP=4
PSVERSION_COMP=4
comp_1=// prattitude + IkeC - Acidic / https://www.shadertoy.com/view/tcXyDs
comp_2=// Transpiled to HLSL using Milkwave
comp_3=
comp_4=#define tx sin(time)*0.5+1
comp_5=
comp_6=// 0.5 <= tx <= 1.5
comp_7=
comp_8=float3 palette ( float t ) {
comp_9=  t*=0.5;
comp_10=  float3 a = float3(0.5, 0.5, 0.5);
comp_11=  float3 b = float3(0.5, 0.5, 0.5);
comp_12=  float3 c = float3(1.0, 1.1, 1.0);
comp_13=  float3 d = float3(0.263, 0.416, 0.557);
comp_14=
comp_15=  #ifdef bass_smooth
comp_16=    d -= (int)vis_version > 2 ? 1*vis_intensity+vis_shift : (1.5*smoothstep(0,2,(int)vis_version == 1 ? bass_smooth : bass_att))*vis_intensity+vis_shift;
comp_17=  #else
comp_18=    d -= 0.2*smoothstep(0,2,bass_att);
comp_19=  #endif
comp_20=
comp_21=  return a - b*cos(5.28318*(c*t+d) );
comp_22=}
comp_23=
comp_24=shader_body {
comp_25=  float4 fragColor = 0;
comp_26=  // CONV: Center on screen, then try some aspect correction
comp_27=  uv = (uv*2) - 1;
comp_28=  uv *= aspect.xy;
comp_29=  // CONV: Adjust this to flip the output (±uv.x, ±uv.y)
comp_30=  uv = float2(uv.x, -uv.y);
comp_31=
comp_32=  uv *= 0.5+(sin(time*0.2)*0.2);
comp_33=  float2 fragCoord  = uv;
comp_34=
comp_35=  // float2 uv = (fragCoord * 2.0 - uv.xy) / uv.y;
comp_36=  float2 uv0 = uv;
comp_37=  float3 finalColor = float3(0.0, 0.0, 0.0);
comp_38=
comp_39=  for (float i = 0.0; i < 5.0; i++) {
comp_40=    uv = frac(uv * 1.6) - 0.5;
comp_41=
comp_42=    float d = length(uv);
comp_43=
comp_44=    float3 col = palette(length(uv0) + time);
comp_45=
comp_46=    d = sin(d*8. +time)/8.;
comp_47=    d = abs(d);
comp_48=
comp_49=    d = pow(0.01 / d, 1.8);
comp_50=    finalColor += col * d;
comp_51=  }
comp_52=
comp_53=  fragColor = float4(finalColor, 1.0);
comp_54=  ret = fragColor;
comp_55=}

MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=4.000
fGammaAdj=2.000
fDecay=0.980
fVideoEchoZoom=2.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=10
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=4.000
fWaveScale=0.025
fWaveSmoothing=0.500
fWaveParam=0.000
fModWaveAlphaStart=0.000
fModWaveAlphaEnd=0.000
fWarpAnimSpeed=0.550
fWarpScale=0.039
fZoomExponent=1.00000
fShader=0.000
zoom=1.00030
rot=0.00000
cx=0.500
cy=0.110
dx=0.00000
dy=0.00000
warp=0.27001
sx=1.00199
sy=1.00499
wave_r=0.000
wave_g=0.500
wave_b=1.000
wave_x=0.650
wave_y=0.500
ob_size=0.010
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.010
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=0.000
shapecode_0_g=0.500
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.500
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=0.000
shapecode_0_border_g=0.500
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shape_0_per_frame1=x=rand(1);
shape_0_per_frame2=y=rand(1);
shape_0_per_frame3=rad = treb_att/40;
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=timepeak = if(equal(time%0.1, 0),timepeak=timepeak+1.1/fps, timepeak); //the timepeak variable increases using the time variable in sync
per_frame_2=timepeak2 = if(equal(time%0.1, 0),timepeak2=timepeak2+1.1/fps, timepeak2); //another one, but the same thing; both time sync now uses fps-independent algorithm. Thank you, Nitorami (martin)! Recommended BPM: around 120 BPM.
per_frame_3=
per_frame_4=/////////////TRIGGER OPTION////////////////
per_frame_5=
per_frame_6=//Simple Bass Trigger//
per_frame_7=//timepeak = if(above(bass, 1.74),timepeak=0, timepeak);
per_frame_8=
per_frame_9=//Bass Trigger with Delay//
per_frame_10=bassdelay = timepeak>0.5;
per_frame_11=beatdelaytrigger = if(bassdelay, if(above(bass, 1.74), timepeak=0, timepeak), bleh);
per_frame_12=
per_frame_13=
per_frame_14=//RANDOM POSITION BEAT TRIGGER (FINALLY WORKING)//
per_frame_15=wave_x = wavexrand;
per_frame_16=basswavextrigger = if(bassdelay, if(above(bass, 1.74), wavexrand=rand(0.3), wavexrand), wavexrand);
per_frame_17=wave_y = waveyrand;
per_frame_18=basswaveytrigger = if(bassdelay, if(above(bass, 1.74), waveyrand=rand(0.3), waveyrand), waveyrand);
per_frame_19=wave_mystery = wavemysteryrand;
per_frame_20=basswavemysterytrigger = if(bassdelay, if(above(bass, 1.74), wavemysteryrand=rand(1), wavemysteryrand), wavemysteryrand);
per_frame_21=
per_frame_22=//Another Bass Trigger with Delay + count feature//
per_frame_23=bassdelay2 = timepeak2>1;
per_frame_24=beatdelaytrigger2 = if(bassdelay2, if(above(bass, 1.74), timepeak2=0, timepeak2), bleh);
per_frame_25=
per_frame_26=count = if(bassdelay2, if(above(bass, 1.74), count=count+1, count), count);
per_frame_27=count = if(count%8==0, count=0, count); //it resets to 0 if it passes to 8;
per_frame_28=
per_frame_29=wave_a=100;
per_frame_30=wave_g = 0.2 + mid_att/7.5;
per_frame_31=q1 = count;
per_frame_32=monitor = count+1;
per_frame_33=
per_frame_34=count = if(above(timepeak, 1.87), -1, count);
per_frame_35=
per_frame_36=//Suitable for 100-125 BPM songs!
per_frame_37=//Written by Incubo_
warp_1=`shader_body
warp_2=`{
warp_3=`    ret = tex2D(sampler_main, frac(uv)).xyz;
warp_4=`     // optional 
warp_5=`    ret *= 0.80 + bass_att/24;
warp_6=`}
comp_1=`sampler sampler_rand00_Nubs;
comp_2=`shader_body
comp_3=`{
comp_4=`    //ROVASTAR's Kaleidoscope Code, synced with the bass delay in per-frame code.
comp_5=`
comp_6=`    float rad_lq = rad * length(texsize.xy)*0.5;
comp_7=`    float ang_lq = ang;
comp_8=`    float2 uv_temp1 = (uv - 0.5) * texsize.xy;
comp_9=`    float rad_hq = length(uv_temp1);
comp_10=`    float ang_hq = atan2(-uv_temp1.y, uv_temp1.x);
comp_11=`
comp_12=`    float2 uv2 = (uv - 0.5);
comp_13=`    float rad2 = rad_lq*0.8;
comp_14=`    float ang2 = ang_lq * M_INV_PI_2;
comp_15=`
comp_16=`        // ROTATION OVER TIME
comp_17=`        #if 1
comp_18=`          ang2 += time/30;   //rotate over time
comp_19=`        #endif
comp_20=`
comp_21=`        // FIN TYPE
comp_22=`        //float fins = 1 + floor(rand_preset.z*5.95);
comp_23=`        float fins = (1+q1) + floor(rand_preset.z*2.95);
comp_24=`              
comp_25=`        #if 1     // SHARP FINS
comp_26=`          ang2 = frac(ang2*fins)/fins;
comp_27=`              // ENABLE THIS TO MAKE THE FINS ALTERNATE: (seamless!)
comp_28=`              ang2 = abs(ang2 - 0.5/fins);
comp_29=`        #else     // COSINE FINS - a bit slow
comp_30=`          ang2 = cos(ang2*M_PI_2*fins) * 0.023;
comp_31=`        #endif
comp_32=`
comp_33=`        // RADIAL KALEIDOSCOPING?
comp_34=`        #if 0
comp_35=`          rad2 *= g_fTexSize.z;
comp_36=`            // choose one:
comp_37=`            //rad2 = lerp(rad2, frac(rad2*3)/3.0, 0.6);
comp_38=`            rad2 = cos(rad2*5);
comp_39=`            //rad2 = sqrt(rad2)*0.5;
comp_40=`            //rad2 += abs(frac(rad2*7)-0.5)/7.0 * 1.15;  // stepifier
comp_41=`            //rad2 += cos(rad2*61)*0.02;
comp_42=`          rad2 *= g_fTexSize.x;
comp_43=`        #endif
comp_44=`
comp_45=`    ang2 *= M_PI_2;
comp_46=`    uv2 = 0.5 + rad2*float2(cos(ang2),sin(ang2))*texsize.zw;
comp_47=`   
comp_48=`    ret = tex2D(sampler_main, uv2).xyz;
comp_49=`    ret += GetBlur1(uv2)*(bass_att*6); //glowy bass
comp_50=`    ret += tex2d(sampler_rand00_Nubs, uv).xyz-(0.15+(bass_att/35));
comp_51=`    ret *= 1;
comp_52=`}

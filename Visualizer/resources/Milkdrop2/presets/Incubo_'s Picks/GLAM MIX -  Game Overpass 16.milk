MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=5.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.500
nVideoEchoOrientation=1
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=0.99950
fShader=0.000
zoom=0.99980
rot=0.02000
cx=0.500
cy=0.500
dx=0.00000
dy=-0.00800
warp=0.01000
sx=1.00980
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.800
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=1.000
nMotionVectorsX=64.000
nMotionVectorsY=20.160
mv_dx=0.000
mv_dy=0.000
mv_l=0.400
mv_r=1.000
mv_g=0.400
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_init1=ma=.5;
wave_0_init2=my=.5;
wave_0_init3=md=0; //direction 0 1 2 3
wave_0_per_point1=oldmd=md;
wave_0_per_point2=md=(md+int(rand(4)))%4;
wave_0_per_point3=md=if(equal(md,oldmd),(md+1)%4,md);
wave_0_per_point4=
wave_0_per_point5=mx=mx+(equal(md,0)*.002*bass);
wave_0_per_point6=mx=mx-(equal(md,1)*.002*bass);
wave_0_per_point7=my=my+(equal(md,2)*.002*treb);
wave_0_per_point8=my=my-(equal(md,3)*.002*treb);
wave_0_per_point9=
wave_0_per_point10=mx=if(above(mx,.9),.5,mx);
wave_0_per_point11=mx=if(below(mx,.1),.5,mx);
wave_0_per_point12=my=if(above(my,.9),.5,my);
wave_0_per_point13=my=if(below(my,.1),.5,my);
wave_0_per_point14=
wave_0_per_point15=x=mx;
wave_0_per_point16=y=my;
wave_0_per_point17=a=bass*.1;
wave_0_per_point18=
wave_0_per_point19=r=bass*.5;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_init1=mx=.5;
wave_1_init2=my=.5;
wave_1_init3=md=1;
wave_1_per_point1=oldmd=md;
wave_1_per_point2=md=(md+int(rand(4)))%4;
wave_1_per_point3=md=if(equal(md,oldmd),(md+1)%4,md);
wave_1_per_point4=
wave_1_per_point5=mx=mx+(equal(md,0)*.002*bass);
wave_1_per_point6=mx=mx-(equal(md,1)*.002*bass);
wave_1_per_point7=my=my+(equal(md,2)*.002*treb);
wave_1_per_point8=my=my-(equal(md,3)*.002*treb);
wave_1_per_point9=
wave_1_per_point10=mx=if(above(mx,.9),.5,mx);
wave_1_per_point11=mx=if(below(mx,.1),.5,mx);
wave_1_per_point12=my=if(above(my,.9),.5,my);
wave_1_per_point13=my=if(below(my,.1),.5,my);
wave_1_per_point14=
wave_1_per_point15=x=mx;
wave_1_per_point16=y=my;
wave_1_per_point17=a=bass*.1;
wave_1_per_point18=
wave_1_per_point19=g=treb*.5;
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_init1=mx=.5;
wave_2_init2=my=.5;
wave_2_init3=md=2;
wave_2_per_point1=oldmd=md;
wave_2_per_point2=md=(md+int(rand(4)))%4;
wave_2_per_point3=md=if(equal(md,oldmd),(md+1)%4,md);
wave_2_per_point4=
wave_2_per_point5=mx=mx+(equal(md,0)*.002*bass);
wave_2_per_point6=mx=mx-(equal(md,1)*.002*bass);
wave_2_per_point7=my=my+(equal(md,2)*.002*treb);
wave_2_per_point8=my=my-(equal(md,3)*.002*treb);
wave_2_per_point9=
wave_2_per_point10=mx=if(above(mx,.9),.5,mx);
wave_2_per_point11=mx=if(below(mx,.1),.5,mx);
wave_2_per_point12=my=if(above(my,.9),.5,my);
wave_2_per_point13=my=if(below(my,.1),.5,my);
wave_2_per_point14=
wave_2_per_point15=x=mx;
wave_2_per_point16=y=my;
wave_2_per_point17=a=bass*.1;
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_init1=mx=.5;
wave_3_init2=my=.4;
wave_3_init3=md=3;
wave_3_per_point1=oldmd=md;
wave_3_per_point2=md=(md+int(rand(4)))%4;
wave_3_per_point3=md=if(equal(md,oldmd),(md+1)%4,md);
wave_3_per_point4=
wave_3_per_point5=mx=mx+(equal(md,0)*.002*bass);
wave_3_per_point6=mx=mx-(equal(md,1)*.002*bass);
wave_3_per_point7=my=my+(equal(md,2)*.002*treb);
wave_3_per_point8=my=my-(equal(md,3)*.002*treb);
wave_3_per_point9=
wave_3_per_point10=mx=if(above(mx,.9),.5,mx);
wave_3_per_point11=mx=if(below(mx,.1),.5,mx);
wave_3_per_point12=my=if(above(my,.9),.5,my);
wave_3_per_point13=my=if(below(my,.1),.5,my);
wave_3_per_point14=
wave_3_per_point15=x=mx;
wave_3_per_point16=y=my;
wave_3_per_point17=a=bass*.1;
per_frame_init_1=q1 = 1/asin(1);
per_frame_1=wave_r = wave_r + 0.3*sin(vol*50);
per_frame_2=wave_b = wave_b + 0.3*sin(vol*20);
per_frame_3=wave_g = wave_g + 0.5*sin(vol*35);
per_frame_4=
per_frame_5=
per_frame_6=q8=wave_r;
per_frame_7=q7=wave_b;
per_frame_8=q6=wave_g;
per_frame_9=
per_frame_10=wr = 0.5+0.4*(0.6*sin(time*1.1) + 0.4*sin(0.8*time));
per_frame_11=wb = 0.5+0.4*(0.6*sin(time*1.6) + 0.4*sin(0.5*time));
per_frame_12=wg = 0.5+0.4*(0.6*sin(time*1.34) + 0.4*sin(0.4*time));
per_frame_13=
per_frame_14=monitor=wg;
per_frame_15=q10=wr;
per_frame_16=q11=wb;
per_frame_17=q12=wg;
per_frame_18=q18 = 0.007*sin(time*0.1);
per_frame_19=q17 = -0.007*sin(time*0.254);
per_frame_20=q2=bass_thresh;
per_frame_21=
per_frame_22=vol=(bass+mid+treb)*0.25;
per_frame_23=vol=vol*vol;
per_frame_24=q3=vol;
per_frame_25=
per_frame_26=warp=0;
per_frame_27=t = t - 1/fps;
per_frame_28=t = if(above(t,2),t-2,t);
per_frame_29=q2 = t;
warp_1=`shader_body
warp_2=`{
warp_3=`uv = lerp( uv_orig,uv,0.2);
warp_4=`
warp_5=`float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw*1.5 + rand_frame.xy;
warp_6=`uv  -= (float2(0,1)*(lum(GetPixel(uv)-0.35))*texsize.zw*32)*(lum(GetPixel(uv))-0.4);
warp_7=`ret  = GetPixel(saturate(uv)) - 0.0011 + (tex2D(sampler_noise_lq, dither_uv)-0.5)*0.0038;    
warp_8=`}
comp_1=`shader_body
comp_2=`{   if(q2 == 1){
comp_3=`    float2 uv1 = uv-.5;
comp_4=`    float3 ret1 = tex2D(sampler_main, uv) + GetBlur1(uv)*0;
comp_5=`    float2 uv_noise = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;
comp_6=`    half4 noiseVal = tex2D(sampler_noise_lq, uv_noise);
comp_7=`    
comp_8=`    float2 hor = float2 (.001,0);
comp_9=`    float2 ver = float2 (0,.001);
comp_10=`    float dx = GetPixel (uv-hor) - GetPixel (uv+hor);
comp_11=`    float dy = GetPixel (uv-ver) - GetPixel (uv+ver);    
comp_12=`    float2 dz = float2 (dx,dy);
comp_13=`
comp_14=`    uv1 = uv1*0+.5*cos(uv1*1.5+1.6) - 3*dz;
comp_15=`    float dots = saturate(.1/length(uv1));
comp_16=`
comp_17=`    ret1 = 0.3*lum(ret1)+dots*ret1*(4*(bass+mid))*treb_att;
comp_18=`    ret1 = lerp(noiseVal,ret1,abs(ret1-1));
comp_19=`    ret = .8*ret1;
comp_20=`    }else{
comp_21=`
comp_22=`    float2 uv1 = uv-.5;
comp_23=`    float3 ret1 = tex2D(sampler_main, uv) + GetBlur1(uv)*0;
comp_24=`    float2 uv_noise = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;
comp_25=`    half4 noiseVal = tex2D(sampler_noise_lq, uv_noise);
comp_26=`    
comp_27=`    float2 hor = float2 (.001,0);
comp_28=`    float2 ver = float2 (0,.001);
comp_29=`    float dx = GetPixel (uv-hor) - GetPixel (uv+hor);
comp_30=`    float dy = GetPixel (uv-ver) - GetPixel (uv+ver);    
comp_31=`    float2 dz = float2 (dx,dy);
comp_32=`
comp_33=`    uv1 = uv1*0+.5*cos(uv1*1.5+1.6) - 3*dz;
comp_34=`    float dots = saturate(.001*q3/length(uv1));
comp_35=`
comp_36=`    ret1 = 0.3*lum(ret1)+dots*ret1*(1*(bass+mid))*treb_att;
comp_37=`    ret1 = lerp(noiseVal,ret1,abs(ret1-1));
comp_38=`    ret = .8*ret1;
comp_39=`    
comp_40=`    }
comp_41=`}
comp_42=`
comp_43=`//Props to martin for code I used to create the glossy effect.  Learning this pixel shader stuff!

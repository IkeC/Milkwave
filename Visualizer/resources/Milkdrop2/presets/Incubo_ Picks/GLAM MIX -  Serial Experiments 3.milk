MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=2
[preset00]
fRating=3.000
fGammaAdj=2.000
fDecay=0.960
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.500
nVideoEchoOrientation=1
nWaveMode=13
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.000
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.48886
fShader=1.000
zoom=1.01960
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.24146
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.000
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
shapecode_0_enabled=1
shapecode_0_sides=3
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.530
shapecode_0_rad=0.73160
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.63904
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=0.500
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=ang=time*.1;
shape_0_per_frame2=
shape_0_per_frame3=sides=int(abs(sin(time*.5)*7));
shapecode_1_enabled=1
shapecode_1_sides=3
shapecode_1_additive=1
shapecode_1_thickOutline=1
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.02743
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=0.050
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=ang=time*.1;
shape_1_per_frame2=
shape_1_per_frame3=r=.7+(sin(time)*.3);
shape_1_per_frame4=g=.7+(cos(time)*.3);
shape_1_per_frame5=b=.7+(sin(time+.12)*.3);
shape_1_per_frame6=
shape_1_per_frame7=rad=rad+(treb_att*bass_att*.5);
shape_1_per_frame8=x=.5+(sin(time)*.5);
shapecode_2_enabled=1
shapecode_2_sides=5
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.02508
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=0.050
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=ang=time*.25;
shape_2_per_frame2=
shape_2_per_frame3=g=.7+(sin(time)*.3);
shape_2_per_frame4=b=.7+(cos(time)*.3);
shape_2_per_frame5=r=.7+(sin(time+.12)*.3);
shape_2_per_frame6=
shape_2_per_frame7=r2=.7+(sin(time)*.3);
shape_2_per_frame8=g2=.7+(cos(time)*.3);
shape_2_per_frame9=b2=.7+(sin(time+.12)*.3);
shape_2_per_frame10=
shape_2_per_frame11=rad=rad+(treb_att*bass_att*.5);
shape_2_per_frame12=y=.5+(sin(time)*.25);
per_frame_1=//begin beat code
per_frame_2=volume = 0.3*(bass+mid);
per_frame_3=beatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);
per_frame_4=lastbeat = lastbeat + equal(lastbeat,0)*time;
per_frame_5=meanbass_att = 0.05*(meanbass_att*19 + bass_att);
per_frame_6=peakbass_att = max(bass_att,peakbass_att);
per_frame_7=beat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));
per_frame_8=beatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);
per_frame_9=//Adjust responsiveness: To increase responsiveness, set the "0.96 and "0.996" on the next line to slightly lower values. Higher values decrease responsiveness.
per_frame_10=peakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.96 + (1-above(time - lastbeat, 2*beatrate))*0.996);
per_frame_11=lastbeat = beat*time + (1-beat)*lastbeat;
per_frame_12=peakbass_att = max(peakbass_att,1.1*meanbass_att);
per_frame_13=//end beat code
per_frame_14=
per_frame_15=tim = if(beat,time,tim);
per_frame_16=q5 = below(time - tim,.1);
per_frame_17=
per_frame_18=warp = 0;
per_frame_19=
per_frame_20=tic = min(time-tin,.1);
per_frame_21=tin = time;
per_frame_22=ra = 1/tic*.25;
per_frame_23=
per_frame_24=treb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);
per_frame_25=mid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);
per_frame_26=bass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);
per_frame_27=vav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);
per_frame_28=
per_frame_29=tt = tt + tic*treb;
per_frame_30=mt = mt + tic*mid;
per_frame_31=bt = bt + tic*bass;
per_frame_32=vt = vt + tic*vav;
per_frame_33=
per_frame_34=q1 = treb_avg;
per_frame_35=q2 = mid_avg;
per_frame_36=q3 = bass_avg;
per_frame_37=
per_frame_38=monitor = q5;
per_frame_39=
per_frame_40=mx = if(beat,rand(1001)*.001*.5 + rand(1001)*.001*.5,mx);
per_frame_41=my = if(beat,rand(1001)*.001*.5 + rand(1001)*.001*.5,my);
per_frame_42=cx = mx;
per_frame_43=cy = my;
per_frame_44=
per_frame_45=mox = mx - .5;
per_frame_46=moy = my - .5;
per_frame_47=an = atan(moy/mox) + if(above(mox,0),above(moy,0)*6.2832,3.1416);
per_frame_48=dis = pow(mox*mox + moy*moy,.5);
per_frame_49=dis = max(.17,dis);
per_frame_50=
per_frame_51=q7 = .5 + dis*cos(an);
per_frame_52=q8 = .5 + dis*sin(an);
per_pixel_1=mx = x - q7;
per_pixel_2=my = y - q8;
per_pixel_3=
per_pixel_4=an = ang;
per_pixel_5=//zoom = 1 + pow(sin(an*5 - time),1)*.02*bass*bass;
per_pixel_6=
per_pixel_7=ra = pow(mx*mx + my*my,.5);
per_pixel_8=rot = .02*sin(ra*6.2832*2 - time*4)*(mid + treb)*(mid + treb)*.5;
warp_1=`float sigmoid(float t, float c){
warp_2=`   return 1 / ( 1 + exp(t*c));
warp_3=`}
warp_4=`
warp_5=`float2 vortex(float2 domain, float2 position, float2 motionVector, float4 domainAspect, float radius, float sharpness, float spin, float zoom){
warp_6=`   domain -= position;
warp_7=`   domain *= domainAspect.xy;
warp_8=`   float sigmoidFilter = sigmoid( length(domain) - radius , sharpness );
warp_9=`   domain +=  + motionVector*sigmoidFilter;
warp_10=`   spin *= sigmoidFilter;
warp_11=`   float s = sin(spin);
warp_12=`   float c = cos(spin);
warp_13=`   float2 uv_rot;
warp_14=`   uv_rot.x = c*domain.x - s*domain.y;
warp_15=`   uv_rot.y = s*domain.x + c*domain.y;
warp_16=`   uv_rot *= domainAspect.zw;
warp_17=`   uv_rot += position;
warp_18=`   return saturate(position + (uv_rot-position)*lerp(1,zoom,sigmoidFilter));
warp_19=`}
warp_20=`
warp_21=`shader_body
warp_22=`{
warp_23=`
warp_24=`
warp_25=`float2 domain = uv;
warp_26=`float2 position = float2(q4,1-q8) + 0.49*0;
warp_27=`float2 motionVector = float2(-q15,q16)*q13*aspect.wz;
warp_28=`float4 domainAspect = aspect;
warp_29=`float radius = 0.07;
warp_30=`float sharpness = 50;
warp_31=`float spin = 1;
warp_32=`float zoom = 4;
warp_33=`
warp_34=`float2 uv_vortex = vortex( domain, position, motionVector, domainAspect, radius, sharpness, spin, zoom);
warp_35=`
warp_36=`uv = uv_vortex + texsize.zw*float2(0,0.15);
warp_37=`uv = lerp( uv_orig,uv,0.2);
warp_38=`
warp_39=`    float2 scale = float2(1280,1024)*texsize.zw; // 1280x1024 : the resolution i modelled this shader with
warp_40=`    float1 d = 0.0039;
warp_41=`    float1 dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;
warp_42=`    float1 dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;
warp_43=`    float1 dxb = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;
warp_44=`    float1 dyb = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;
warp_45=`    float2 my_uv = uv - float2(dx,dy)*0.0068 + float2(dxb,dyb)*0.0031;
warp_46=`
warp_47=`
warp_48=`
warp_49=`    float2 v = 0.008;
warp_50=`    ret.x = tex2D( sampler_fw_main, my_uv).x;
warp_51=`
warp_52=`    
warp_53=`    ret.x += (ret.x - GetBlur3(uv).x)*0.11;
warp_54=`    ret.x += 0.0041;
warp_55=`
warp_56=`
warp_57=`//--------------------------------
warp_58=`
warp_59=`    my_uv = uv_orig + float2(dy,-dx)*0.058*(1.01-GetBlur3(uv_orig).y);
warp_60=`
warp_61=`
warp_62=`
warp_63=`    v = 0.009;
warp_64=`    ret.z = tex2D( sampler_fw_main, my_uv).z;
warp_65=`    
warp_66=`    ret.z += (ret.z - GetBlur1(uv_orig).z)*length(my_uv-uv_orig)*180/length(scale);
warp_67=`    ret.z *= 0.646;
warp_68=`    ret.z += 0.0076;
warp_69=`
warp_70=`
warp_71=`
warp_72=`//--------------------------------
warp_73=`
warp_74=`    d = 0.009;
warp_75=`    my_uv = float2(-dy,dx)*0.0355;
warp_76=`
warp_77=`    dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).y*scale.x;
warp_78=`    dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).y*scale.y;
warp_79=`    my_uv += uv - float2(dx,dy)*0.025;
warp_80=`
warp_81=`
warp_82=`
warp_83=`    v = 0.012;
warp_84=`    ret.y =tex2D( sampler_fw_main, my_uv).y;
warp_85=`
warp_86=`    
warp_87=`    ret.y += (ret.y - GetBlur3(my_uv).y)*.11 + 0.034;
warp_88=`}
comp_1=`shader_body
comp_2=`{
comp_3=`ret = tex2D(sampler_main, uv).x,
comp_4=`
comp_5=`ret = lerp (
comp_6=`GetBlur1(uv).x + GetBlur3(uv).x,
comp_7=`ret,
comp_8=`pow(ret,1));
comp_9=`  
comp_10=`//  ret = tex2D(sampler_main, uv).x - GetBlur1(uv).x;
comp_11=`    ret = pow(ret,float3(5,1,.5));
comp_12=`    ret *= 1.0; //gamma
comp_13=` 
comp_14=`}

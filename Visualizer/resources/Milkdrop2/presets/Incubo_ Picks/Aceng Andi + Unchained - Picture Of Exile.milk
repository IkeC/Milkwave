[preset00]
fRating=3.000000
fGammaAdj=1
fDecay=1
fVideoEchoZoom=1
fVideoEchoAlpha=0.5
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=1
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.005
fWaveScale=0.972
fWaveSmoothing=0.500
fWaveParam=0.000
fModWaveAlphaStart=0.500
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=5.9957
fWarpScale=1.331
fZoomExponent=1
fShader=0
zoom=0.998108
rot=-0.76
cx=0.5
cy=0.5
dx=0
dy=0
warp=0.350495
sx=1
sy=1
wave_r=0.500000
wave_g=0.500000
wave_b=0.500000
wave_x=0.500000
wave_y=0.500000
ob_size=0.010000
ob_r=0.000000
ob_g=0.000000
ob_b=0.000000
ob_a=1.000000
ib_size=0.010000
ib_r=0.000000
ib_g=0.000000
ib_b=0.000000
ib_a=1.000000
nMotionVectorsX=0.000000
nMotionVectorsY=0.000000
mv_dx=0.000000
mv_dy=0.000000
mv_l=1.000000
mv_r=1.000000
mv_g=1.000000
mv_b=1.000000
mv_a=0.000000
per_frame_1=wave_r = 0.5 + 0.5*sin(6*time);
per_frame_2=wave_g = 0.5 + 0.5*sin(4.1*time);
per_frame_3=wave_b = -1 + (1-wave_r + 1-wave_g);
per_frame_4=warp = 0;
per_frame_5=ob_r = 1-abs(wave_r);
per_frame_6=ob_g = 1-abs(wave_g);
per_frame_7=ob_b = 1-abs(wave_b);
per_frame_8=ib_r = abs(wave_r);
per_frame_9=ib_b = abs(wave_b);
per_frame_10=ib_g = abs(wave_g);
per_frame_11=
per_frame_12=// Unchained - Picture Of Exile Edition //
per_frame_13=old_bass_flop=bass_flop;
per_frame_14=old_treb_flop=treb_flop;
per_frame_15=old_mid_flop=mid_flop;
per_frame_16=chaos=.1+.1*sin(pulse);
per_frame_17=bass_thresh =if(above(bass_att,bass_thresh),3,bass_thresh-chaos);
per_frame_18=bass_flop=abs(bass_flop-equal(bass_thresh,3));
per_frame_19=treb_thresh=if(above(treb_att,treb_thresh),3,treb_thresh-chaos);
per_frame_20=treb_flop=abs(treb_flop-equal(treb_thresh,3));
per_frame_21=mid_thresh=if(above(mid_att,mid_thresh),3,mid_thresh-chaos);
per_frame_22=mid_flop=abs(mid_flop-equal(mid_thresh,3));
per_frame_23=bass_changed=bnot(equal(old_bass_flop,bass_flop));
per_frame_24=mid_changed=bnot(equal(old_mid_flop,mid_flop));
per_frame_25=treb_changed=bnot(equal(old_treb_flop,treb_flop));
per_frame_26=bass_residual = bass_changed*sin(pulse*3) + bnot(bass_changed)*bass_residual;
per_frame_27=treb_residual = treb_changed*sin(pulse*3) + bnot(treb_changed)*treb_residual;
per_frame_28=mid_residual = mid_changed*sin(pulse*3) + bnot(mid_changed)*mid_residual;
per_frame_29=pulse=if(above(abs(pulse),3.14),-3.14,pulse+(bass_thresh+mid_thresh+treb_thresh)*.032);
per_frame_30=entropy=if(equal(pulse,-3.14),bass_flop+mid_flop+treb_flop+int(rand(5)),entropy);
per_frame_31=q1=mid_residual;
per_frame_32=q2=bass_residual;
per_frame_33=q3=treb_residual;
per_frame_34=q4=sin(pulse);
per_frame_35=q5=cos(pulse*(.5+.1*entropy));
per_frame_36=q6=sin(pulse*(.5+pow(.25,entropy)));
per_frame_37=q7=above(q1,0)+above(q2,0)+above(q3,0)+above(q3,0)*treb_flop+above(q2,0)*bass_flop+above(q1,0)*mid_flop;
per_frame_38=q8=entropy;
per_pixel_1=grid=pow(x*3,3-q1)%q8 + pow(y*3,3-q3)%q8;
per_pixel_2=bend = sin(x*(9.42-6.28*q2)*bnot(q8%3)
per_pixel_3=+(rad*9.42-6.28*sin(time*(1.3+.3*q1)))*bnot(q8%4)+y*(9.42*q4-6.28*q3)*bnot(q8%5));
per_pixel_4=zoom = zoom+bend*below(y,.5)*below(x,.5)*.1;
per_pixel_5=sx=sx-if(above(q7,3),bnot(grid)*q3*.2,.1*q2*bnot(q8%5));
per_pixel_6=sy=sy-if(below(q7,3),bnot(grid)*q2*.2,.1*q3*bnot(q8%2));
per_pixel_7=rot=if(equal(grid,3),q3,bnot(grid%q7)*above(x,.5)*above(y,.5)*sin(zoom));

MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=3.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=3
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.010
fWaveSmoothing=0.000
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=0.000
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=1.000
wave_y=1.000
ob_size=0.000
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=0.000
ib_size=0.000
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=3.000
nMotionVectorsY=2.000
mv_dx=0.020
mv_dy=-0.020
mv_l=0.150
mv_r=0.490
mv_g=0.480
mv_b=0.300
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=0.700
b2x=0.400
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=16
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=meanbass = 0.01*(meanbass*99+bass_att);
wave_0_per_point2=meantreb = 0.01*(meantreb*99+treb_att);
wave_0_per_point3=meanmid = 0.01*(meanmid*99+mid_att);
wave_0_per_point4=bassdiff = (bass_att - meanbass)*15;
wave_0_per_point5=trebdiff = (treb_att - meantreb)*15;
wave_0_per_point6=middiff = (mid_att - meanmid)*15;
wave_0_per_point7=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
wave_0_per_point8=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
wave_0_per_point9=mi = min(above(middiff,0)*middiff*.005,.11);
wave_0_per_point10=baprg=baprg+ba*.3;
wave_0_per_point11=trprg=trprg+tr*.2;
wave_0_per_point12=miprg=miprg+tr*.2;
wave_0_per_point13=
wave_0_per_point14=
wave_0_per_point15=dim =.5+.4*sin(miprg); //Dancer dimensions
wave_0_per_point16=xpos=0+.3*sin(baprg);//Dancer x position variation
wave_0_per_point17=ypos=0+.2*sin(trprg);//Dancer y position variation
wave_0_per_point18=
wave_0_per_point19=
wave_0_per_point20=
wave_0_per_point21=//Position Stabilization
wave_0_per_point22=xpos=xpos+(1-dim)/2;
wave_0_per_point23=ypos=ypos+(1-dim)/2;
wave_0_per_point24=
wave_0_per_point25=meanbass = 0.01*(meanbass*99+bass);
wave_0_per_point26=meantreb = 0.01*(meantreb*99+treb);
wave_0_per_point27=meanmid = 0.01*(meanmid*99+mid);
wave_0_per_point28=bassdiff = (bass - meanbass)*15;
wave_0_per_point29=trebdiff = (treb - meantreb)*15;
wave_0_per_point30=middiff = (mid - meanmid)*15;
wave_0_per_point31=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
wave_0_per_point32=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
wave_0_per_point33=mi = min(above(middiff,0)*middiff*.005,.11);
wave_0_per_point34=
wave_0_per_point35=mi2_prg = mi2_prg+mi;
wave_0_per_point36=gam = abs(gam-above(mi2_prg,5));
wave_0_per_point37=mi2_prg= if(above(mi2_prg,5),0,mi2_prg);
wave_0_per_point38=
wave_0_per_point39=s = sample *15;
wave_0_per_point40=//Gambe
wave_0_per_point41=x= if(equal(int(s),1),.4,.4);
wave_0_per_point42=y= if(equal(int(s),1),.2+((ba+tr)*.5)*gam,.2+((ba+tr)*.5)*gam);
wave_0_per_point43=
wave_0_per_point44=x= if(equal(int(s),2),.5+sin(ba*100)*.03,x);
wave_0_per_point45=y= if(equal(int(s),2),.4,y);
wave_0_per_point46=
wave_0_per_point47=x= if(equal(int(s),3),.6,x);
wave_0_per_point48=y= if(equal(int(s),3),.2+((ba+tr)*.5)*(1-gam),y);
wave_0_per_point49=
wave_0_per_point50=x= if(equal(int(s),4),.5+sin(ba*100)*.03,x);
wave_0_per_point51=y= if(equal(int(s),4),.4,y);
wave_0_per_point52=
wave_0_per_point53=//Corpo
wave_0_per_point54=x= if(equal(int(s),5),.5,x);
wave_0_per_point55=y= if(equal(int(s),5),.6,y);
wave_0_per_point56=
wave_0_per_point57=//Braccia
wave_0_per_point58=x= if(equal(int(s),6),.4-mi*.23,x);
wave_0_per_point59=y= if(equal(int(s),6),.5+mi,y);
wave_0_per_point60=
wave_0_per_point61=x= if(equal(int(s),7),.5,x);
wave_0_per_point62=y= if(equal(int(s),7),.6,y);
wave_0_per_point63=
wave_0_per_point64=x= if(equal(int(s),8),.6+tr*.23,x);
wave_0_per_point65=y= if(equal(int(s),8),.5+tr,y);
wave_0_per_point66=
wave_0_per_point67=x= if(equal(int(s),9),.5,x);
wave_0_per_point68=y= if(equal(int(s),9),.6,y);
wave_0_per_point69=
wave_0_per_point70=//Testa
wave_0_per_point71=x= if(equal(int(s),10),.5,x);
wave_0_per_point72=y= if(equal(int(s),10),.62,y);
wave_0_per_point73=
wave_0_per_point74=x= if(equal(int(s),11),.47-ba*.23,x);
wave_0_per_point75=y= if(equal(int(s),11),.62,y);
wave_0_per_point76=x= if(equal(int(s),12),.47-ba*.23,x);
wave_0_per_point77=y= if(equal(int(s),12),.67+ba*.23,y);
wave_0_per_point78=
wave_0_per_point79=x= if(equal(int(s),13),.53+ba*.23,x);
wave_0_per_point80=y= if(equal(int(s),13),.67+ba*.23,y);
wave_0_per_point81=
wave_0_per_point82=x= if(equal(int(s),14),.53+ba*.23,x);
wave_0_per_point83=y= if(equal(int(s),14),.62,y);
wave_0_per_point84=
wave_0_per_point85=x= if(equal(int(s),15),.50,x);
wave_0_per_point86=y= if(equal(int(s),15),.62,y);
wave_0_per_point87=
wave_0_per_point88=x=x*dim+xpos;
wave_0_per_point89=y=y*dim+ypos;
wave_0_per_point90=
wave_0_per_point91=mi_prg= if(above(mi_prg,5),0,mi_prg+mi*.1);
wave_0_per_point92=ba_prg= if(above(ba_prg,5),0,ba_prg+ba*.1);
wave_0_per_point93=tr_prg= if(above(tr_prg,5),0,tr_prg+tr*.1);
wave_0_per_point94=
wave_0_per_point95=hm=sample+mi2_prg;
wave_0_per_point96=ht=sample+tr_prg;
wave_0_per_point97=hb=sample+ba_prg;
wave_0_per_point98=
wave_0_per_point99=r=hm;
wave_0_per_point100=g=ht;
wave_0_per_point101=b=hb;
wave_0_per_point102=a=.8;
wavecode_1_enabled=1
wavecode_1_samples=16
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=meanbass = 0.01*(meanbass*99+bass_att);
wave_1_per_point2=meantreb = 0.01*(meantreb*99+treb_att);
wave_1_per_point3=meanmid = 0.01*(meanmid*99+mid_att);
wave_1_per_point4=bassdiff = (bass_att - meanbass)*15;
wave_1_per_point5=trebdiff = (treb_att - meantreb)*15;
wave_1_per_point6=middiff = (mid_att - meanmid)*15;
wave_1_per_point7=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
wave_1_per_point8=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
wave_1_per_point9=mi = min(above(middiff,0)*middiff*.005,.11);
wave_1_per_point10=baprg=baprg+ba*.4;
wave_1_per_point11=trprg=trprg+tr*.1;
wave_1_per_point12=miprg=miprg+tr*.3;
wave_1_per_point13=
wave_1_per_point14=
wave_1_per_point15=dim =.5+.3*sin(baprg); //Dancer dimensions
wave_1_per_point16=xpos=0+.3*sin(trprg);//Dancer x position variation
wave_1_per_point17=ypos=0+.2*sin(miprg);//Dancer y position variation
wave_1_per_point18=
wave_1_per_point19=
wave_1_per_point20=
wave_1_per_point21=//Position Stabilization
wave_1_per_point22=xpos=xpos+(1-dim)/2;
wave_1_per_point23=ypos=ypos+(1-dim)/2;
wave_1_per_point24=
wave_1_per_point25=meanbass = 0.01*(meanbass*99+bass);
wave_1_per_point26=meantreb = 0.01*(meantreb*99+treb);
wave_1_per_point27=meanmid = 0.01*(meanmid*99+mid);
wave_1_per_point28=bassdiff = (bass - meanbass)*15;
wave_1_per_point29=trebdiff = (treb - meantreb)*15;
wave_1_per_point30=middiff = (mid - meanmid)*15;
wave_1_per_point31=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
wave_1_per_point32=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
wave_1_per_point33=mi = min(above(middiff,0)*middiff*.005,.11);
wave_1_per_point34=
wave_1_per_point35=mi2_prg = mi2_prg+mi;
wave_1_per_point36=gam = abs(gam-above(mi2_prg,5));
wave_1_per_point37=mi2_prg= if(above(mi2_prg,5),0,mi2_prg);
wave_1_per_point38=
wave_1_per_point39=s = sample *15;
wave_1_per_point40=//Gambe
wave_1_per_point41=x= if(equal(int(s),1),.4,.4);
wave_1_per_point42=y= if(equal(int(s),1),.2+((ba+tr)*.5)*gam,.2+((ba+tr)*.5)*gam);
wave_1_per_point43=
wave_1_per_point44=x= if(equal(int(s),2),.5+sin(ba*100)*.03,x);
wave_1_per_point45=y= if(equal(int(s),2),.4,y);
wave_1_per_point46=
wave_1_per_point47=x= if(equal(int(s),3),.6,x);
wave_1_per_point48=y= if(equal(int(s),3),.2+((ba+tr)*.5)*(1-gam),y);
wave_1_per_point49=
wave_1_per_point50=x= if(equal(int(s),4),.5+sin(ba*100)*.03,x);
wave_1_per_point51=y= if(equal(int(s),4),.4,y);
wave_1_per_point52=
wave_1_per_point53=//Corpo
wave_1_per_point54=x= if(equal(int(s),5),.5,x);
wave_1_per_point55=y= if(equal(int(s),5),.6,y);
wave_1_per_point56=
wave_1_per_point57=//Braccia
wave_1_per_point58=x= if(equal(int(s),6),.4-mi*.23,x);
wave_1_per_point59=y= if(equal(int(s),6),.5+mi,y);
wave_1_per_point60=
wave_1_per_point61=x= if(equal(int(s),7),.5,x);
wave_1_per_point62=y= if(equal(int(s),7),.6,y);
wave_1_per_point63=
wave_1_per_point64=x= if(equal(int(s),8),.6+tr*.23,x);
wave_1_per_point65=y= if(equal(int(s),8),.5+tr,y);
wave_1_per_point66=
wave_1_per_point67=x= if(equal(int(s),9),.5,x);
wave_1_per_point68=y= if(equal(int(s),9),.6,y);
wave_1_per_point69=
wave_1_per_point70=//Testa
wave_1_per_point71=x= if(equal(int(s),10),.5,x);
wave_1_per_point72=y= if(equal(int(s),10),.62,y);
wave_1_per_point73=
wave_1_per_point74=x= if(equal(int(s),11),.47-ba*.23,x);
wave_1_per_point75=y= if(equal(int(s),11),.62,y);
wave_1_per_point76=x= if(equal(int(s),12),.47-ba*.23,x);
wave_1_per_point77=y= if(equal(int(s),12),.67+ba*.23,y);
wave_1_per_point78=
wave_1_per_point79=x= if(equal(int(s),13),.53+ba*.23,x);
wave_1_per_point80=y= if(equal(int(s),13),.67+ba*.23,y);
wave_1_per_point81=
wave_1_per_point82=x= if(equal(int(s),14),.53+ba*.23,x);
wave_1_per_point83=y= if(equal(int(s),14),.62,y);
wave_1_per_point84=
wave_1_per_point85=x= if(equal(int(s),15),.50,x);
wave_1_per_point86=y= if(equal(int(s),15),.62,y);
wave_1_per_point87=
wave_1_per_point88=x=x*dim+xpos;
wave_1_per_point89=y=y*dim+ypos;
wave_1_per_point90=
wave_1_per_point91=mi_prg= if(above(mi_prg,5),0,mi_prg+mi*.1);
wave_1_per_point92=ba_prg= if(above(ba_prg,5),0,ba_prg+ba*.1);
wave_1_per_point93=tr_prg= if(above(tr_prg,5),0,tr_prg+tr*.1);
wave_1_per_point94=
wave_1_per_point95=hm=sample+mi2_prg;
wave_1_per_point96=ht=sample+tr_prg;
wave_1_per_point97=hb=sample+ba_prg;
wave_1_per_point98=
wave_1_per_point99=r=hm;
wave_1_per_point100=g=ht;
wave_1_per_point101=b=hb;
wave_1_per_point102=a=.8;
wavecode_2_enabled=1
wavecode_2_samples=16
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=meanbass = 0.01*(meanbass*99+bass);
wave_2_per_point2=meantreb = 0.01*(meantreb*99+treb);
wave_2_per_point3=meanmid = 0.01*(meanmid*99+mid);
wave_2_per_point4=bassdiff = (bass - meanbass)*15;
wave_2_per_point5=trebdiff = (treb - meantreb)*15;
wave_2_per_point6=middiff = (mid - meanmid)*15;
wave_2_per_point7=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
wave_2_per_point8=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
wave_2_per_point9=mi = min(above(middiff,0)*middiff*.005,.11);
wave_2_per_point10=baprg=baprg+ba*.1;
wave_2_per_point11=trprg=trprg+tr*.24;
wave_2_per_point12=miprg=miprg+tr*.3;
wave_2_per_point13=
wave_2_per_point14=
wave_2_per_point15=dim =.5+.3*sin(miprg); //Dancer dimensions
wave_2_per_point16=xpos=0+.3*sin(trprg);//Dancer x position variation
wave_2_per_point17=ypos=0+.2*sin(baprg);//Dancer y position variation
wave_2_per_point18=
wave_2_per_point19=
wave_2_per_point20=
wave_2_per_point21=//Position Stabilization
wave_2_per_point22=xpos=xpos+(1-dim)/2;
wave_2_per_point23=ypos=ypos+(1-dim)/2;
wave_2_per_point24=
wave_2_per_point25=meanbass = 0.01*(meanbass*99+bass);
wave_2_per_point26=meantreb = 0.01*(meantreb*99+treb);
wave_2_per_point27=meanmid = 0.01*(meanmid*99+mid);
wave_2_per_point28=bassdiff = (bass - meanbass)*15;
wave_2_per_point29=trebdiff = (treb - meantreb)*15;
wave_2_per_point30=middiff = (mid - meanmid)*15;
wave_2_per_point31=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
wave_2_per_point32=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
wave_2_per_point33=mi = min(above(middiff,0)*middiff*.005,.11);
wave_2_per_point34=
wave_2_per_point35=mi2_prg = mi2_prg+mi;
wave_2_per_point36=gam = abs(gam-above(mi2_prg,5));
wave_2_per_point37=mi2_prg= if(above(mi2_prg,5),0,mi2_prg);
wave_2_per_point38=
wave_2_per_point39=s = sample *15;
wave_2_per_point40=//Gambe
wave_2_per_point41=x= if(equal(int(s),1),.4,.4);
wave_2_per_point42=y= if(equal(int(s),1),.2+((ba+tr)*.5)*gam,.2+((ba+tr)*.5)*gam);
wave_2_per_point43=
wave_2_per_point44=x= if(equal(int(s),2),.5+sin(ba*100)*.03,x);
wave_2_per_point45=y= if(equal(int(s),2),.4,y);
wave_2_per_point46=
wave_2_per_point47=x= if(equal(int(s),3),.6,x);
wave_2_per_point48=y= if(equal(int(s),3),.2+((ba+tr)*.5)*(1-gam),y);
wave_2_per_point49=
wave_2_per_point50=x= if(equal(int(s),4),.5+sin(ba*100)*.03,x);
wave_2_per_point51=y= if(equal(int(s),4),.4,y);
wave_2_per_point52=
wave_2_per_point53=//Corpo
wave_2_per_point54=x= if(equal(int(s),5),.5,x);
wave_2_per_point55=y= if(equal(int(s),5),.6,y);
wave_2_per_point56=
wave_2_per_point57=//Braccia
wave_2_per_point58=x= if(equal(int(s),6),.4-mi*.23,x);
wave_2_per_point59=y= if(equal(int(s),6),.5+mi,y);
wave_2_per_point60=
wave_2_per_point61=x= if(equal(int(s),7),.5,x);
wave_2_per_point62=y= if(equal(int(s),7),.6,y);
wave_2_per_point63=
wave_2_per_point64=x= if(equal(int(s),8),.6+tr*.23,x);
wave_2_per_point65=y= if(equal(int(s),8),.5+tr,y);
wave_2_per_point66=
wave_2_per_point67=x= if(equal(int(s),9),.5,x);
wave_2_per_point68=y= if(equal(int(s),9),.6,y);
wave_2_per_point69=
wave_2_per_point70=//Testa
wave_2_per_point71=x= if(equal(int(s),10),.5,x);
wave_2_per_point72=y= if(equal(int(s),10),.62,y);
wave_2_per_point73=
wave_2_per_point74=x= if(equal(int(s),11),.47-ba*.23,x);
wave_2_per_point75=y= if(equal(int(s),11),.62,y);
wave_2_per_point76=x= if(equal(int(s),12),.47-ba*.23,x);
wave_2_per_point77=y= if(equal(int(s),12),.67+ba*.23,y);
wave_2_per_point78=
wave_2_per_point79=x= if(equal(int(s),13),.53+ba*.23,x);
wave_2_per_point80=y= if(equal(int(s),13),.67+ba*.23,y);
wave_2_per_point81=
wave_2_per_point82=x= if(equal(int(s),14),.53+ba*.23,x);
wave_2_per_point83=y= if(equal(int(s),14),.62,y);
wave_2_per_point84=
wave_2_per_point85=x= if(equal(int(s),15),.50,x);
wave_2_per_point86=y= if(equal(int(s),15),.62,y);
wave_2_per_point87=
wave_2_per_point88=x=x*dim+xpos;
wave_2_per_point89=y=y*dim+ypos;
wave_2_per_point90=
wave_2_per_point91=mi_prg= if(above(mi_prg,5),0,mi_prg+mi*.1);
wave_2_per_point92=ba_prg= if(above(ba_prg,5),0,ba_prg+ba*.1);
wave_2_per_point93=tr_prg= if(above(tr_prg,5),0,tr_prg+tr*.1);
wave_2_per_point94=
wave_2_per_point95=hm=sample+mi2_prg;
wave_2_per_point96=ht=sample+tr_prg;
wave_2_per_point97=hb=sample+ba_prg;
wave_2_per_point98=
wave_2_per_point99=r=hm;
wave_2_per_point100=g=ht;
wave_2_per_point101=b=hb;
wave_2_per_point102=a=.8;
wavecode_3_enabled=1
wavecode_3_samples=16
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_frame1=
wave_3_per_frame2=rx=at
wave_3_per_point1=meanbass = 0.01*(meanbass*99+bass);
wave_3_per_point2=meantreb = 0.01*(meantreb*99+treb);
wave_3_per_point3=meanmid = 0.01*(meanmid*99+mid);
wave_3_per_point4=bassdiff = (bass - meanbass)*15;
wave_3_per_point5=trebdiff = (treb - meantreb)*15;
wave_3_per_point6=middiff = (mid - meanmid)*15;
wave_3_per_point7=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
wave_3_per_point8=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
wave_3_per_point9=mi = min(above(middiff,0)*middiff*.005,.11);
wave_3_per_point10=baprg=baprg+ba*.26;
wave_3_per_point11=trprg=trprg+tr*.34;
wave_3_per_point12=miprg=miprg+tr*.125;
wave_3_per_point13=
wave_3_per_point14=
wave_3_per_point15=dim =.5+.4*sin(trprg); //Dancer dimensions
wave_3_per_point16=xpos=0+.3*sin(baprg);//Dancer x position variation
wave_3_per_point17=ypos=0+.2*sin(miprg);//Dancer y position variation
wave_3_per_point18=
wave_3_per_point19=
wave_3_per_point20=
wave_3_per_point21=//Position Stabilization
wave_3_per_point22=xpos=xpos+(1-dim)/2;
wave_3_per_point23=ypos=ypos+(1-dim)/2;
wave_3_per_point24=
wave_3_per_point25=meanbass = 0.01*(meanbass*99+bass);
wave_3_per_point26=meantreb = 0.01*(meantreb*99+treb);
wave_3_per_point27=meanmid = 0.01*(meanmid*99+mid);
wave_3_per_point28=bassdiff = (bass - meanbass)*15;
wave_3_per_point29=trebdiff = (treb - meantreb)*15;
wave_3_per_point30=middiff = (mid - meanmid)*15;
wave_3_per_point31=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
wave_3_per_point32=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
wave_3_per_point33=mi = min(above(middiff,0)*middiff*.005,.11);
wave_3_per_point34=
wave_3_per_point35=mi2_prg = mi2_prg+mi;
wave_3_per_point36=gam = abs(gam-above(mi2_prg,5));
wave_3_per_point37=mi2_prg= if(above(mi2_prg,5),0,mi2_prg);
wave_3_per_point38=
wave_3_per_point39=s = sample *15;
wave_3_per_point40=//Gambe
wave_3_per_point41=x= if(equal(int(s),1),.4,.4);
wave_3_per_point42=y= if(equal(int(s),1),.2+((ba+tr)*.5)*gam,.2+((ba+tr)*.5)*gam);
wave_3_per_point43=
wave_3_per_point44=x= if(equal(int(s),2),.5+sin(ba*100)*.03,x);
wave_3_per_point45=y= if(equal(int(s),2),.4,y);
wave_3_per_point46=
wave_3_per_point47=x= if(equal(int(s),3),.6,x);
wave_3_per_point48=y= if(equal(int(s),3),.2+((ba+tr)*.5)*(1-gam),y);
wave_3_per_point49=
wave_3_per_point50=x= if(equal(int(s),4),.5+sin(ba*100)*.03,x);
wave_3_per_point51=y= if(equal(int(s),4),.4,y);
wave_3_per_point52=
wave_3_per_point53=//Corpo
wave_3_per_point54=x= if(equal(int(s),5),.5,x);
wave_3_per_point55=y= if(equal(int(s),5),.6,y);
wave_3_per_point56=
wave_3_per_point57=//Braccia
wave_3_per_point58=x= if(equal(int(s),6),.4-mi*.23,x);
wave_3_per_point59=y= if(equal(int(s),6),.5+mi,y);
wave_3_per_point60=
wave_3_per_point61=x= if(equal(int(s),7),.5,x);
wave_3_per_point62=y= if(equal(int(s),7),.6,y);
wave_3_per_point63=
wave_3_per_point64=x= if(equal(int(s),8),.6+tr*.23,x);
wave_3_per_point65=y= if(equal(int(s),8),.5+tr,y);
wave_3_per_point66=
wave_3_per_point67=x= if(equal(int(s),9),.5,x);
wave_3_per_point68=y= if(equal(int(s),9),.6,y);
wave_3_per_point69=
wave_3_per_point70=//Testa
wave_3_per_point71=x= if(equal(int(s),10),.5,x);
wave_3_per_point72=y= if(equal(int(s),10),.62,y);
wave_3_per_point73=
wave_3_per_point74=x= if(equal(int(s),11),.47-ba*.23,x);
wave_3_per_point75=y= if(equal(int(s),11),.62,y);
wave_3_per_point76=x= if(equal(int(s),12),.47-ba*.23,x);
wave_3_per_point77=y= if(equal(int(s),12),.67+ba*.23,y);
wave_3_per_point78=
wave_3_per_point79=x= if(equal(int(s),13),.53+ba*.23,x);
wave_3_per_point80=y= if(equal(int(s),13),.67+ba*.23,y);
wave_3_per_point81=
wave_3_per_point82=x= if(equal(int(s),14),.53+ba*.23,x);
wave_3_per_point83=y= if(equal(int(s),14),.62,y);
wave_3_per_point84=
wave_3_per_point85=x= if(equal(int(s),15),.50,x);
wave_3_per_point86=y= if(equal(int(s),15),.62,y);
wave_3_per_point87=
wave_3_per_point88=x=x*dim+xpos;
wave_3_per_point89=y=y*dim+ypos;
wave_3_per_point90=
wave_3_per_point91=mi_prg= if(above(mi_prg,5),0,mi_prg+mi*.1);
wave_3_per_point92=ba_prg= if(above(ba_prg,5),0,ba_prg+ba*.1);
wave_3_per_point93=tr_prg= if(above(tr_prg,5),0,tr_prg+tr*.1);
wave_3_per_point94=
wave_3_per_point95=hm=sample+mi2_prg;
wave_3_per_point96=ht=sample+tr_prg;
wave_3_per_point97=hb=sample+ba_prg;
wave_3_per_point98=
wave_3_per_point99=r=hm;
wave_3_per_point100=g=ht;
wave_3_per_point101=b=hb;
wave_3_per_point102=a=.8;
shapecode_0_enabled=0
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.840
shapecode_0_y=0.740
shapecode_0_rad=0.28999
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.32129
shapecode_0_r=0.100
shapecode_0_g=0.500
shapecode_0_b=0.500
shapecode_0_a=1.000
shapecode_0_r2=0.100
shapecode_0_g2=0.500
shapecode_0_b2=0.400
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=meantreb = 0.01*(meantreb*99+treb);
shape_0_per_frame2=trebdiff = (treb - meantreb)*15;
shape_0_per_frame3=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
shape_0_per_frame4=
shape_0_per_frame5=tr_prg= tr_prg+tr;
shape_0_per_frame6=
shape_0_per_frame7=tex_ang =-tr_prg;
shapecode_1_enabled=0
shapecode_1_sides=100
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.150
shapecode_1_y=0.730
shapecode_1_rad=0.51133
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.36133
shapecode_1_r=0.600
shapecode_1_g=0.600
shapecode_1_b=0.200
shapecode_1_a=1.000
shapecode_1_r2=0.600
shapecode_1_g2=0.600
shapecode_1_b2=0.210
shapecode_1_a2=0.900
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=meanbass = 0.01*(meanbass*99+bass);
shape_1_per_frame2=bassdiff = (bass - meanbass)*15;
shape_1_per_frame3=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
shape_1_per_frame4=
shape_1_per_frame5=
shape_1_per_frame6=ba_prg= ba_prg+ba;
shape_1_per_frame7=
shape_1_per_frame8=tex_ang =-ba_prg;
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=fade = .5;
per_frame_1=dec_med = pow (0.9, 30/fps);
per_frame_2=dec_slow = pow (0.99, 30/fps);
per_frame_3=beat = max (max (bass, mid), treb); 
per_frame_4=avg = avg*dec_slow + beat*(1-dec_slow);
per_frame_5=is_beat = above(beat, .5+avg+peak) * above (time, t0+.2);
per_frame_6=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_7=peak = is_beat * beat + (1-is_beat)*peak*dec_med;
per_frame_8=index = (index + is_beat) %8;
per_frame_9=
per_frame_10=q20 = avg;
per_frame_11=q21 = beat;
per_frame_12=q22 = peak;
per_frame_13=q23 = index;
per_frame_14=q24 = is_beat;
per_frame_15=q26 = bass + mid + treb;
per_frame_16=
per_frame_17=k1 =  is_beat*equal(index,0);
per_frame_18=p1 =  k1*(p1+1) + (1-k1)*p1;
per_frame_19=p2 = dec_med * p2+ (1-dec_med)*p1;
per_frame_20=rott = p2 * 3.14159265358/2;
per_frame_21=q27 = index + 1;
per_frame_22=
per_frame_23=q1 = cos(rott);
per_frame_24=q2 = sin(rott);
per_frame_25=q3 = -q2;
per_frame_26=q4 = q1;
per_frame_27=
per_frame_28=zoom = 1.0;
per_frame_29=rot = -0.00 * index;
per_frame_30=
per_frame_31=fade = fade*dec_med + pow(0.996, 30/fps) * (1-dec_med);
per_frame_32=q32 = fade;
warp_1=`sampler sampler_pw_noise_lq;
warp_2=`sampler sampler_shub1;
warp_3=`shader_body {
warp_4=`float corr = texsize.xy*texsize_noise_lq.zw;
warp_5=`float2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;
warp_6=`
warp_7=`float4 ra = float4 (1,-1,1,1);
warp_8=`//uv1 = mul (uv1,ra);
warp_9=`
warp_10=`float2 tmp = uv1;
warp_11=`
warp_12=`tmp.x = .1*sin(uv1.x*127) + .0;
warp_13=`tmp.y = .1*sin(uv1.y*127) + .0;
warp_14=`uv1 = tmp;
warp_15=`
warp_16=`
warp_17=`
warp_18=`float3 ret1 = clamp((GetBlur1(uv))-1,-.1,.1);
warp_19=`
warp_20=`float2 h1 = 1*uv1.xy + 0*uv1.yx;
warp_21=`float3 crisp = tex2D(sampler_main, uv-lum(ret1.yx)*.4*(sin(h1)) ) ;
warp_22=`
warp_23=`float3 blur = GetBlur1 (uv+float2(1*ret1.x,ret1.y)*0) ;
warp_24=`
warp_25=`ret = saturate( crisp);
warp_26=`    
warp_27=` ret *= 0.99 ; 
warp_28=`  ret -= 0.005;
warp_29=`}
comp_1=`#define sat saturate
comp_2=`float z, z0, radi;
comp_3=`float2 uv1, uv2, uva, dz;
comp_4=`static const int anz = 27;
comp_5=`static const float2 moonpos = 0.4;
comp_6=`static const float2 hor = texsize.zw*float2(1,0);
comp_7=`static const float2 ver = texsize.zw*float2(1,0).yx;
comp_8=`float3 Get1 (float2 uvi, float par)
comp_9=`{return lerp(GetBlur1(uvi), GetPixel(uvi), saturate(par/2))*par;}
comp_10=`
comp_11=`shader_body {
comp_12=`uva = (uv-0.5)*aspect.xy+0.5;
comp_13=`float moon = (.01 / length (uva-moonpos));
comp_14=`
comp_15=`dz.x = lum(GetPixel(uv-hor)) - lum(GetPixel(uv+hor));
comp_16=`dz.y = lum(GetPixel(uv-ver)) - lum(GetPixel(uv+ver));
comp_17=`
comp_18=`float3 shine = GetPixel(uv); 
comp_19=`uv2 = (uv-moonpos)*1.4 + moonpos;
comp_20=`//shine += (pow(GetPixel(uv2),2))/2;
comp_21=`
comp_22=`radi = 1;
comp_23=`for (int n=1; n <= anz; n++)
comp_24=`{ 
comp_25=`  uv2 = (normalize(uv-moonpos)*radi+moonpos);
comp_26=`  shine += 2.0/anz*Get1((uv-moonpos)*radi+moonpos,radi);
comp_27=`  radi -= 0.75/anz;;
comp_28=`}
comp_29=`ret = max(shine,0*GetPixel(uv));
comp_30=`//ret = shine+GetPixel(uv);
comp_31=`
comp_32=`}
comp_33=`written by martin
comp_34=`END

MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=0
PSVERSION_COMP=3
[preset00]
fRating=5.000
fGammaAdj=1.910
fDecay=0.960
fVideoEchoZoom=0.997
fVideoEchoAlpha=0.500
nVideoEchoOrientation=1
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=4.100
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=0.691
fWarpScale=2.280
fZoomExponent=1.00000
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=67.16532
sx=1.10462
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=51
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=1
wavecode_0_scaling=1.32735
wavecode_0_smoothing=0.82000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=3.000
wavecode_0_a=1.000
wave_0_per_frame1=tm = rand(101)*.01*6.24;
wave_0_per_frame2=dt = rand(101)*.01;
wave_0_per_frame3=
wave_0_per_frame4=
wave_0_per_frame5=t1 = .5 + .5*sin(tm)*dt;
wave_0_per_frame6=t2 = .5 + .5*cos(tm)*dt;
wave_0_per_frame7=
wave_0_per_frame8=r = .5 + .5*sin(time*1.132);
wave_0_per_frame9=g = .5 + .5*sin(time*1.121);
wave_0_per_frame10=b = .5 + .5*sin(time*1.187);
wave_0_per_point1=sp = int(sample*4);
wave_0_per_point2=sw = equal(it%2,0);
wave_0_per_point3=it = if(equal(sample,0),0,it + 1);
wave_0_per_point4=
wave_0_per_point5=mod = bass;
wave_0_per_point6=
wave_0_per_point7=ax = t1 + sin(sample*6.28)*mod*.1;
wave_0_per_point8=ay = t2 + cos(sample*6.28)*mod*.1;
wave_0_per_point9=bx = t1 + sin(sample*6.28)*mod*.005;
wave_0_per_point10=by = t2 + cos(sample*6.28)*mod*.005;
wave_0_per_point11=
wave_0_per_point12=x = if(sw,bx,ax);
wave_0_per_point13=y = if(sw,by,ay);
wave_0_per_point14=
wave_0_per_point15=a = if(sw,equal(rand(7),0)*.1,0);
wave_0_per_point16=
wave_0_per_point17=a = sw*.2;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=51
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=1.32735
wavecode_1_smoothing=0.82000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=3.000
wavecode_1_a=1.000
wave_1_per_frame1=tm = rand(101)*.01*6.24;
wave_1_per_frame2=dt = rand(101)*.01;
wave_1_per_frame3=
wave_1_per_frame4=
wave_1_per_frame5=t1 = .5 + .5*sin(tm)*dt;
wave_1_per_frame6=t2 = .5 + .5*cos(tm)*dt;
wave_1_per_frame7=
wave_1_per_frame8=r = .5 + .5*sin(time*1.132);
wave_1_per_frame9=g = .5 + .5*sin(time*1.121);
wave_1_per_frame10=b = .5 + .5*sin(time*1.187);
wave_1_per_point1=sp = int(sample*4);
wave_1_per_point2=sw = equal(it%2,0);
wave_1_per_point3=it = if(equal(sample,0),0,it + 1);
wave_1_per_point4=
wave_1_per_point5=mod = treb;
wave_1_per_point6=
wave_1_per_point7=ax = t1 + sin(sample*6.28)*mod*.1;
wave_1_per_point8=ay = t2 + cos(sample*6.28)*mod*.1;
wave_1_per_point9=bx = t1 + sin(sample*6.28)*mod*.005;
wave_1_per_point10=by = t2 + cos(sample*6.28)*mod*.005;
wave_1_per_point11=
wave_1_per_point12=x = if(sw,bx,ax);
wave_1_per_point13=y = if(sw,by,ay);
wave_1_per_point14=
wave_1_per_point15=a = if(sw,equal(rand(7),0)*.1,0);
wave_1_per_point16=
wave_1_per_point17=a = sw*.2;
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=51
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=1.32735
wavecode_2_smoothing=0.82000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=3.000
wavecode_2_a=1.000
wave_2_per_frame1=tm = rand(101)*.01*6.24;
wave_2_per_frame2=dt = rand(101)*.01;
wave_2_per_frame3=
wave_2_per_frame4=t1 = .5 + .5*sin(tm)*dt;
wave_2_per_frame5=t2 = .5 + .5*cos(tm)*dt;
wave_2_per_frame6=
wave_2_per_frame7=r = .5 + .5*sin(time*1.132);
wave_2_per_frame8=g = .5 + .5*sin(time*1.121);
wave_2_per_frame9=b = .5 + .5*sin(time*1.187);
wave_2_per_point1=sp = int(sample*4);
wave_2_per_point2=sw = equal(it%2,0);
wave_2_per_point3=it = if(equal(sample,0),0,it + 1);
wave_2_per_point4=
wave_2_per_point5=ax = t1 + sin(sample*6.28)*mid*.1;
wave_2_per_point6=ay = t2 + cos(sample*6.28)*mid*.1;
wave_2_per_point7=bx = t1 + sin(sample*6.28)*mid*.005;
wave_2_per_point8=by = t2 + cos(sample*6.28)*mid*.005;
wave_2_per_point9=
wave_2_per_point10=x = if(sw,bx,ax);
wave_2_per_point11=y = if(sw,by,ay);
wave_2_per_point12=
wave_2_per_point13=a = if(sw,equal(rand(7),0)*.1,0);
wave_2_per_point14=
wave_2_per_point15=a = sw*.2
per_frame_init_1=mv_x=64;mv_y=48;
per_frame_init_2=nut=0;
per_frame_init_3=stp=0;stq=0;
per_frame_init_4=rtp=0;rtq=0;
per_frame_init_5=wvr=0;
per_frame_init_6=decay=0;
per_frame_init_7=dcsp=0;
per_frame_init_8=warp=0
per_frame_init_9=
per_frame_1=//krash's beat detection code
per_frame_2=volume = 0.3*(bass+mid+att);
per_frame_3=beatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);
per_frame_4=lastbeat = lastbeat + equal(lastbeat,0)*time;
per_frame_5=meanbass_att = 0.1*(meanbass_att*9 + bass_att);
per_frame_6=peakbass_att = max(bass_att,peakbass_att);
per_frame_7=beatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);
per_frame_8=peakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);
per_frame_9=lastbeat = beat*time + (1-beat)*lastbeat;
per_frame_10=peakbass_att = max(peakbass_att,1.1*meanbass_att);
per_frame_11=beat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));
per_frame_12=beatcounter = beatcounter + beat;
per_frame_13=mode = if(beat*equal(beatcounter%2,0),1-mode,mode);
per_frame_14=flip = 2*mode-1;
per_frame_15=monitor=flip;
per_frame_16=q8=flip;
per_frame_17=
per_frame_18=
per_frame_19=decay=1;
per_frame_20=//zoom=1.002;
per_frame_21=
per_frame_22=vol=(bass_att+mid_att+treb_att)*0.25;
per_frame_23=vol=vol*vol;
per_frame_24=mtime=mtime+vol*0.05*flip;
per_frame_25=
per_frame_26=q1=mtime*0.4;
per_frame_27=
per_frame_28=
per_frame_29=musictime=musictime+(mid*mid*mid*mid)*0.01*flip;
per_frame_30=
per_frame_31=xpos=sin(musictime*0.6)*0.3;
per_frame_32=ypos=sin(musictime*0.4)*0.3;
per_frame_33=q4=xpos;
per_frame_34=q5=ypos;
per_frame_35=
per_frame_36=warp=0.0
per_pixel_1=cx=0.5+q4;
per_pixel_2=cy=0.5-q5;
per_pixel_3=rd=sqrt( sqr( (x-0.5-q4)*2) + sqr( (y-0.5+q5)*1.5 ) );
per_pixel_4=zm=(1-(rd/5));
per_pixel_5=sx=zm;
per_pixel_6=sy=zm;
per_pixel_7=//rot=above(rd,0.7)*(rd-0.7)*sin(time*0.3);
per_pixel_8=
per_pixel_9=
per_pixel_10=
per_pixel_11=tm=time+(sin(time)*rad);
per_pixel_12=var=tan(tm+time)*treb;
per_pixel_13=
per_pixel_14=zoom=.91+(rd/100)+0.1;
per_pixel_15=//rot=((rad/100)+(var/400))*sin(time);
comp_1=`sampler sampler_pw_noise_lq;
comp_2=`float2 uv0, uv1, uv2,uv4,rsk,dz1,Kugel1;;
comp_3=`static const float sw1 =  (rand_preset.x) >= .4;
comp_4=`static const float sw2 =  (rand_preset.y);
comp_5=`
comp_6=`shader_body {
comp_7=`uv0 = uv;
comp_8=`uv2 = float2(.2/rad+time/4,ang/3.14)*2;
comp_9=`float mod = length(sin(uv2*3.141/2+time*.1));
comp_10=`float2 noise = tex2D (sampler_noise_hq,uv2+mod).rg;
comp_11=`float mask = (noise.r <= sw2);
comp_12=`float2 rohr = sw1*rad * (noise-.5) /2*mask;
comp_13=`
comp_14=`uv1 = float2(1-uv.x,uv.y);
comp_15=`ret =  GetPixel(uv)+GetPixel(uv1);
comp_16=`
comp_17=`float3 back = .2*(.5+(uv.x-.5)*q1+(uv.y-.5)*q2);
comp_18=`uv+= rohr * sw1;
comp_19=`
comp_20=`uv1 = float2(1-uv.x,uv.y);
comp_21=`ret += (GetBlur2(uv) + GetBlur2(uv1)) *min(.5+treb_att/4,2) *(1+1*sw1) * saturate(1-lum(ret)/2);
comp_22=`ret += !sw1*back;
comp_23=`ret = lerp(ret*(hue_shader*2-1),ret,lum(ret));;
comp_24=`//ret = GetPixel(uv);
comp_25=`float4 noise2 = tex3D(sampler_noisevol_hq, 
comp_26=`                      ((uv_orig.xyy+float3(lum(roam_sin.xy),
comp_27=`                                           lum(roam_cos.yx),
comp_28=`                                           0)*0.5
comp_29=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_30=`                      ).xyz*
comp_31=`                      float3(1,1,0)*0.05 + 
comp_32=`                      time*float3(0,0,1)*0.2 );
comp_33=`ret *= (noise2)*1; 
comp_34=`}

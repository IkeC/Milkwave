MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=5.000
fGammaAdj=1.900
fDecay=0.980
fVideoEchoZoom=1.169
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=6
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.004
fWaveScale=0.418
fWaveSmoothing=0.000
fWaveParam=0.000
fModWaveAlphaStart=1.400
fModWaveAlphaEnd=1.400
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00016
fShader=0.000
zoom=1.00022
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00000
sx=1.00000
sy=1.00000
wave_r=1.000
wave_g=1.000
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.100
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.150
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.850
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=q4=sin(atime*.03);
per_frame_25=q5=cos(atime*.030383824);
per_frame_26=q6=tan(atime*.029384834);
per_frame_27=
per_frame_28=
per_frame_29=monitor=mq1;
per_frame_30=// timed sidon sensor
per_frame_31=// le = signal level; desired average value = 2
per_frame_32=le=1.4*bass_att+.1*bass+.5*treb;
per_frame_33=pulse=above(le,th);
per_frame_34=// pulsefreq = running average of interval between last 5 pulses
per_frame_35=pulsefreq=if(equal(pulsefreq,0),2,
per_frame_36=if(pulse,.8*pulsefreq+.2*(time-lastpulse),pulsefreq));
per_frame_37=lastpulse=if(pulse,time,lastpulse);
per_frame_38=// bt = relative time; 0 = prev beat; 1 = expected beat
per_frame_39=bt=(time-lastbeat)/(.5*beatfreq+.5*pulsefreq);
per_frame_40=// hccp = handcicap for th driven by bt
per_frame_41=hccp=(.03/(bt+.2))+.5*if(band(above(bt,.8),below(bt,1.2)),
per_frame_42=(pow(sin((bt-1)*7.854),4)-1),0);
per_frame_43=beat=band(above(le,th+hccp),btblock);
per_frame_44=btblock=1-above(le,th+hccp);
per_frame_45=lastbeat=if(beat,time,lastbeat);
per_frame_46=beatfreq=if(equal(beatfreq,0),2,
per_frame_47=if(beat,.8*beatfreq+.2*(time-lastbeat),beatfreq));
per_frame_48=// th = threshold
per_frame_49=th=if(above(le,th),le+114/(le+10)-7.407,
per_frame_50=th+th*.07/(th-12)+below(th,2.7)*.1*(2.7-th));
per_frame_51=th=if(above(th,6),6,th);
per_frame_52=
per_frame_53=q8=10/fps;
per_frame_54=ccl=ccl+beat;
per_frame_55=minorccl=minorccl+q8*le;
per_frame_56=
per_frame_57=q5=ccl+.0032*minorccl;
per_frame_58=q6=ccl;
per_frame_59=
per_frame_60=ccx=if(beat,.5+.2*sin(int(rand(354))),ccx);
per_frame_61=cx=ccx+.1*sin(.01*minorccl);
per_frame_62=q1=ccx;
per_frame_63=ccy=if(beat,.5+.2*sin(int(rand(354))),ccy);
per_frame_64=cy=ccx+.1*sin(.013*minorccl);
per_frame_65=q2=ccy;
per_frame_66=q3=4/th;
per_frame_67=q4=.01*minorccl;
per_frame_68=q7=th;
per_frame_69=
per_frame_70=decay=1-q8*.02;
per_frame_71=monitor=decay;
per_frame_72=
per_frame_73=
per_frame_74=wx=if(pulse,int(rand(10))*.1,wx);
per_frame_75=wave_x=wx;
per_frame_76=wy=if(pulse,int(rand(10))*.1,wy);
per_frame_77=wave_y=wy;
per_frame_78=wm=if(pulse,int(rand(20))*.1-1,wm);
per_frame_79=wave_mystery=wm;
per_frame_80=
per_frame_81=mv_r=.5+.2*sin(q5)+.3*sin(q5*36.2);
per_frame_82=mv_g=.5+.2*sin(q5+2.09)+.3*sin(q5*38.7);
per_frame_83=mv_b=.5+.2*sin(q5+4.18)+.3*sin(q5*37.4);
per_frame_84=wave_r=.5+.5*sin(q5*36.2);
per_frame_85=wave_g=.5+.5*sin(q5*38.7);
per_frame_86=wave_b=.5+.5*sin(q5*37.4);
per_pixel_1=// coordinates transfomation
per_pixel_2=// q1,q2 = position; q3 = 1/zoom; q4 = rotation
per_pixel_3=aang=atan2(y-q2,x-q1)+q4;
per_pixel_4=arad=sqrt(sqr(y-q2)+sqr(x-q1))*q3;
per_pixel_5=
per_pixel_6=radsector=(arad*4)%3;
per_pixel_7=angsector=(aang*1.273)%8;
per_pixel_8=
per_pixel_9=zoom=1+q8*.1*sin(14*(angsector%4)*q6+radsector*q5);
per_pixel_10=rot=.1*q8*sin(q7)*sin(1.3*angsector*q5+2.7*radsector*q6);
warp_1=`shader_body
warp_2=`{
warp_3=`uv = lerp( uv_orig,uv,0.2);
warp_4=`
warp_5=`float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw*1.5 + rand_frame.xy;
warp_6=`uv  -= (float2(0,1)*(lum(GetPixel(uv)-0.35))*texsize.zw*32)*(lum(GetPixel(uv))-0.4);
warp_7=`ret  = GetPixel(saturate(uv)) - 0.0011 + (tex2D(sampler_noise_lq, dither_uv)-0.5)*0.0038;    
warp_8=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    uv = 0.05 + 0.9*uv;
comp_4=`
comp_5=`ret = GetPixel(uv);
comp_6=`    uv += -.05*tan(3*(ret.zz+ret.yx));
comp_7=`    
comp_8=`
comp_9=`    // equivalent of a laplacian: [center*4 - each of the 4 neighbors*1]
comp_10=`    ret = 0;
comp_11=`    ret += tex2D(sampler_main, uv ).xyz*4;
comp_12=`    ret -= GetBlur1(uv)*3;
comp_13=`
comp_14=`    // little bit of noise:
comp_15=`    ret *= 1 + 0.12*(tex2D(sampler_noise_lq, rand_frame.xy 
comp_16=`           + uv*texsize.xy*texsize_noise_lq.zw).xxx*2-1);
comp_17=` 
comp_18=`    // palettize:
comp_19=`    ret = pow(ret, float3(0.5, 0.5, 0.7));
comp_20=`float4 noise2 = tex3D(sampler_noisevol_hq, 
comp_21=`                      ((uv.xyy*.6
comp_22=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_23=`                      ).xyz*
comp_24=`                      float3(1,1,0)*0.05 + 
comp_25=`                      time*float3(0,0,1)*0.2
comp_26=`                     );
comp_27=`ret -= (noise2)*.5; 
comp_28=`
comp_29=`    ret = (ret-0.1)*1.1;
comp_30=`   
comp_31=`    //ret.xyz *= 2; // a little bit of overbright
comp_32=`//ret=1-ret;
comp_33=`}
comp_34=`
comp_35=`
